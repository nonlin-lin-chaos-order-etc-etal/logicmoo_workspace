% From E: 
% 
% ':-'(call_pel_directive(translate(unskipped,'/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e.lps'))).
:- call_pel_directive(translate(unskipped,
                                '/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e.lps')).
:-include(library('ec_planner/ec_test_incl')).
:-expects_dialect(lps).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_ecnet.e',4640).
% From E: 
% 
% ':-'(call_pel_directive(translate(begining,'/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e.lps'))).
:- call_pel_directive(translate(begining,
                                '/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e.lps')).
% Tue, 23 Mar 2021 19:07:13 GMT File: <stream>(0x555567c0fe00)%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%; FILE: examples/Mueller2004a/Holding.e
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; @article{Mueller:2004a,
%;   author = "Erik T. Mueller",
%;   year = "2004",
%;   title = "Event calculus reasoning through satisfiability",
%;   journal = "Journal of Logic and Computation",
%;   volume = "14",
%;   number = "5",
%;   pages = "703--730",
%; }
%;

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',28).
% option encoding 3
% From E: 
% 
% ':-'(call_pel_directive(option(encoding,3))).
:- call_pel_directive(option(encoding, 3)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',30).
% load foundations/Root.e
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/Root.e'))).
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',30).
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/EC.e'))).
:- call_pel_directive(load('foundations/EC.e')).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',33).
% sort person
% From E: 
% 
% sort(person).
sort(person).

% sort object
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',33).
% From E: 
% 
% sort(object).
sort(object).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',36).
% event Hold(person,object)
% From E: 
% 
% event(hold(person,object)).
mpred_prop(hold(person,object),event).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',36).
events([hold/2]).

% fluent Holding(person,object)
% From E: 
% 
% fluent(holding(person,object)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',36).
mpred_prop(holding(person,object),fluent).
fluents([holding/2]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',39).
% person P1
% From E: 
% 
% t(person,p1).
isa(p1,person).

% object O1
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',39).
% From E: 
% 
% t(object,o1).
isa(o1,object).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',42).
% Happens(Hold(P1,O1),0).
% From E: 
% 
% happens(
%    hold(p1,o1), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',42).
observe(at(hold(p1,o1),0)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',44).
% [person,object,time]
% Initiates(Hold(person,object),Holding(person,object),time).
% From E: 
% 
% initiates_at(
%    hold(Person,Object), 
%    holding(Person,Object), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',44).
initiates(hold(Person,Object),
	  holding(Person,Object)).


% !HoldsAt(Holding(P1,O1),0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',46).
% From E: 
% 
% holds(
%    not(holding(p1,o1)), 0).
initially(not(holding(p1,o1))).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',48).
%;;; AUTO !ReleasedAt(Holding(P1,O1),0).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',50).
% completion Happens
% From E: 
% 
% ':-'(call_pel_directive(completion(happens))).
:- call_pel_directive(completion(happens)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',52).
% range time 0 1
% From E: 
% 
% ':-'(call_pel_directive(range(time,0,1))).
:- call_pel_directive(range(time, 0, 1)).

% range offset 1 1
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',52).
% From E: 
% 
% ':-'(call_pel_directive(range(offset,1,1))).
:- call_pel_directive(range(offset, 1, 1)).
%; End of file.
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%; FILE: examples/Mueller2004a/Leaf.e
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; @article{Mueller:2004a,
%;   author = "Erik T. Mueller",
%;   year = "2004",
%;   title = "Event calculus reasoning through satisfiability",
%;   journal = "Journal of Logic and Computation",
%;   volume = "14",
%;   number = "5",
%;   pages = "703--730",
%; }
%;

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',83).
% option trajectory on
% From E: 
% 
% ':-'(call_pel_directive(option(trajectory,on))).
:- call_pel_directive(option(trajectory, on)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',85).
% load foundations/Root.e
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/Root.e'))).
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',85).
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/EC.e'))).
:- call_pel_directive(load('foundations/EC.e')).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',88).
% sort object
% From E: 
% 
% sort(object).
sort(object).

% sort height: integer
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',88).
% From E: 
% 
% subsort(height,integer).
subsort(height,integer).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',91).
% fluent Height(object,height)
% From E: 
% 
% fluent(height(object,height)).
mpred_prop(height(object,height),fluent).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',91).
fluents([height/2]).

% fluent Falling(object)
% From E: 
% 
% fluent(falling(object)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',91).
mpred_prop(falling(object),fluent).
fluents([falling/1]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',93).
% event StartFalling(object)
% From E: 
% 
% event(startFalling(object)).
mpred_prop(startFalling(object),event).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',93).
events([startFalling/1]).

% event HitsGround(object)
% From E: 
% 
% event(hitsGround(object)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',93).
mpred_prop(hitsGround(object),event).
events([hitsGround/1]).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',96).
% [object,height1,height2,time]
% HoldsAt(Height(object,height1),time) &
% HoldsAt(Height(object,height2),time) ->
% height1=height2.
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          height(Object,Height1), 
%          Time), 
%       holds(
%          height(Object,Height2), 
%          Time)), 
%    Height1=Height2).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',96).
if(equals(Height1, Height2),  (at(height(Object, Height1), Time), at(height(Object, Height2), Time))).


% [object,time]
% Initiates(StartFalling(object),Falling(object),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',102).
% From E: 
% 
% initiates_at(
%    startFalling(Object), 
%    falling(Object), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',102).
initiates(startFalling(Object),falling(Object)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',104).
% [object,height,time]
% Releases(StartFalling(object),Height(object,height),time).
% From E: 
% 
% releases_at(
%    startFalling(Object), 
%    height(Object,Height), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',104).
releases(startFalling(Object),height(Object,Height)).


% [object,height1,height2,offset,time]
% HoldsAt(Height(object,height1),time) &
% height2=height1-offset*offset ->
% Trajectory(Falling(object),time,Height(object,height2),offset).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',108).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          height(Object,Height1), 
%          Time), 
%       Height2=Height1-Offset*Offset), 
%    trajectory(
%       falling(Object), 
%       Time, 
%       height(Object,Height2), 
%       Offset)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',108).
if(trajectory(falling(Object), Time, height(Object, Height2), Offset),  (at(height(Object, Height1), Time), equals(Height2, Height1-Offset*Offset))).


% [object,time]
% HoldsAt(Falling(object),time) &
% HoldsAt(Height(object,0),time) ->
% Happens(HitsGround(object),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',113).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          falling(Object), 
%          Time), 
%       holds(
%          height(Object,0), 
%          Time)), 
%    happens(
%       hitsGround(Object), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',113).
if(happens(hitsGround(Object), Time),  (at(falling(Object), Time), at(height(Object, 0), Time))).


%;[object,height1,height2,time]
%;HoldsAt(Height(object,height1),time) &
%;height1 != height2 ->
%;Terminates(HitsGround(object),Height(object,height2),time).
% [object,height,time]
% HoldsAt(Height(object,height),time) ->
% Initiates(HitsGround(object),Height(object,height),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',122).
% From E: 
% 
% '->'(
%    holds(
%       height(Object,Height), 
%       Time), 
%    initiates_at(
%       hitsGround(Object), 
%       height(Object,Height), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',122).
if(initiates(hitsGround(Object),
	     at(height(Object,Height),Time)),
   at(height(Object,Height),Time)).


% [object,time]
% Terminates(HitsGround(object),Falling(object),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',127).
% From E: 
% 
% terminates_at(
%    hitsGround(Object), 
%    falling(Object), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',127).
terminates(hitsGround(Object),falling(Object)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',129).
% object Leaf
% From E: 
% 
% t(object,leaf).
isa(leaf,object).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',131).
% !HoldsAt(Falling(Leaf),0).
% From E: 
% 
% holds(
%    not(falling(leaf)), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',131).
initially(not(falling(leaf))).


% HoldsAt(Height(Leaf,9),0).
% From E: 
% 
% holds(
%    height(leaf,9), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',131).
initially(height(leaf,9)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',133).
% Happens(StartFalling(Leaf),0).
% From E: 
% 
% happens(
%    startFalling(leaf), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',133).
observe(at(startFalling(leaf),0)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',135).
% completion Happens
% From E: 
% 
% ':-'(call_pel_directive(completion(happens))).
:- call_pel_directive(completion(happens)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',137).
% range time 0 4
% From E: 
% 
% ':-'(call_pel_directive(range(time,0,4))).
:- call_pel_directive(range(time, 0, 4)).

% range offset 1 9
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',137).
% From E: 
% 
% ':-'(call_pel_directive(range(offset,1,9))).
:- call_pel_directive(range(offset, 1, 9)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',139).
% range height 0 9
% From E: 
% 
% ':-'(call_pel_directive(range(height,0,9))).
:- call_pel_directive(range(height, 0, 9)).
%; End of file.
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%; FILE: examples/Cassimatis2002/PolySpace.e
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; @phdthesis{Cassimatis:2002,
%;   author = "Nicholas L. Cassimatis",
%;   year = "2002",
%;   title = "Polyscheme: A Cognitive Architecture for Integrating Multiple Representation and Inference Schemes",
%;   address = "Cambridge, MA",
%;   school = "Program in Media Arts and Sciences, School of Architecture and Planning, Massachusetts Institute of Technology",
%; }
%;
%; sorts

% sort object
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',167).
% From E: 
% 
% sort(object).
sort(object).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',169).
% sort xcoord: integer
% From E: 
% 
% subsort(xcoord,integer).
subsort(xcoord,integer).

% sort ycoord: integer
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',169).
% From E: 
% 
% subsort(ycoord,integer).
subsort(ycoord,integer).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',171).
% sort grid
% From E: 
% 
% sort(grid).
sort(grid).

% sort shape
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',171).
% From E: 
% 
% sort(shape).
sort(shape).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',173).
% sort color
% From E: 
% 
% sort(color).
sort(color).
%; constants

% shape Round,Square
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',175).
% From E: 
% 
% t(shape,round).
isa(round,shape).
% From E: 
% 
% t(shape,square).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',175).
isa(square,shape).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',177).
% color Red,Green
% From E: 
% 
% t(color,red).
isa(red,color).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',177).
% From E: 
% 
% t(color,green).
isa(green,color).
%; predicates, fluents, and events

% predicate Equal(object,object)
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',179).
% From E: 
% 
% predicate(equal(object,object)).
mpred_prop(equal(object,object),predicate).
predicates([equal/2]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',181).
% predicate Shape(object,shape)
% From E: 
% 
% predicate(shape(object,shape)).
mpred_prop(shape(object,shape),predicate).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',181).
predicates([shape/2]).

% predicate Color(object,color)
% From E: 
% 
% predicate(color(object,color)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',181).
mpred_prop(color(object,color),predicate).
predicates([color/2]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',183).
% fluent Location(grid,object,xcoord,ycoord)
% From E: 
% 
% fluent(location(grid, object, xcoord, 
%           ycoord)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',183).
mpred_prop(location(grid,object,xcoord,ycoord),fluent).
fluents([location/4]).

% event Move(grid,object,xcoord,ycoord,xcoord,ycoord)
% From E: 
% 
% event(move(grid, object, xcoord, ycoord, xcoord, 
%          ycoord)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',183).
mpred_prop(move(grid,object,xcoord,ycoord,xcoord,ycoord),event).
events([move/6]).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',186).
%; axioms
% [object1,object2]
 % Equal(object1,object2) -> Equal(object2,object1).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',188).
% From E: 
% 
% '->'(
%    equal(Object1,Object2), 
%    equal(Object2,Object1)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',188).
if(equal(Object2,Object1),
   equal(Object1,Object2)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',190).
%; objects have unique shape
% [object,shape1,shape2]
% Shape(object,shape1) & Shape(object,shape2) ->
% shape1=shape2.
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',192).
% From E: 
% 
% '->'(
%    ','(
%       shape(Object,Shape1), 
%       shape(Object,Shape2)), 
%    Shape1=Shape2).
if(equals(Shape1, Shape2),  (shape(Object, Shape1), shape(Object, Shape2))).


%; objects have unique color
% [object,color1,color2]
% Color(object,color1) & Color(object,color2) ->
% color1=color2.
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',196).
% From E: 
% 
% '->'(
%    ','(
%       color(Object,Color1), 
%       color(Object,Color2)), 
%    Color1=Color2).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',196).
if(equals(Color1, Color2),  (color(Object, Color1), color(Object, Color2))).


%; if objects are the same, they have the same shape
% [object1,object2]
% Equal(object1,object2) ->
% ({shape} Shape(object1,shape) & Shape(object2,shape)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',201).
% From E: 
% 
% '->'(
%    equal(Object1,Object2), 
%    thereExists(Shape, 
%       ','(
%          shape(Object1,Shape), 
%          shape(Object2,Shape)))).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',201).
if(thereExists(Shape,  (shape(Object1, Shape), shape(Object2, Shape))), equal(Object1, Object2)).


%; if objects are the same, they have the same color
% [object1,object2]
% Equal(object1,object2) ->
% ({color} Color(object1,color) & Color(object2,color)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',206).
% From E: 
% 
% '->'(
%    equal(Object1,Object2), 
%    thereExists(Color, 
%       ','(
%          color(Object1,Color), 
%          color(Object2,Color)))).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',206).
if(thereExists(Color,  (color(Object1, Color), color(Object2, Color))), equal(Object1, Object2)).


%; if objects are the same, they have the same location
% [grid,object1,object2,xcoord1,ycoord1,xcoord2,ycoord2,time]
% Equal(object1,object2) ->
% (HoldsAt(Location(grid,object1,xcoord1,ycoord1),time) &
%  HoldsAt(Location(grid,object2,xcoord2,ycoord2),time) ->
%  xcoord1=xcoord2 & ycoord1=ycoord2).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',211).
% From E: 
% 
% '->'(
%    equal(Object1,Object2), 
%    '->'(
%       ','(
%          holds(
%             location(Grid, Object1, Xcoord1, 
%                Ycoord1), 
%             Time), 
%          holds(
%             location(Grid, Object2, Xcoord2, 
%                Ycoord2), 
%             Time)), 
%       ','(
%          Xcoord1=Xcoord2, 
%          Ycoord1=Ycoord2))).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',211).
if(if((equals(Xcoord1, Xcoord2), equals(Ycoord1, Ycoord2)),  (at(location(Grid, Object1, Xcoord1, Ycoord1), Time), at(location(Grid, Object2, Xcoord2, Ycoord2), Time))), equal(Object1, Object2)).


%; object in one location at a time
% [grid,object,xcoord1,ycoord1,xcoord2,ycoord2,time]
% HoldsAt(Location(grid,object,xcoord1,ycoord1),time) &
% HoldsAt(Location(grid,object,xcoord2,ycoord2),time) ->
% xcoord1=xcoord2 & ycoord1=ycoord2.
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',218).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          location(Grid, Object, Xcoord1, 
%             Ycoord1), 
%          Time), 
%       holds(
%          location(Grid, Object, Xcoord2, 
%             Ycoord2), 
%          Time)), 
%    ','(
%       Xcoord1=Xcoord2, 
%       Ycoord1=Ycoord2)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',218).
if((equals(Xcoord1, Xcoord2), equals(Ycoord1, Ycoord2)),  (at(location(Grid, Object, Xcoord1, Ycoord1), Time), at(location(Grid, Object, Xcoord2, Ycoord2), Time))).


%; objects have locations
% [grid,object,time]
% (% {xcoord,ycoord} HoldsAt(Location(grid,object,xcoord,ycoord),time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',224).
% From E: 
% 
% exists(
%    [Xcoord,Ycoord], 
%    holds(
%       location(Grid, Object, Xcoord, 
%          Ycoord), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',224).
exists([Xcoord,Ycoord],
 at(location(Grid,Object,Xcoord,Ycoord),
   Time)).


%; different objects are not at same location
% [grid,object1,object2,xcoord1,ycoord1,time]
% HoldsAt(Location(grid,object1,xcoord1,ycoord1),time) &
% HoldsAt(Location(grid,object2,xcoord1,ycoord1),time) ->
% Equal(object1,object2).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',228).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          location(Grid, Object1, Xcoord1, 
%             Ycoord1), 
%          Time), 
%       holds(
%          location(Grid, Object2, Xcoord1, 
%             Ycoord1), 
%          Time)), 
%    equal(Object1,Object2)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',228).
if(equal(Object1, Object2),  (at(location(Grid, Object1, Xcoord1, Ycoord1), Time), at(location(Grid, Object2, Xcoord1, Ycoord1), Time))).


%; moving to a location causes an object to be at that location
% [grid,object,xcoord1,ycoord1,xcoord2,ycoord2,time]
% Initiates(Move(grid,object,xcoord1,ycoord1,xcoord2,ycoord2),
%           Location(grid,object,xcoord2,ycoord2),
%           time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',234).
% From E: 
% 
% initiates_at(
%    move(Grid, Object, Xcoord1, Ycoord1, Xcoord2, 
%       Ycoord2), 
%    location(Grid, Object, Xcoord2, 
%       Ycoord2), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',234).
initiates(move(Grid,
	       Object,
	       Xcoord1,
	       Ycoord1,
	       Xcoord2,
	       Ycoord2),
	  location(Grid,Object,Xcoord2,Ycoord2)).


%; moving to a location causes the object no longer to be at its previous
%; location
% [grid,object,xcoord1,ycoord1,xcoord2,ycoord2,time]
% Terminates(Move(grid,object,xcoord1,ycoord1,xcoord2,ycoord2),
%            Location(grid,object,xcoord1,ycoord1),
%            time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',241).
% From E: 
% 
% terminates_at(
%    move(Grid, Object, Xcoord1, Ycoord1, Xcoord2, 
%       Ycoord2), 
%    location(Grid, Object, Xcoord1, 
%       Ycoord1), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',241).
terminates(move(Grid,
		Object,
		Xcoord1,
		Ycoord1,
		Xcoord2,
		Ycoord2),
	   location(Grid,
		    Object,
		    Xcoord1,
		    Ycoord1)).


%;; allow diagonal movements
%;[grid,object,xcoord1,ycoord1,xcoord2,ycoord2,time]
%;Happens(Move(grid,object,xcoord1,ycoord1,xcoord2,ycoord2),time) ->
%;HoldsAt(Location(grid,object,xcoord1,ycoord1),time) &
%;(xcoord1=xcoord2 |
%; xcoord1=xcoord2+1 |
%; xcoord1=xcoord2-1) &
%;(ycoord1=ycoord2 |
%; ycoord1=ycoord2+1 |
%; ycoord1=ycoord2-1).
%; only allow right angle movements
% [grid,object,xcoord1,ycoord1,xcoord2,ycoord2,time]
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',259).
% Happens(Move(grid,object,xcoord1,ycoord1,xcoord2,ycoord2),time) ->
% HoldsAt(Location(grid,object,xcoord1,ycoord1),time) &
% ((xcoord1=xcoord2 & (ycoord1=ycoord2+1 | ycoord1=ycoord2-1)) |
%  (ycoord1=ycoord2 & (xcoord1=xcoord2+1 | xcoord1=xcoord2-1))).
% From E: 
% 
% '->'(
%    happens(
%       move(Grid, Object, Xcoord1, Ycoord1, Xcoord2, 
%          Ycoord2), 
%       Time), 
%    ','(
%       holds(
%          location(Grid, Object, Xcoord1, 
%             Ycoord1), 
%          Time), 
%       ';'(
%          ','(
%             Xcoord1=Xcoord2, 
%             ';'(
%                Ycoord1=Ycoord2+1, 
%                Ycoord1=Ycoord2-1)), 
%          ','(
%             Ycoord1=Ycoord2, 
%             ';'(
%                Xcoord1=Xcoord2+1, 
%                Xcoord1=Xcoord2-1))))).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',259).
if((at(location(Grid, Object, Xcoord1, Ycoord1), Time), (equals(Xcoord1, Xcoord2), (equals(Ycoord1, Ycoord2+1);equals(Ycoord1, Ycoord2-1));equals(Ycoord1, Ycoord2), (equals(Xcoord1, Xcoord2+1);equals(Xcoord1, Xcoord2-1)))), happens(move(Grid, Object, Xcoord1, Ycoord1, Xcoord2, Ycoord2), Time)).


%; End of file.
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%; FILE: examples/Cassimatis2002/TwoScreens.e
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; @phdthesis{Cassimatis:2002,
%;   author = "Nicholas L. Cassimatis",
%;   year = "2002",
%;   title = "Polyscheme: A Cognitive Architecture for Integrating Multiple Representation and Inference Schemes",
%;   address = "Cambridge, MA",
%;   school = "Program in Media Arts and Sciences, School of Architecture and Planning, Massachusetts Institute of Technology",
%; }
%;

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',290).
% load foundations/Root.e
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/Root.e'))).
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',290).
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/EC.e'))).
:- call_pel_directive(load('foundations/EC.e')).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',292).
% load examples/Cassimatis2002/PolySpace.e
% From E: 
% 
% ':-'(call_pel_directive(load('examples/Cassimatis2002/PolySpace.e'))).
:- call_pel_directive(load('examples/Cassimatis2002/PolySpace.e')).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',294).
% grid G1
% From E: 
% 
% t(grid,g1).
isa(g1,grid).

% object X,Y,Screen1,Screen2
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',294).
% From E: 
% 
% t(object,x).
isa(x,object).
% From E: 
% 
% t(object,y).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',294).
isa(y,object).
% From E: 
% 
% t(object,screen1).
isa(screen1,object).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',294).
% From E: 
% 
% t(object,screen2).
isa(screen2,object).
%; perceptions:


% Shape(X,Round).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',297).
% From E: 
% 
% shape(x,round).
shape(x,round).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',299).
% Color(X,Red).
% From E: 
% 
% color(x,red).
color(x,red).


% Shape(Y,Round).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',299).
% From E: 
% 
% shape(y,round).
shape(y,round).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',301).
% Color(Y,Red).
% From E: 
% 
% color(y,red).
color(y,red).


% Shape(Screen1,Square).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',301).
% From E: 
% 
% shape(screen1,square).
shape(screen1,square).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',303).
% Color(Screen1,Green).
% From E: 
% 
% color(screen1,green).
color(screen1,green).


% Shape(Screen2,Square).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',303).
% From E: 
% 
% shape(screen2,square).
shape(screen2,square).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',305).
% Color(Screen2,Green).
% From E: 
% 
% color(screen2,green).
color(screen2,green).


% [time]
 % HoldsAt(Location(G1,Screen1,2,0),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',305).
% From E: 
% 
% holds(
%    location(g1, screen1, 2, 0), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',305).
at(location(g1,screen1,2,0),Time).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',307).
% [time]
 % HoldsAt(Location(G1,Screen2,4,0),time).
% From E: 
% 
% holds(
%    location(g1, screen2, 4, 0), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',307).
at(location(g1,screen2,4,0),Time).


% HoldsAt(Location(G1,X,1,1),0).
% From E: 
% 
% holds(
%    location(g1, x, 1, 1), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',307).
initially(location(g1,x,1,1)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',309).
% HoldsAt(Location(G1,Y,5,1),4).
% From E: 
% 
% holds(
%    location(g1, y, 5, 1), 4).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',309).
at(location(g1,y,5,1),4).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',311).
% [xcoord,ycoord,time]
% xcoord!=% 2 & xcoord!=4 & !(xcoord=1 & ycoord=1 & time=0) ->
% !HoldsAt(Location(G1,X,xcoord,ycoord),time) |
% xcoord=5 & ycoord=1 & time=4 & Equal(X,Y).
% From E: 
% 
% '->'(
%    ','(
%       Xcoord\=2, 
%       ','(
%          Xcoord\=4, 
%          not(','(
%                 Xcoord=1, 
%                 ','(
%                    Ycoord=1, 
%                    Time=0))))), 
%    ';'(
%       holds(
%          not(location(g1, x, Xcoord, 
%                 Ycoord)), 
%          Time), 
%       ','(
%          Xcoord=5, 
%          ','(
%             Ycoord=1, 
%             ','(
%                Time=4, 
%                equal(x,y)))))).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',311).
if((at(not(location(g1, x, Xcoord, Ycoord)), Time);equals(Xcoord, 5), equals(Ycoord, 1), equals(Time, 4), equal(x, y)),  ({dif(Xcoord, 2)}, {dif(Xcoord, 4)}, not((equals(Xcoord, 1), equals(Ycoord, 1), equals(Time, 0))))).


% [xcoord,ycoord,time]
% xcoord!=% 2 & xcoord!=4 & !(xcoord=5 & ycoord=1 & time=4) ->
% !HoldsAt(Location(G1,Y,xcoord,ycoord),time) |
% xcoord=1 & ycoord=1 & time=0 & Equal(X,Y).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',317).
% From E: 
% 
% '->'(
%    ','(
%       Xcoord\=2, 
%       ','(
%          Xcoord\=4, 
%          not(','(
%                 Xcoord=5, 
%                 ','(
%                    Ycoord=1, 
%                    Time=4))))), 
%    ';'(
%       holds(
%          not(location(g1, y, Xcoord, 
%                 Ycoord)), 
%          Time), 
%       ','(
%          Xcoord=1, 
%          ','(
%             Ycoord=1, 
%             ','(
%                Time=0, 
%                equal(x,y)))))).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',317).
if((at(not(location(g1, y, Xcoord, Ycoord)), Time);equals(Xcoord, 1), equals(Ycoord, 1), equals(Time, 0), equal(x, y)),  ({dif(Xcoord, 2)}, {dif(Xcoord, 4)}, not((equals(Xcoord, 5), equals(Ycoord, 1), equals(Time, 4))))).

% range time 0 4
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',320).
% From E: 
% 
% ':-'(call_pel_directive(range(time,0,4))).
:- call_pel_directive(range(time, 0, 4)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',322).
% range xcoord 0 5
% From E: 
% 
% ':-'(call_pel_directive(range(xcoord,0,5))).
:- call_pel_directive(range(xcoord, 0, 5)).

% range ycoord 0 1
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',322).
% From E: 
% 
% ':-'(call_pel_directive(range(ycoord,0,1))).
:- call_pel_directive(range(ycoord, 0, 1)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',324).
% range offset 0 0
% From E: 
% 
% ':-'(call_pel_directive(range(offset,0,0))).
:- call_pel_directive(range(offset, 0, 0)).
%; End of file.
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%; FILE: examples/Cassimatis2002/OneScreen.e
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; @phdthesis{Cassimatis:2002,
%;   author = "Nicholas L. Cassimatis",
%;   year = "2002",
%;   title = "Polyscheme: A Cognitive Architecture for Integrating Multiple Representation and Inference Schemes",
%;   address = "Cambridge, MA",
%;   school = "Program in Media Arts and Sciences, School of Architecture and Planning, Massachusetts Institute of Technology",
%; }
%;

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',352).
% load foundations/Root.e
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/Root.e'))).
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',352).
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/EC.e'))).
:- call_pel_directive(load('foundations/EC.e')).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',354).
% load examples/Cassimatis2002/PolySpace.e
% From E: 
% 
% ':-'(call_pel_directive(load('examples/Cassimatis2002/PolySpace.e'))).
:- call_pel_directive(load('examples/Cassimatis2002/PolySpace.e')).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',356).
% grid G1
% From E: 
% 
% t(grid,g1).
isa(g1,grid).

% object X,Y,Screen
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',356).
% From E: 
% 
% t(object,x).
isa(x,object).
% From E: 
% 
% t(object,y).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',356).
isa(y,object).
% From E: 
% 
% t(object,screen).
isa(screen,object).
%; perceptions:


% Shape(X,Round).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',359).
% From E: 
% 
% shape(x,round).
shape(x,round).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',361).
% Color(X,Red).
% From E: 
% 
% color(x,red).
color(x,red).


% Shape(Y,Round).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',361).
% From E: 
% 
% shape(y,round).
shape(y,round).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',363).
% Color(Y,Red).
% From E: 
% 
% color(y,red).
color(y,red).


% Shape(Screen,Square).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',363).
% From E: 
% 
% shape(screen,square).
shape(screen,square).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',365).
% Color(Screen,Green).
% From E: 
% 
% color(screen,green).
color(screen,green).


% [time]
 % HoldsAt(Location(G1,Screen,2,0),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',365).
% From E: 
% 
% holds(
%    location(g1, screen, 2, 0), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',365).
at(location(g1,screen,2,0),Time).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',367).
% HoldsAt(Location(G1,X,1,1),0).
% From E: 
% 
% holds(
%    location(g1, x, 1, 1), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',367).
initially(location(g1,x,1,1)).


% HoldsAt(Location(G1,Y,3,1),2).
% From E: 
% 
% holds(
%    location(g1, y, 3, 1), 2).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',367).
at(location(g1,y,3,1),2).


% [xcoord,ycoord,time]
% xcoord!=% 2 & !(xcoord=1 & ycoord=1 & time=0) ->
% !HoldsAt(Location(G1,X,xcoord,ycoord),time) |
% xcoord=3 & ycoord=1 & time=2 & Equal(X,Y).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',371).
% From E: 
% 
% '->'(
%    ','(
%       Xcoord\=2, 
%       not(','(
%              Xcoord=1, 
%              ','(
%                 Ycoord=1, 
%                 Time=0)))), 
%    ';'(
%       holds(
%          not(location(g1, x, Xcoord, 
%                 Ycoord)), 
%          Time), 
%       ','(
%          Xcoord=3, 
%          ','(
%             Ycoord=1, 
%             ','(
%                Time=2, 
%                equal(x,y)))))).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',371).
if((at(not(location(g1, x, Xcoord, Ycoord)), Time);equals(Xcoord, 3), equals(Ycoord, 1), equals(Time, 2), equal(x, y)),  ({dif(Xcoord, 2)}, not((equals(Xcoord, 1), equals(Ycoord, 1), equals(Time, 0))))).


% [xcoord,ycoord,time]
% xcoord!=% 2 & !(xcoord=3 & ycoord=1 & time=2) ->
% !HoldsAt(Location(G1,Y,xcoord,ycoord),time) |
% xcoord=1 & ycoord=1 & time=0 & Equal(X,Y).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',376).
% From E: 
% 
% '->'(
%    ','(
%       Xcoord\=2, 
%       not(','(
%              Xcoord=3, 
%              ','(
%                 Ycoord=1, 
%                 Time=2)))), 
%    ';'(
%       holds(
%          not(location(g1, y, Xcoord, 
%                 Ycoord)), 
%          Time), 
%       ','(
%          Xcoord=1, 
%          ','(
%             Ycoord=1, 
%             ','(
%                Time=0, 
%                equal(x,y)))))).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',376).
if((at(not(location(g1, y, Xcoord, Ycoord)), Time);equals(Xcoord, 1), equals(Ycoord, 1), equals(Time, 0), equal(x, y)),  ({dif(Xcoord, 2)}, not((equals(Xcoord, 3), equals(Ycoord, 1), equals(Time, 2))))).

% range time 0 2
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',379).
% From E: 
% 
% ':-'(call_pel_directive(range(time,0,2))).
:- call_pel_directive(range(time, 0, 2)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',381).
% range xcoord 0 4
% From E: 
% 
% ':-'(call_pel_directive(range(xcoord,0,4))).
:- call_pel_directive(range(xcoord, 0, 4)).

% range ycoord 0 2
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',381).
% From E: 
% 
% ':-'(call_pel_directive(range(ycoord,0,2))).
:- call_pel_directive(range(ycoord, 0, 2)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',383).
% range offset 0 0
% From E: 
% 
% ':-'(call_pel_directive(range(offset,0,0))).
:- call_pel_directive(range(offset, 0, 0)).
%; End of file.
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%; FILE: examples/BrewkaDixKonolige1997/Wine.e
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; reasoning by cases
%; \fullciteA[p. 45]{BrewkaDixKonolige:1997}
%;
%; @book{BrewkaDixKonolige:1997,
%;   author = "Gerhard Brewka and J{\"{u}}rgen Dix and Kurt Konolige",
%;   year = "1997",
%;   title = "Nonmonotonic Reasoning: An Overview",
%;   address = "Stanford, CA",
%;   publisher = "CSLI",
%; }
%;

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',414).
% load foundations/Root.e
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/Root.e'))).
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',414).
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/EC.e'))).
:- call_pel_directive(load('foundations/EC.e')).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',417).
% sort x
% From E: 
% 
% sort(x).
sort(x).

% x Person
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',417).
% From E: 
% 
% t(x,person).
isa(person,x).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',420).
% predicate LikesWine(x)
% From E: 
% 
% predicate(likesWine(x)).
mpred_prop(likesWine(x),predicate).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',420).
predicates([likesWine/1]).

% predicate Italian(x)
% From E: 
% 
% predicate(italian(x)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',420).
mpred_prop(italian(x),predicate).
predicates([italian/1]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',422).
% predicate French(x)
% From E: 
% 
% predicate(french(x)).
mpred_prop(french(x),predicate).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',422).
predicates([french/1]).

% predicate Ab1(x)
% From E: 
% 
% predicate(ab1(x)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',422).
mpred_prop(ab1(x),predicate).
predicates([ab1/1]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',424).
% predicate Ab2(x)
% From E: 
% 
% predicate(ab2(x)).
mpred_prop(ab2(x),predicate).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',424).
predicates([ab2/1]).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',426).
% [x]
 % Italian(x) & !Ab1(x) -> LikesWine(x).
% From E: 
% 
% '->'(
%    ','(
%       italian(X), 
%       not(ab1(X))), 
%    likesWine(X)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',426).
if(likesWine(X),  (italian(X), not(ab1(X)))).


% [x]
 % French(x) & !Ab2(x) -> LikesWine(x).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',426).
% From E: 
% 
% '->'(
%    ','(
%       french(X), 
%       not(ab2(X))), 
%    likesWine(X)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',426).
if(likesWine(X),  (french(X), not(ab2(X)))).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',428).
% [x]
 % Italian(x) -> !French(x).
% From E: 
% 
% '->'(
%    italian(X), 
%    not(french(X))).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',428).
if(not(french(X)),italian(X)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',430).
% Italian(Person) | French(Person).
% From E: 
% 
% ';'(
%    italian(person), 
%    french(person)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',430).
if(not(italian(person)),french(person)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',432).
% range time 0 0
% From E: 
% 
% ':-'(call_pel_directive(range(time,0,0))).
:- call_pel_directive(range(time, 0, 0)).

% range offset 1 1
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',432).
% From E: 
% 
% ':-'(call_pel_directive(range(offset,1,1))).
:- call_pel_directive(range(offset, 1, 1)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',435).
% completion Theta Ab1
% From E: 
% 
% ':-'(call_pel_directive(completion(theta))).
:- call_pel_directive(completion(theta)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',435).
% From E: 
% 
% ':-'(call_pel_directive(completion(ab1))).
:- call_pel_directive(completion(ab1)).

% completion Theta Ab2
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',435).
% From E: 
% 
% ':-'(call_pel_directive(completion(theta))).
:- call_pel_directive(completion(theta)).
% From E: 
% 
% ':-'(call_pel_directive(completion(ab2))).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',435).
:- call_pel_directive(completion(ab2)).
%; End of file.
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%; FILE: examples/Shanahan1997/Yale.e
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; @article{HanksMcDermott:1987,
%;   author = "Steve Hanks and Drew V. McDermott",
%;   year = "1987",
%;   title = "Nonmonotonic logic and temporal projection",
%;   journal = "Artificial Intelligence",
%;   volume = "33",
%;   number = "3",
%;   pages = "379--412",
%; }
%;
%; \fullciteA[pp. 322--323]{Shanahan:1997}
%;
%; @book{Shanahan:1997,
%;   author = "Murray Shanahan",
%;   year = "1997",
%;   title = "Solving the Frame Problem",
%;   address = "Cambridge, MA",
%;   publisher = "MIT Press",
%; }
%;
%; deduction
%;
%; modifications from Shanahan's formulation:
%; InitiallyP -> HoldsAt
%; timestamps
%; added [time] Terminates(Shoot(),Loaded(),time).
%;

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',483).
% option showpred off
% From E: 
% 
% ':-'(call_pel_directive(option(showpred,off))).
:- call_pel_directive(option(showpred, off)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',485).
% load foundations/Root.e
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/Root.e'))).
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',485).
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/EC.e'))).
:- call_pel_directive(load('foundations/EC.e')).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',488).
% event Load()
% From E: 
% 
% event(load()).
mpred_prop(load(),event).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',488).
events([load/0]).

% event Shoot()
% From E: 
% 
% event(shoot()).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',488).
mpred_prop(shoot(),event).
events([shoot/0]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',490).
% event Sneeze()
% From E: 
% 
% event(sneeze()).
mpred_prop(sneeze(),event).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',490).
events([sneeze/0]).

% fluent Loaded()
% From E: 
% 
% fluent(loaded()).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',490).
mpred_prop(loaded(),fluent).
fluents([loaded/0]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',492).
% fluent Alive()
% From E: 
% 
% fluent(alive()).
mpred_prop(alive(),fluent).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',492).
fluents([alive/0]).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',494).
% [time]
 % Initiates(Load(),Loaded(),time).
% From E: 
% 
% initiates_at(load(),loaded(),Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',494).
initiates(load(),loaded()).


% [time]
 % HoldsAt(Loaded(),time) -> Terminates(Shoot(),Alive(),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',494).
% From E: 
% 
% '->'(
%    holds(loaded(),Time), 
%    terminates_at(shoot(),alive(),Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',494).
if(terminates(shoot(),at(alive(),Time)),at(loaded(),Time)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',496).
% [time]
 % Terminates(Shoot(),Loaded(),time).
% From E: 
% 
% terminates_at(shoot(),loaded(),Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',496).
terminates(shoot(),loaded()).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',498).
% HoldsAt(Alive(),0).
% From E: 
% 
% holds(alive(),0).
initially(alive()).


% !HoldsAt(Loaded(),0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',498).
% From E: 
% 
% holds(
%    not(loaded()), 0).
initially(not(loaded())).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',500).
% Happens(Load(),0).
% From E: 
% 
% happens(load(),0).
observe(at(load(),0)).


% Happens(Sneeze(),1).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',500).
% From E: 
% 
% happens(sneeze(),1).
observe(at(sneeze(),1)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',502).
% Happens(Shoot(),2).
% From E: 
% 
% happens(shoot(),2).
observe(at(shoot(),2)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',504).
% completion Happens
% From E: 
% 
% ':-'(call_pel_directive(completion(happens))).
:- call_pel_directive(completion(happens)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',506).
% range time 0 3
% From E: 
% 
% ':-'(call_pel_directive(range(time,0,3))).
:- call_pel_directive(range(time, 0, 3)).

% range offset 1 1
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',506).
% From E: 
% 
% ':-'(call_pel_directive(range(offset,1,1))).
:- call_pel_directive(range(offset, 1, 1)).
%; End of file.
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%; FILE: examples/Shanahan1997/StuffyRoom.e
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; @article{GinsbergSmith:1988a,
%;   author = "Matthew L. Ginsberg and David E. Smith",
%;   year = "1988",
%;   title = "Reasoning about action \uppercase{I}: \uppercase{A} possible worlds approach",
%;   journal = "Artificial Intelligence",
%;   volume = "35",
%;   number = "2",
%;   pages = "165--195",
%; }
%;
%; \fullciteA[pp. 288--289]{Shanahan:1997}
%;
%; @book{Shanahan:1997,
%;   author = "Murray Shanahan",
%;   year = "1997",
%;   title = "Solving the Frame Problem",
%;   address = "Cambridge, MA",
%;   publisher = "MIT Press",
%; }
%;
%; deduction
%;
%; modifications from Shanahan's formulation:
%; timestamps
%; added:
%; !HoldsAt(Blocked1(),0).
%; !HoldsAt(Blocked2(),0).
%;

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',555).
% load foundations/Root.e
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/Root.e'))).
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',555).
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/EC.e'))).
:- call_pel_directive(load('foundations/EC.e')).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',558).
% event Close1()
% From E: 
% 
% event(close1()).
mpred_prop(close1(),event).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',558).
events([close1/0]).

% event Close2()
% From E: 
% 
% event(close2()).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',558).
mpred_prop(close2(),event).
events([close2/0]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',560).
% event Start()
% From E: 
% 
% event(start()).
mpred_prop(start(),event).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',560).
events([start/0]).

% fluent Blocked1()
% From E: 
% 
% fluent(blocked1()).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',560).
mpred_prop(blocked1(),fluent).
fluents([blocked1/0]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',562).
% fluent Blocked2()
% From E: 
% 
% fluent(blocked2()).
mpred_prop(blocked2(),fluent).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',562).
fluents([blocked2/0]).

% fluent Stuffy()
% From E: 
% 
% fluent(stuffy()).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',562).
mpred_prop(stuffy(),fluent).
fluents([stuffy/0]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',564).
% noninertial Stuffy
% From E: 
% 
% ':-'(call_pel_directive(noninertial(stuffy))).
:- call_pel_directive(noninertial(stuffy)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',566).
% [time]
 % Initiates(Close1(),Blocked1(),time).
% From E: 
% 
% initiates_at(close1(),blocked1(),Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',566).
initiates(close1(),blocked1()).


% [time]
 % Initiates(Close2(),Blocked2(),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',566).
% From E: 
% 
% initiates_at(close2(),blocked2(),Time).
initiates(close2(),blocked2()).


% [time]
% HoldsAt(Stuffy(),time) <->
% HoldsAt(Blocked1(),time)&HoldsAt(Blocked2(),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',570).
% From E: 
% 
% <->(
%    holds(stuffy(),Time), 
%    ','(
%       holds(blocked1(),Time), 
%       holds(blocked2(),Time))).
if((at(blocked1(), Time), at(blocked2(), Time)), at(stuffy(), Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',570).
if(at(stuffy(), Time),  (at(blocked1(), Time), at(blocked2(), Time))).


% [time]
 % Initiates(Start(),Blocked1(),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',572).
% From E: 
% 
% initiates_at(start(),blocked1(),Time).
initiates(start(),blocked1()).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',574).
% [time]
 % Terminates(Start(),Blocked2(),time).
% From E: 
% 
% terminates_at(start(),blocked2(),Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',574).
terminates(start(),blocked2()).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',576).
% !HoldsAt(Blocked1(),0).
% From E: 
% 
% holds(
%    not(blocked1()), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',576).
initially(not(blocked1())).


% !HoldsAt(Blocked2(),0).
% From E: 
% 
% holds(
%    not(blocked2()), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',576).
initially(not(blocked2())).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',578).
% Happens(Start(),0).
% From E: 
% 
% happens(start(),0).
observe(at(start(),0)).


% Happens(Close2(),1).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',578).
% From E: 
% 
% happens(close2(),1).
observe(at(close2(),1)).

% completion Happens
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',580).
% From E: 
% 
% ':-'(call_pel_directive(completion(happens))).
:- call_pel_directive(completion(happens)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',583).
% range time 0 2
% From E: 
% 
% ':-'(call_pel_directive(range(time,0,2))).
:- call_pel_directive(range(time, 0, 2)).

% range offset 1 1
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',583).
% From E: 
% 
% ':-'(call_pel_directive(range(offset,1,1))).
:- call_pel_directive(range(offset, 1, 1)).
%; End of file.
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%; FILE: examples/Shanahan1997/BusRide.e
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; @article{Kartha:1994,
%;   author = "G. Neelakantan Kartha",
%;   year = "1994",
%;   title = "Two counterexamples related to \uppercase{B}aker's approach to the frame problem",
%;   journal = "Artificial Intelligence",
%;   volume = "69",
%;   number = "1--2",
%;   pages = "379--391",
%; }
%;
%; \fullciteA[pp. 359--361]{Shanahan:1997}
%;
%; @book{Shanahan:1997,
%;   author = "Murray Shanahan",
%;   year = "1997",
%;   title = "Solving the Frame Problem",
%;   address = "Cambridge, MA",
%;   publisher = "MIT Press",
%; }
%;
%; modifications from Shanahan's formulation:
%; InitiallyN -> !HoldsAt
%; timestamps
%;

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',628).
% load foundations/Root.e
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/Root.e'))).
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',628).
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/EC.e'))).
:- call_pel_directive(load('foundations/EC.e')).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',631).
% fluent HasTicket()
% From E: 
% 
% fluent(hasTicket()).
mpred_prop(hasTicket(),fluent).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',631).
fluents([hasTicket/0]).

% fluent OnRed()
% From E: 
% 
% fluent(onRed()).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',631).
mpred_prop(onRed(),fluent).
fluents([onRed/0]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',633).
% fluent OnYellow()
% From E: 
% 
% fluent(onYellow()).
mpred_prop(onYellow(),fluent).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',633).
fluents([onYellow/0]).

% event Buy()
% From E: 
% 
% event(buy()).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',633).
mpred_prop(buy(),event).
events([buy/0]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',635).
% event Board()
% From E: 
% 
% event(board()).
mpred_prop(board(),event).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',635).
events([board/0]).

% event BoardRed()
% From E: 
% 
% event(boardRed()).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',635).
mpred_prop(boardRed(),event).
events([boardRed/0]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',637).
% event BoardYellow()
% From E: 
% 
% event(boardYellow()).
mpred_prop(boardYellow(),event).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',637).
events([boardYellow/0]).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',639).
% [time]
 % Happens(Board(),time) -> Happens(BoardRed(),time) | Happens(BoardYellow(),time).
% From E: 
% 
% '->'(
%    happens(board(),Time), 
%    ';'(
%       happens(boardRed(),Time), 
%       happens(boardYellow(),Time))).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',639).
 if((happens(boardRed(), Time);happens(boardYellow(), Time)),
      happens(board(), Time)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',641).
% [time]
 % Initiates(Buy(),HasTicket(),time).
% From E: 
% 
% initiates_at(buy(),hasTicket(),Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',641).
initiates(buy(),hasTicket()).


% [time]
 % HoldsAt(HasTicket(),time) -> Initiates(BoardRed(),OnRed(),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',641).
% From E: 
% 
% '->'(
%    holds(hasTicket(),Time), 
%    initiates_at(boardRed(),onRed(),Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',641).
if(initiates(boardRed(),at(onRed(),Time)),
   at(hasTicket(),Time)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',643).
% [time]
 % HoldsAt(HasTicket(),time) -> Initiates(BoardYellow(),OnYellow(),time).
% From E: 
% 
% '->'(
%    holds(hasTicket(),Time), 
%    initiates_at(boardYellow(),onYellow(),Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',643).
if(initiates(boardYellow(),at(onYellow(),Time)),
   at(hasTicket(),Time)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',645).
% [time]
 % !(HoldsAt(OnRed(),time) & HoldsAt(OnYellow(),time)).
% From E: 
% 
% not(','(
%        holds(onRed(),Time), 
%        holds(onYellow(),Time))).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',645).
false((at(onRed(), Time), at(onYellow(), Time))).


% [time]
 % HoldsAt(OnRed(),time) -> HoldsAt(HasTicket(),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',645).
% From E: 
% 
% '->'(
%    holds(onRed(),Time), 
%    holds(hasTicket(),Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',645).
if(at(hasTicket(),Time),at(onRed(),Time)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',647).
% [time]
 % HoldsAt(OnYellow(),time) -> HoldsAt(HasTicket(),time).
% From E: 
% 
% '->'(
%    holds(onYellow(),Time), 
%    holds(hasTicket(),Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',647).
if(at(hasTicket(),Time),at(onYellow(),Time)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',649).
% HoldsAt(OnRed(),2).
% From E: 
% 
% holds(onRed(),2).
at(onRed(),2).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',651).
% !HoldsAt(HasTicket(),0).
% From E: 
% 
% holds(
%    not(hasTicket()), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',651).
initially(not(hasTicket())).


% Happens(Buy(),0).
% From E: 
% 
% happens(buy(),0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',651).
observe(at(buy(),0)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',653).
% Happens(Board(),1).
% From E: 
% 
% happens(board(),1).
observe(at(board(),1)).


%; ABDUCED Happens(BoardRed(), 1).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',656).
% completion Happens
% From E: 
% 
% ':-'(call_pel_directive(completion(happens))).
:- call_pel_directive(completion(happens)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',658).
% range time 0 2
% From E: 
% 
% ':-'(call_pel_directive(range(time,0,2))).
:- call_pel_directive(range(time, 0, 2)).

% range offset 1 1
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',658).
% From E: 
% 
% ':-'(call_pel_directive(range(offset,1,1))).
:- call_pel_directive(range(offset, 1, 1)).
%; End of file.
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%; FILE: examples/Shanahan1997/DeadOrAlive.e
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; \fullciteA[p. 324]{Shanahan:1997}
%;
%; @book{Shanahan:1997,
%;   author = "Murray Shanahan",
%;   year = "1997",
%;   title = "Solving the Frame Problem",
%;   address = "Cambridge, MA",
%;   publisher = "MIT Press",
%; }
%;
%; deduction
%;
%; modifications from Shanahan's formulation:
%; InitiallyP -> HoldsAt
%; timestamps
%; added [time] Terminates(Shoot(),Loaded(),time).
%;

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',696).
% load foundations/Root.e
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/Root.e'))).
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',696).
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/EC.e'))).
:- call_pel_directive(load('foundations/EC.e')).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',699).
% event Load()
% From E: 
% 
% event(load()).
mpred_prop(load(),event).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',699).
events([load/0]).

% event Shoot()
% From E: 
% 
% event(shoot()).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',699).
mpred_prop(shoot(),event).
events([shoot/0]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',701).
% event Sneeze()
% From E: 
% 
% event(sneeze()).
mpred_prop(sneeze(),event).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',701).
events([sneeze/0]).

% fluent Loaded()
% From E: 
% 
% fluent(loaded()).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',701).
mpred_prop(loaded(),fluent).
fluents([loaded/0]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',703).
% fluent Alive()
% From E: 
% 
% fluent(alive()).
mpred_prop(alive(),fluent).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',703).
fluents([alive/0]).

% fluent Dead()
% From E: 
% 
% fluent(dead()).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',703).
mpred_prop(dead(),fluent).
fluents([dead/0]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',705).
% noninertial Dead
% From E: 
% 
% ':-'(call_pel_directive(noninertial(dead))).
:- call_pel_directive(noninertial(dead)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',707).
% [time]
 % Initiates(Load(),Loaded(),time).
% From E: 
% 
% initiates_at(load(),loaded(),Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',707).
initiates(load(),loaded()).


% [time]
 % HoldsAt(Loaded(),time) -> Terminates(Shoot(),Alive(),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',707).
% From E: 
% 
% '->'(
%    holds(loaded(),Time), 
%    terminates_at(shoot(),alive(),Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',707).
if(terminates(shoot(),at(alive(),Time)),at(loaded(),Time)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',709).
% [time]
 % Terminates(Shoot(),Loaded(),time).
% From E: 
% 
% terminates_at(shoot(),loaded(),Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',709).
terminates(shoot(),loaded()).


% [time]
 % HoldsAt(Dead(),time) <-> !HoldsAt(Alive(),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',709).
% From E: 
% 
% <->(
%    holds(dead(),Time), 
%    holds(
%       not(alive()), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',709).
if(at(not(alive()),Time),at(dead(),Time)).
if(at(dead(),Time),at(not(alive()),Time)).


% HoldsAt(Alive(),0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',711).
% From E: 
% 
% holds(alive(),0).
initially(alive()).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',713).
% !HoldsAt(Loaded(),0).
% From E: 
% 
% holds(
%    not(loaded()), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',713).
initially(not(loaded())).


% Happens(Load(),0).
% From E: 
% 
% happens(load(),0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',713).
observe(at(load(),0)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',715).
% Happens(Sneeze(),1).
% From E: 
% 
% happens(sneeze(),1).
observe(at(sneeze(),1)).


% Happens(Shoot(),2).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',715).
% From E: 
% 
% happens(shoot(),2).
observe(at(shoot(),2)).

% completion Happens
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',717).
% From E: 
% 
% ':-'(call_pel_directive(completion(happens))).
:- call_pel_directive(completion(happens)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',720).
% range time 0 3
% From E: 
% 
% ':-'(call_pel_directive(range(time,0,3))).
:- call_pel_directive(range(time, 0, 3)).

% range offset 1 1
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',720).
% From E: 
% 
% ':-'(call_pel_directive(range(offset,1,1))).
:- call_pel_directive(range(offset, 1, 1)).
%; End of file.
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%; FILE: examples/Shanahan1997/Supermarket.e
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; \fullciteA[pp. 302--304]{Shanahan:1997}
%;
%; @book{Shanahan:1997,
%;   author = "Murray Shanahan",
%;   year = "1997",
%;   title = "Solving the Frame Problem",
%;   address = "Cambridge, MA",
%;   publisher = "MIT Press",
%; }
%;
%; deduction
%;
%; modifications from Shanahan's formulation:
%; reformulated using the method of \fullciteA[pp. 460--461]{MillerShanahan:2002}
%;
%; @incollection{MillerShanahan:2002,
%;   author = "Rob Miller and Murray Shanahan",
%;   year = "2002",
%;   title = "Some alternative formulations of the event calculus",
%;   editor = "Antonis C. Kakas and Fariba Sadri",
%;   booktitle = "Computational Logic: Logic Programming and Beyond: Essays in Honour of \uppercase{R}obert \uppercase{A}. \uppercase{K}owalski, Part \uppercase{II}",
%;   series = "Lecture Notes in Computer Science",
%;   volume = "2408",
%;   pages = "452--490",
%;   address = "Berlin",
%;   publisher = "Springer",
%; }
%;
%; added:
%; !HoldsAt(Forwards(), 0).
%; !HoldsAt(Backwards(), 0).
%; !HoldsAt(Spinning(), 0).
%;

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',774).
% load foundations/Root.e
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/Root.e'))).
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',774).
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/EC.e'))).
:- call_pel_directive(load('foundations/EC.e')).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',777).
% event Push()
% From E: 
% 
% event(push()).
mpred_prop(push(),event).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',777).
events([push/0]).

% event Pull()
% From E: 
% 
% event(pull()).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',777).
mpred_prop(pull(),event).
events([pull/0]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',779).
% fluent Forwards()
% From E: 
% 
% fluent(forwards()).
mpred_prop(forwards(),fluent).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',779).
fluents([forwards/0]).

% fluent Backwards()
% From E: 
% 
% fluent(backwards()).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',779).
mpred_prop(backwards(),fluent).
fluents([backwards/0]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',781).
% fluent Spinning()
% From E: 
% 
% fluent(spinning()).
mpred_prop(spinning(),fluent).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',781).
fluents([spinning/0]).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',783).
% [time]
% !Happens(Pull(), time) ->
% Initiates(Push(), Forwards(), time).
% From E: 
% 
% '->'(
%    not(happens(pull(),Time)), 
%    initiates_at(push(),forwards(),Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',783).
if(initiates(push(),at(forwards(),Time)),
   not(happens(pull(),Time))).


% [time]
% !Happens(Pull(), time) ->
% Terminates(Push(), Backwards(), time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',788).
% From E: 
% 
% '->'(
%    not(happens(pull(),Time)), 
%    terminates_at(push(),backwards(),Time)).
if(terminates(push(),at(backwards(),Time)),
   not(happens(pull(),Time))).


% [time]
% !Happens(Push(), time) ->
% Initiates(Pull(), Backwards(), time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',792).
% From E: 
% 
% '->'(
%    not(happens(push(),Time)), 
%    initiates_at(pull(),backwards(),Time)).
if(initiates(pull(),at(backwards(),Time)),
   not(happens(push(),Time))).


% [time]
% !Happens(Push(), time) ->
% Terminates(Pull(), Forwards(), time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',796).
% From E: 
% 
% '->'(
%    not(happens(push(),Time)), 
%    terminates_at(pull(),forwards(),Time)).
if(terminates(pull(),at(forwards(),Time)),
   not(happens(push(),Time))).


% [time]
% Happens(Push(), time) ->
% Initiates(Pull(), Spinning(), time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',800).
% From E: 
% 
% '->'(
%    happens(push(),Time), 
%    initiates_at(pull(),spinning(),Time)).
if(initiates(pull(),at(spinning(),Time)),
   happens(push(),Time)).


% [time]
% Happens(Push(), time) ->
% Terminates(Pull(), Forwards(), time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',804).
% From E: 
% 
% '->'(
%    happens(push(),Time), 
%    terminates_at(pull(),forwards(),Time)).
if(terminates(pull(),at(forwards(),Time)),
   happens(push(),Time)).


% [time]
% Happens(Push(), time) ->
% Terminates(Pull(), Backwards(), time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',808).
% From E: 
% 
% '->'(
%    happens(push(),Time), 
%    terminates_at(pull(),backwards(),Time)).
if(terminates(pull(),at(backwards(),Time)),
   happens(push(),Time)).


% [time]
% !Happens(Pull(), time) ->
% Terminates(Push(), Spinning(), time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',812).
% From E: 
% 
% '->'(
%    not(happens(pull(),Time)), 
%    terminates_at(push(),spinning(),Time)).
if(terminates(push(),at(spinning(),Time)),
   not(happens(pull(),Time))).


% [time]
% !Happens(Push(), time) ->
% Terminates(Pull(), Spinning(), time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',816).
% From E: 
% 
% '->'(
%    not(happens(push(),Time)), 
%    terminates_at(pull(),spinning(),Time)).
if(terminates(pull(),at(spinning(),Time)),
   not(happens(push(),Time))).


% !HoldsAt(Forwards(), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',818).
% From E: 
% 
% holds(
%    not(forwards()), 0).
initially(not(forwards())).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',820).
% !HoldsAt(Backwards(), 0).
% From E: 
% 
% holds(
%    not(backwards()), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',820).
initially(not(backwards())).


% !HoldsAt(Spinning(), 0).
% From E: 
% 
% holds(
%    not(spinning()), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',820).
initially(not(spinning())).


% Happens(Push(), 5).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',822).
% From E: 
% 
% happens(push(),5).
observe(at(push(),5)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',824).
% Happens(Pull(), 5).
% From E: 
% 
% happens(pull(),5).
observe(at(pull(),5)).


% Happens(Pull(), 10).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',824).
% From E: 
% 
% happens(pull(),10).
observe(at(pull(),10)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',826).
% Happens(Push(), 10).
% From E: 
% 
% happens(push(),10).
observe(at(push(),10)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',828).
% completion Happens
% From E: 
% 
% ':-'(call_pel_directive(completion(happens))).
:- call_pel_directive(completion(happens)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',830).
% range time 0 12
% From E: 
% 
% ':-'(call_pel_directive(range(time,0,12))).
:- call_pel_directive(range(time, 0, 12)).

% range offset 1 1
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',830).
% From E: 
% 
% ':-'(call_pel_directive(range(offset,1,1))).
:- call_pel_directive(range(offset, 1, 1)).
%; End of file.
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%; FILE: examples/Shanahan1997/StolenCar.e
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; @inproceedings{Kautz:1986,
%;   author = "Henry A. Kautz",
%;   year = "1986",
%;   title = "The Logic of Persistence",
%;   booktitle = "\uppercase{P}roceedings of the \uppercase{F}ifth \uppercase{N}ational \uppercase{C}onference on \uppercase{A}rtificial \uppercase{I}ntelligence",
%;   pages = "401--405",
%;   address = "Los Altos, CA",
%;   publisher = "Morgan Kaufmann",
%; }
%;
%; \fullciteA[p. 359]{Shanahan:1997}
%;
%; @book{Shanahan:1997,
%;   author = "Murray Shanahan",
%;   year = "1997",
%;   title = "Solving the Frame Problem",
%;   address = "Cambridge, MA",
%;   publisher = "MIT Press",
%; }
%;
%; abduction
%;
%; modifications from Shanahan's formulation:
%; timestamps
%; added !HoldsAt(CarParked(),0).
%;

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',877).
% load foundations/Root.e
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/Root.e'))).
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',877).
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/EC.e'))).
:- call_pel_directive(load('foundations/EC.e')).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',880).
% event Park()
% From E: 
% 
% event(park()).
mpred_prop(park(),event).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',880).
events([park/0]).

% event Steal()
% From E: 
% 
% event(steal()).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',880).
mpred_prop(steal(),event).
events([steal/0]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',882).
% fluent CarParked()
% From E: 
% 
% fluent(carParked()).
mpred_prop(carParked(),fluent).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',882).
fluents([carParked/0]).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',884).
% [time]
 % Initiates(Park(),CarParked(),time).
% From E: 
% 
% initiates_at(park(),carParked(),Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',884).
initiates(park(),carParked()).


% [time]
 % Terminates(Steal(),CarParked(),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',884).
% From E: 
% 
% terminates_at(steal(),carParked(),Time).
terminates(steal(),carParked()).


% !HoldsAt(CarParked(),0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',886).
% From E: 
% 
% holds(
%    not(carParked()), 0).
initially(not(carParked())).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',888).
% Happens(Park(),0).
% From E: 
% 
% happens(park(),0).
observe(at(park(),0)).


%; ABDUCED Happens(Steal(), 1).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',890).
% !HoldsAt(CarParked(),2).
% From E: 
% 
% holds(
%    not(carParked()), 2).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',890).
at(not(carParked()),2).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',892).
% range time 0 2
% From E: 
% 
% ':-'(call_pel_directive(range(time,0,2))).
:- call_pel_directive(range(time, 0, 2)).

% range offset 1 1
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',892).
% From E: 
% 
% ':-'(call_pel_directive(range(offset,1,1))).
:- call_pel_directive(range(offset, 1, 1)).
%; End of file.
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%; FILE: examples/MillerShanahan2002/Bowl.e
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; \fullciteA[p. 461]{MillerShanahan:2002}
%;
%; @incollection{MillerShanahan:2002,
%;   author = "Rob Miller and Murray Shanahan",
%;   year = "2002",
%;   title = "Some alternative formulations of the event calculus",
%;   editor = "Antonis C. Kakas and Fariba Sadri",
%;   booktitle = "Computational Logic: Logic Programming and Beyond: Essays in Honour of \uppercase{R}obert \uppercase{A}. \uppercase{K}owalski, Part \uppercase{II}",
%;   series = "Lecture Notes in Computer Science",
%;   volume = "2408",
%;   pages = "452--490",
%;   address = "Berlin",
%;   publisher = "Springer",
%; }
%;

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',928).
% load foundations/Root.e
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/Root.e'))).
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',928).
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/EC.e'))).
:- call_pel_directive(load('foundations/EC.e')).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',931).
% event LiftLeft()
% From E: 
% 
% event(liftLeft()).
mpred_prop(liftLeft(),event).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',931).
events([liftLeft/0]).

% event LiftRight()
% From E: 
% 
% event(liftRight()).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',931).
mpred_prop(liftRight(),event).
events([liftRight/0]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',933).
% fluent Spilt()
% From E: 
% 
% fluent(spilt()).
mpred_prop(spilt(),fluent).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',933).
fluents([spilt/0]).

% fluent Raised()
% From E: 
% 
% fluent(raised()).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',933).
mpred_prop(raised(),fluent).
fluents([raised/0]).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',936).
% [time]
% !Happens(LiftRight(), time) ->
% Initiates(LiftLeft(), Spilt(), time).
% From E: 
% 
% '->'(
%    not(happens(liftRight(),Time)), 
%    initiates_at(liftLeft(),spilt(),Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',936).
if(initiates(liftLeft(),at(spilt(),Time)),
   not(happens(liftRight(),Time))).


% [time]
% !Happens(LiftLeft(), time) ->
% Initiates(LiftRight(), Spilt(), time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',941).
% From E: 
% 
% '->'(
%    not(happens(liftLeft(),Time)), 
%    initiates_at(liftRight(),spilt(),Time)).
if(initiates(liftRight(),at(spilt(),Time)),
   not(happens(liftLeft(),Time))).


% [time]
% Happens(LiftLeft(), time) ->
% Initiates(LiftRight(), Raised(), time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',945).
% From E: 
% 
% '->'(
%    happens(liftLeft(),Time), 
%    initiates_at(liftRight(),raised(),Time)).
if(initiates(liftRight(),at(raised(),Time)),
   happens(liftLeft(),Time)).


% !HoldsAt(Spilt(), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',947).
% From E: 
% 
% holds(
%    not(spilt()), 0).
initially(not(spilt())).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',949).
% !HoldsAt(Raised(), 0).
% From E: 
% 
% holds(
%    not(raised()), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',949).
initially(not(raised())).


% Happens(LiftLeft(), 2).
% From E: 
% 
% happens(liftLeft(),2).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',949).
observe(at(liftLeft(),2)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',951).
% Happens(LiftRight(), 2).
% From E: 
% 
% happens(liftRight(),2).
observe(at(liftRight(),2)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',953).
% completion Happens
% From E: 
% 
% ':-'(call_pel_directive(completion(happens))).
:- call_pel_directive(completion(happens)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',955).
% range time 0 3
% From E: 
% 
% ':-'(call_pel_directive(range(time,0,3))).
:- call_pel_directive(range(time, 0, 3)).

% range offset 1 1
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',955).
% From E: 
% 
% ':-'(call_pel_directive(range(offset,1,1))).
:- call_pel_directive(range(offset, 1, 1)).
%; End of file.
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%; FILE: examples/ReiterCriscuolo1981/NixonDiamond1.e
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; conflicting defaults: showing that inconsistency results
%; without a cancellation rule
%; \fullciteA[p. 274]{ReiterCriscuolo:1981}
%; \fullciteA[pp. 98--99]{McCarthy:1986}
%;
%; @inproceedings{ReiterCriscuolo:1981,
%;   author = "Raymond Reiter and Giovanni Criscuolo",
%;   year = "1981",
%;   title = "On interacting defaults",
%;   booktitle = "\uppercase{P}roceedings of the \uppercase{S}eventh \uppercase{I}nternational \uppercase{J}oint \uppercase{C}onference on \uppercase{A}rtificial \uppercase{I}ntelligence",
%;   volume = "1",
%;   pages = "270--276",
%;   address = "Los Altos, CA",
%;   publisher = "William Kaufmann",
%; }
%;
%; @article{McCarthy:1986,
%;   author = "John McCarthy",
%;   year = "1986",
%;   title = "Applications of circumscription to formalizing common-sense knowledge",
%;   journal = "Artificial Intelligence",
%;   volume = "28",
%;   pages = "89--116".
%; }
%;

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1001).
% load foundations/Root.e
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/Root.e'))).
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1001).
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/EC.e'))).
:- call_pel_directive(load('foundations/EC.e')).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1004).
% sort x
% From E: 
% 
% sort(x).
sort(x).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1006).
% predicate Republican(x)
% From E: 
% 
% predicate(republican(x)).
mpred_prop(republican(x),predicate).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1006).
predicates([republican/1]).

% predicate Quaker(x)
% From E: 
% 
% predicate(quaker(x)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1006).
mpred_prop(quaker(x),predicate).
predicates([quaker/1]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1008).
% predicate Pacifist(x)
% From E: 
% 
% predicate(pacifist(x)).
mpred_prop(pacifist(x),predicate).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1008).
predicates([pacifist/1]).

% predicate Ab1(x)
% From E: 
% 
% predicate(ab1(x)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1008).
mpred_prop(ab1(x),predicate).
predicates([ab1/1]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1010).
% predicate Ab2(x)
% From E: 
% 
% predicate(ab2(x)).
mpred_prop(ab2(x),predicate).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1010).
predicates([ab2/1]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1012).
% x John
% From E: 
% 
% t(x,john).
isa(john,x).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1014).
% Republican(John).
% From E: 
% 
% republican(john).
republican(john).


% Quaker(John).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1014).
% From E: 
% 
% quaker(john).
quaker(john).


% [x]
 % Republican(x) & !Ab1(x) -> !Pacifist(x).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1016).
% From E: 
% 
% '->'(
%    ','(
%       republican(X), 
%       not(ab1(X))), 
%    not(pacifist(X))).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1016).
if(not(pacifist(X)),  (republican(X), not(ab1(X)))).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1018).
% [x]
 % Quaker(x) & !Ab2(x) -> Pacifist(x).
% From E: 
% 
% '->'(
%    ','(
%       quaker(X), 
%       not(ab2(X))), 
%    pacifist(X)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1018).
if(pacifist(X),  (quaker(X), not(ab2(X)))).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1020).
% range time 0 0
% From E: 
% 
% ':-'(call_pel_directive(range(time,0,0))).
:- call_pel_directive(range(time, 0, 0)).

% range offset 1 1
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1020).
% From E: 
% 
% ':-'(call_pel_directive(range(offset,1,1))).
:- call_pel_directive(range(offset, 1, 1)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1023).
% completion Theta Ab1
% From E: 
% 
% ':-'(call_pel_directive(completion(theta))).
:- call_pel_directive(completion(theta)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1023).
% From E: 
% 
% ':-'(call_pel_directive(completion(ab1))).
:- call_pel_directive(completion(ab1)).

% completion Theta Ab2
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1023).
% From E: 
% 
% ':-'(call_pel_directive(completion(theta))).
:- call_pel_directive(completion(theta)).
% From E: 
% 
% ':-'(call_pel_directive(completion(ab2))).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1023).
:- call_pel_directive(completion(ab2)).
%; End of file.
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%; FILE: examples/ReiterCriscuolo1981/NixonDiamond2.e
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; conflicting defaults: method (D)
%; \fullciteA[p. 274]{ReiterCriscuolo:1981}
%; \fullciteA[pp. 98--99]{McCarthy:1986}
%; \fullciteA[p. 18]{BrewkaDixKonolige:1997}
%;
%; @inproceedings{ReiterCriscuolo:1981,
%;   author = "Raymond Reiter and Giovanni Criscuolo",
%;   year = "1981",
%;   title = "On interacting defaults",
%;   booktitle = "\uppercase{P}roceedings of the \uppercase{S}eventh \uppercase{I}nternational \uppercase{J}oint \uppercase{C}onference on \uppercase{A}rtificial \uppercase{I}ntelligence",
%;   volume = "1",
%;   pages = "270--276",
%;   address = "Los Altos, CA",
%;   publisher = "William Kaufmann",
%; }
%;
%; @article{McCarthy:1986,
%;   author = "John McCarthy",
%;   year = "1986",
%;   title = "Applications of circumscription to formalizing common-sense knowledge",
%;   journal = "Artificial Intelligence",
%;   volume = "28",
%;   pages = "89--116".
%; }
%;
%; @book{BrewkaDixKonolige:1997,
%;   author = "Gerhard Brewka and J{\"{u}}rgen Dix and Kurt Konolige",
%;   year = "1997",
%;   title = "Nonmonotonic Reasoning: An Overview",
%;   address = "Stanford, CA",
%;   publisher = "CSLI",
%; }
%;

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1077).
% load foundations/Root.e
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/Root.e'))).
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1077).
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/EC.e'))).
:- call_pel_directive(load('foundations/EC.e')).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1080).
% sort x
% From E: 
% 
% sort(x).
sort(x).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1082).
% predicate Republican(x)
% From E: 
% 
% predicate(republican(x)).
mpred_prop(republican(x),predicate).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1082).
predicates([republican/1]).

% predicate Quaker(x)
% From E: 
% 
% predicate(quaker(x)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1082).
mpred_prop(quaker(x),predicate).
predicates([quaker/1]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1084).
% predicate Pacifist(x)
% From E: 
% 
% predicate(pacifist(x)).
mpred_prop(pacifist(x),predicate).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1084).
predicates([pacifist/1]).

% predicate Ab1(x)
% From E: 
% 
% predicate(ab1(x)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1084).
mpred_prop(ab1(x),predicate).
predicates([ab1/1]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1086).
% predicate Ab2(x)
% From E: 
% 
% predicate(ab2(x)).
mpred_prop(ab2(x),predicate).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1086).
predicates([ab2/1]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1088).
% x John
% From E: 
% 
% t(x,john).
isa(john,x).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1090).
% Republican(John).
% From E: 
% 
% republican(john).
republican(john).


% Quaker(John).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1090).
% From E: 
% 
% quaker(john).
quaker(john).


% [x]
 % Republican(x) & !Ab1(x) -> !Pacifist(x).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1092).
% From E: 
% 
% '->'(
%    ','(
%       republican(X), 
%       not(ab1(X))), 
%    not(pacifist(X))).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1092).
if(not(pacifist(X)),  (republican(X), not(ab1(X)))).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1094).
% [x]
 % Quaker(x) & !Ab2(x) -> Pacifist(x).
% From E: 
% 
% '->'(
%    ','(
%       quaker(X), 
%       not(ab2(X))), 
%    pacifist(X)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1094).
if(pacifist(X),  (quaker(X), not(ab2(X)))).

% Theta: 
% From E: 
% 
% directive(theta).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1094).
directive(theta).
 


% [x]
 % Republican(x) -> Ab2(x).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1094).
% From E: 
% 
% '->'(
%    republican(X), 
%    ab2(X)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1094).
if(ab2(X),republican(X)).

% range time 0 0
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1096).
% From E: 
% 
% ':-'(call_pel_directive(range(time,0,0))).
:- call_pel_directive(range(time, 0, 0)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1098).
% range offset 1 1
% From E: 
% 
% ':-'(call_pel_directive(range(offset,1,1))).
:- call_pel_directive(range(offset, 1, 1)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1100).
% completion Theta Ab1
% From E: 
% 
% ':-'(call_pel_directive(completion(theta))).
:- call_pel_directive(completion(theta)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1100).
% From E: 
% 
% ':-'(call_pel_directive(completion(ab1))).
:- call_pel_directive(completion(ab1)).

% completion Theta Ab2
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1100).
% From E: 
% 
% ':-'(call_pel_directive(completion(theta))).
:- call_pel_directive(completion(theta)).
% From E: 
% 
% ':-'(call_pel_directive(completion(ab2))).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1100).
:- call_pel_directive(completion(ab2)).
%; End of file.
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%; FILE: examples/Mueller2006/Chapter2/Sleep2.e
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; @book{Mueller:2006,
%;   author = "Erik T. Mueller",
%;   year = "2006",
%;   title = "Commonsense Reasoning",
%;   address = "San Francisco",
%;   publisher = "Morgan Kaufmann/Elsevier",
%; }
%;

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1129).
% load foundations/Root.e
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/Root.e'))).
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1129).
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/EC.e'))).
:- call_pel_directive(load('foundations/EC.e')).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1132).
% sort agent
% From E: 
% 
% sort(agent).
sort(agent).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1134).
% agent Nathan
% From E: 
% 
% t(agent,nathan).
isa(nathan,agent).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1136).
% fluent Awake(agent)
% From E: 
% 
% fluent(awake(agent)).
mpred_prop(awake(agent),fluent).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1136).
fluents([awake/1]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1138).
% event WakeUp(agent)
% From E: 
% 
% event(wakeUp(agent)).
events([wakeUp/1]).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1138).
mpred_prop(wakeUp(agent),action).
actions([wakeUp/1]).

% event FallAsleep(agent)
% From E: 
% 
% event(fallAsleep(agent)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1138).
events([fallAsleep/1]).
mpred_prop(fallAsleep(agent),action).
actions([fallAsleep/1]).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1141).
%; Sigma
% [agent,time]
 % Initiates(WakeUp(agent),Awake(agent),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1143).
% From E: 
% 
% initiates_at(
%    wakeUp(Agent), 
%    awake(Agent), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1143).
initiates(wakeUp(Agent),awake(Agent)).


% [agent,time]
 % Terminates(FallAsleep(agent),Awake(agent),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1143).
% From E: 
% 
% terminates_at(
%    fallAsleep(Agent), 
%    awake(Agent), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1143).
terminates(fallAsleep(Agent),awake(Agent)).


%; Gamma


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1148).
% !HoldsAt(Awake(Nathan),0).
% From E: 
% 
% holds(
%    not(awake(nathan)), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1148).
initially(not(awake(nathan))).


% HoldsAt(Awake(Nathan),1).
% From E: 
% 
% holds(
%    awake(nathan), 1).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1148).
at(awake(nathan),1).


%; abduced:
%; Happens(WakeUp(Nathan),0).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1154).
% range time 0 1
% From E: 
% 
% ':-'(call_pel_directive(range(time,0,1))).
:- call_pel_directive(range(time, 0, 1)).

% range offset 1 1
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1154).
% From E: 
% 
% ':-'(call_pel_directive(range(offset,1,1))).
:- call_pel_directive(range(offset, 1, 1)).
%; End of file.
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%; FILE: examples/Mueller2006/Chapter2/Sleep1.e
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; @book{Mueller:2006,
%;   author = "Erik T. Mueller",
%;   year = "2006",
%;   title = "Commonsense Reasoning",
%;   address = "San Francisco",
%;   publisher = "Morgan Kaufmann/Elsevier",
%; }
%;

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1183).
% load foundations/Root.e
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/Root.e'))).
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1183).
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/EC.e'))).
:- call_pel_directive(load('foundations/EC.e')).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1186).
% sort agent
% From E: 
% 
% sort(agent).
sort(agent).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1188).
% agent Nathan
% From E: 
% 
% t(agent,nathan).
isa(nathan,agent).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1190).
% fluent Awake(agent)
% From E: 
% 
% fluent(awake(agent)).
mpred_prop(awake(agent),fluent).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1190).
fluents([awake/1]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1192).
% event WakeUp(agent)
% From E: 
% 
% event(wakeUp(agent)).
events([wakeUp/1]).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1192).
mpred_prop(wakeUp(agent),action).
actions([wakeUp/1]).

% event FallAsleep(agent)
% From E: 
% 
% event(fallAsleep(agent)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1192).
events([fallAsleep/1]).
mpred_prop(fallAsleep(agent),action).
actions([fallAsleep/1]).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1195).
%; Sigma
% [agent,time]
 % Initiates(WakeUp(agent),Awake(agent),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1197).
% From E: 
% 
% initiates_at(
%    wakeUp(Agent), 
%    awake(Agent), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1197).
initiates(wakeUp(Agent),awake(Agent)).


% [agent,time]
 % Terminates(FallAsleep(agent),Awake(agent),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1197).
% From E: 
% 
% terminates_at(
%    fallAsleep(Agent), 
%    awake(Agent), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1197).
terminates(fallAsleep(Agent),awake(Agent)).


%; Delta


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1202).
% Happens(WakeUp(Nathan),1).
% From E: 
% 
% happens(
%    wakeUp(nathan), 1).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1202).
observe(at(wakeUp(nathan),1)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1204).
%; Gamma


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1206).
% !HoldsAt(Awake(Nathan),0).
% From E: 
% 
% holds(
%    not(awake(nathan)), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1206).
initially(not(awake(nathan))).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1208).
%; entailed:
%; HoldsAt(Awake(Nathan),3).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1211).
% completion Happens
% From E: 
% 
% ':-'(call_pel_directive(completion(happens))).
:- call_pel_directive(completion(happens)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1213).
% range time 0 3
% From E: 
% 
% ':-'(call_pel_directive(range(time,0,3))).
:- call_pel_directive(range(time, 0, 3)).

% range offset 1 1
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1213).
% From E: 
% 
% ':-'(call_pel_directive(range(offset,1,1))).
:- call_pel_directive(range(offset, 1, 1)).
%; End of file.
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%; FILE: examples/Mueller2006/Chapter2/Sleep3.e
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; @book{Mueller:2006,
%;   author = "Erik T. Mueller",
%;   year = "2006",
%;   title = "Commonsense Reasoning",
%;   address = "San Francisco",
%;   publisher = "Morgan Kaufmann/Elsevier",
%; }
%;

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1242).
% load foundations/Root.e
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/Root.e'))).
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1242).
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/EC.e'))).
:- call_pel_directive(load('foundations/EC.e')).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1245).
% sort agent
% From E: 
% 
% sort(agent).
sort(agent).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1247).
% agent Nathan
% From E: 
% 
% t(agent,nathan).
isa(nathan,agent).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1249).
% fluent Awake(agent)
% From E: 
% 
% fluent(awake(agent)).
mpred_prop(awake(agent),fluent).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1249).
fluents([awake/1]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1251).
% event WakeUp(agent)
% From E: 
% 
% event(wakeUp(agent)).
events([wakeUp/1]).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1251).
mpred_prop(wakeUp(agent),action).
actions([wakeUp/1]).

% event FallAsleep(agent)
% From E: 
% 
% event(fallAsleep(agent)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1251).
events([fallAsleep/1]).
mpred_prop(fallAsleep(agent),action).
actions([fallAsleep/1]).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1254).
%; Sigma
% [agent,time]
 % Initiates(WakeUp(agent),Awake(agent),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1256).
% From E: 
% 
% initiates_at(
%    wakeUp(Agent), 
%    awake(Agent), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1256).
initiates(wakeUp(Agent),awake(Agent)).


% [agent,time]
 % Terminates(FallAsleep(agent),Awake(agent),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1256).
% From E: 
% 
% terminates_at(
%    fallAsleep(Agent), 
%    awake(Agent), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1256).
terminates(fallAsleep(Agent),awake(Agent)).


%; Delta
% [agent,time]
% Happens(WakeUp(agent),time) ->
% !HoldsAt(Awake(agent),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1261).
% From E: 
% 
% '->'(
%    happens(
%       wakeUp(Agent), 
%       Time), 
%    holds(
%       not(awake(Agent)), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1261).
if(at(not(awake(Agent)),Time),
   happens(wakeUp(Agent),Time)).


% Happens(WakeUp(Nathan),0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1264).
% From E: 
% 
% happens(
%    wakeUp(nathan), 0).
observe(at(wakeUp(nathan),0)).


%; Gamma


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1269).
% HoldsAt(Awake(Nathan),1).
% From E: 
% 
% holds(
%    awake(nathan), 1).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1269).
at(awake(nathan),1).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1271).
%; inferred:
%; !HoldsAt(Awake(Nathan),0).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1274).
% completion Happens
% From E: 
% 
% ':-'(call_pel_directive(completion(happens))).
:- call_pel_directive(completion(happens)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1276).
% range time 0 1
% From E: 
% 
% ':-'(call_pel_directive(range(time,0,1))).
:- call_pel_directive(range(time, 0, 1)).

% range offset 1 1
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1276).
% From E: 
% 
% ':-'(call_pel_directive(range(offset,1,1))).
:- call_pel_directive(range(offset, 1, 1)).
%; End of file.
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%; FILE: examples/Mueller2006/Chapter2/Inconsistency3.e
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; @book{Mueller:2006,
%;   author = "Erik T. Mueller",
%;   year = "2006",
%;   title = "Commonsense Reasoning",
%;   address = "San Francisco",
%;   publisher = "Morgan Kaufmann/Elsevier",
%; }
%;

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1305).
% load foundations/Root.e
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/Root.e'))).
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1305).
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/EC.e'))).
:- call_pel_directive(load('foundations/EC.e')).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1308).
% sort object
% From E: 
% 
% sort(object).
sort(object).

% object O1
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1308).
% From E: 
% 
% t(object,o1).
isa(o1,object).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1311).
% fluent F(object)
% From E: 
% 
% fluent(f(object)).
mpred_prop(f(object),fluent).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1311).
fluents([f/1]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1313).
% event E(object)
% From E: 
% 
% event(e(object)).
mpred_prop(e(object),event).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1313).
events([e/1]).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1315).
% [object,time]
 % Releases(E(object),F(object),time).
% From E: 
% 
% releases_at(
%    e(Object), 
%    f(Object), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1315).
releases(e(Object),f(Object)).


% [object,time]
 % Terminates(E(object),F(object),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1315).
% From E: 
% 
% terminates_at(
%    e(Object), 
%    f(Object), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1315).
terminates(e(Object),f(Object)).


% Happens(E(O1),0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1317).
% From E: 
% 
% happens(
%    e(o1), 0).
observe(at(e(o1),0)).

% range time 0 1
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1319).
% From E: 
% 
% ':-'(call_pel_directive(range(time,0,1))).
:- call_pel_directive(range(time, 0, 1)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1321).
% range offset 1 1
% From E: 
% 
% ':-'(call_pel_directive(range(offset,1,1))).
:- call_pel_directive(range(offset, 1, 1)).
%; End of file.
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%; FILE: examples/Mueller2006/Chapter2/Sleep4.e
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; @book{Mueller:2006,
%;   author = "Erik T. Mueller",
%;   year = "2006",
%;   title = "Commonsense Reasoning",
%;   address = "San Francisco",
%;   publisher = "Morgan Kaufmann/Elsevier",
%; }
%;

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1349).
% load foundations/Root.e
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/Root.e'))).
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1349).
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/EC.e'))).
:- call_pel_directive(load('foundations/EC.e')).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1352).
% sort agent
% From E: 
% 
% sort(agent).
sort(agent).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1354).
% agent Nathan
% From E: 
% 
% t(agent,nathan).
isa(nathan,agent).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1356).
% fluent Awake(agent)
% From E: 
% 
% fluent(awake(agent)).
mpred_prop(awake(agent),fluent).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1356).
fluents([awake/1]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1358).
% event WakeUp(agent)
% From E: 
% 
% event(wakeUp(agent)).
events([wakeUp/1]).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1358).
mpred_prop(wakeUp(agent),action).
actions([wakeUp/1]).

% event FallAsleep(agent)
% From E: 
% 
% event(fallAsleep(agent)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1358).
events([fallAsleep/1]).
mpred_prop(fallAsleep(agent),action).
actions([fallAsleep/1]).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1361).
%; Sigma
% [agent,time]
 % Initiates(WakeUp(agent),Awake(agent),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1363).
% From E: 
% 
% initiates_at(
%    wakeUp(Agent), 
%    awake(Agent), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1363).
initiates(wakeUp(Agent),awake(Agent)).


% [agent,time]
 % Terminates(FallAsleep(agent),Awake(agent),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1363).
% From E: 
% 
% terminates_at(
%    fallAsleep(Agent), 
%    awake(Agent), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1363).
terminates(fallAsleep(Agent),awake(Agent)).


%; Delta


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1368).
% Happens(WakeUp(Nathan),1).
% From E: 
% 
% happens(
%    wakeUp(nathan), 1).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1368).
observe(at(wakeUp(nathan),1)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1370).
%; entailed:
%; HoldsAt(Awake(Nathan),3).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1373).
% completion Happens
% From E: 
% 
% ':-'(call_pel_directive(completion(happens))).
:- call_pel_directive(completion(happens)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1375).
% range time 0 3
% From E: 
% 
% ':-'(call_pel_directive(range(time,0,3))).
:- call_pel_directive(range(time, 0, 3)).

% range offset 1 1
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1375).
% From E: 
% 
% ':-'(call_pel_directive(range(offset,1,1))).
:- call_pel_directive(range(offset, 1, 1)).
%; End of file.
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%; FILE: examples/Mueller2006/Chapter2/Inconsistency4.e
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; @book{Mueller:2006,
%;   author = "Erik T. Mueller",
%;   year = "2006",
%;   title = "Commonsense Reasoning",
%;   address = "San Francisco",
%;   publisher = "Morgan Kaufmann/Elsevier",
%; }
%;

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1404).
% load foundations/Root.e
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/Root.e'))).
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1404).
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/EC.e'))).
:- call_pel_directive(load('foundations/EC.e')).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1407).
% sort object
% From E: 
% 
% sort(object).
sort(object).

% object O1
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1407).
% From E: 
% 
% t(object,o1).
isa(o1,object).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1410).
% event E(object)
% From E: 
% 
% event(e(object)).
mpred_prop(e(object),event).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1410).
events([e/1]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1412).
% fluent F1(object)
% From E: 
% 
% fluent(f1(object)).
mpred_prop(f1(object),fluent).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1412).
fluents([f1/1]).

% fluent F2(object)
% From E: 
% 
% fluent(f2(object)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1412).
mpred_prop(f2(object),fluent).
fluents([f2/1]).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1415).
% [object,time]
% Initiates(E(object),F1(object),time).
% From E: 
% 
% initiates_at(
%    e(Object), 
%    f1(Object), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1415).
initiates(e(Object),f1(Object)).


% [object,time]
% HoldsAt(F1(object),time) <-> HoldsAt(F2(object),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1419).
% From E: 
% 
% <->(
%    holds(
%       f1(Object), 
%       Time), 
%    holds(
%       f2(Object), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1419).
at(f1(Object), Time) <->
    at(f2(Object), Time).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1421).
% !HoldsAt(F2(O1),0).
% From E: 
% 
% holds(
%    not(f2(o1)), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1421).
initially(not(f2(o1))).


% Happens(E(O1),0).
% From E: 
% 
% happens(
%    e(o1), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1421).
observe(at(e(o1),0)).

% range time 0 1
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1423).
% From E: 
% 
% ':-'(call_pel_directive(range(time,0,1))).
:- call_pel_directive(range(time, 0, 1)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1425).
% range offset 1 1
% From E: 
% 
% ':-'(call_pel_directive(range(offset,1,1))).
:- call_pel_directive(range(offset, 1, 1)).
%; End of file.
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%; FILE: examples/Mueller2006/Chapter2/Inconsistency1.e
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; @book{Mueller:2006,
%;   author = "Erik T. Mueller",
%;   year = "2006",
%;   title = "Commonsense Reasoning",
%;   address = "San Francisco",
%;   publisher = "Morgan Kaufmann/Elsevier",
%; }
%;

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1453).
% load foundations/Root.e
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/Root.e'))).
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1453).
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/EC.e'))).
:- call_pel_directive(load('foundations/EC.e')).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1456).
% sort object
% From E: 
% 
% sort(object).
sort(object).

% object O1
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1456).
% From E: 
% 
% t(object,o1).
isa(o1,object).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1459).
% fluent F(object)
% From E: 
% 
% fluent(f(object)).
mpred_prop(f(object),fluent).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1459).
fluents([f/1]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1461).
% event E(object)
% From E: 
% 
% event(e(object)).
mpred_prop(e(object),event).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1461).
events([e/1]).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1463).
% [object,time]
 % Initiates(E(object),F(object),time).
% From E: 
% 
% initiates_at(
%    e(Object), 
%    f(Object), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1463).
initiates(e(Object),f(Object)).


% [object,time]
 % Terminates(E(object),F(object),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1463).
% From E: 
% 
% terminates_at(
%    e(Object), 
%    f(Object), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1463).
terminates(e(Object),f(Object)).


% Happens(E(O1),0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1465).
% From E: 
% 
% happens(
%    e(o1), 0).
observe(at(e(o1),0)).

% range time 0 1
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1467).
% From E: 
% 
% ':-'(call_pel_directive(range(time,0,1))).
:- call_pel_directive(range(time, 0, 1)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1469).
% range offset 1 1
% From E: 
% 
% ':-'(call_pel_directive(range(offset,1,1))).
:- call_pel_directive(range(offset, 1, 1)).
%; End of file.
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%; FILE: examples/Mueller2006/Chapter2/Inconsistency2.e
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; @book{Mueller:2006,
%;   author = "Erik T. Mueller",
%;   year = "2006",
%;   title = "Commonsense Reasoning",
%;   address = "San Francisco",
%;   publisher = "Morgan Kaufmann/Elsevier",
%; }
%;

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1497).
% load foundations/Root.e
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/Root.e'))).
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1497).
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/EC.e'))).
:- call_pel_directive(load('foundations/EC.e')).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1500).
% sort object
% From E: 
% 
% sort(object).
sort(object).

% object O1
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1500).
% From E: 
% 
% t(object,o1).
isa(o1,object).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1503).
% fluent F(object)
% From E: 
% 
% fluent(f(object)).
mpred_prop(f(object),fluent).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1503).
fluents([f/1]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1505).
% event E(object)
% From E: 
% 
% event(e(object)).
mpred_prop(e(object),event).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1505).
events([e/1]).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1507).
% [object,time]
 % Releases(E(object),F(object),time).
% From E: 
% 
% releases_at(
%    e(Object), 
%    f(Object), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1507).
releases(e(Object),f(Object)).


% [object,time]
 % Initiates(E(object),F(object),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1507).
% From E: 
% 
% initiates_at(
%    e(Object), 
%    f(Object), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1507).
initiates(e(Object),f(Object)).


% Happens(E(O1),0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1509).
% From E: 
% 
% happens(
%    e(o1), 0).
observe(at(e(o1),0)).

% range time 0 1
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1511).
% From E: 
% 
% ':-'(call_pel_directive(range(time,0,1))).
:- call_pel_directive(range(time, 0, 1)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1513).
% range offset 1 1
% From E: 
% 
% ':-'(call_pel_directive(range(offset,1,1))).
:- call_pel_directive(range(offset, 1, 1)).
%; End of file.
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%; FILE: examples/Mueller2006/Chapter8/CameraWithFlash.e
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; @book{Mueller:2006,
%;   author = "Erik T. Mueller",
%;   year = "2006",
%;   title = "Commonsense Reasoning",
%;   address = "San Francisco",
%;   publisher = "Morgan Kaufmann/Elsevier",
%; }
%;

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1541).
% load foundations/Root.e
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/Root.e'))).
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1541).
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/EC.e'))).
:- call_pel_directive(load('foundations/EC.e')).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1544).
% sort camera
% From E: 
% 
% sort(camera).
sort(camera).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1546).
% camera Camera1
% From E: 
% 
% t(camera,camera1).
isa(camera1,camera).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1548).
% fluent ProperlyExposedPicture(camera)
% From E: 
% 
% fluent(properlyExposedPicture(camera)).
mpred_prop(properlyExposedPicture(camera),fluent).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1548).
fluents([properlyExposedPicture/1]).

% fluent ImproperlyExposedPicture(camera)
% From E: 
% 
% fluent(improperlyExposedPicture(camera)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1548).
mpred_prop(improperlyExposedPicture(camera),fluent).
fluents([improperlyExposedPicture/1]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1551).
% event ReleaseShutter(camera)
% From E: 
% 
% event(releaseShutter(camera)).
mpred_prop(releaseShutter(camera),event).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1551).
events([releaseShutter/1]).

% event TriggerFlash(camera)
% From E: 
% 
% event(triggerFlash(camera)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1551).
mpred_prop(triggerFlash(camera),event).
events([triggerFlash/1]).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1554).
%; Sigma
% [camera,time]
% Happens(TriggerFlash(camera),time) ->
% Initiates(ReleaseShutter(camera),ProperlyExposedPicture(camera),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1556).
% From E: 
% 
% '->'(
%    happens(
%       triggerFlash(Camera), 
%       Time), 
%    initiates_at(
%       releaseShutter(Camera), 
%       properlyExposedPicture(Camera), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1556).
if(initiates(releaseShutter(Camera),
	     at(properlyExposedPicture(Camera),Time)),
   happens(triggerFlash(Camera),Time)).


% [camera,time]
% !Happens(TriggerFlash(camera),time) ->
% Initiates(ReleaseShutter(camera),ImproperlyExposedPicture(camera),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1561).
% From E: 
% 
% '->'(
%    not(happens(
%           triggerFlash(Camera), 
%           Time)), 
%    initiates_at(
%       releaseShutter(Camera), 
%       improperlyExposedPicture(Camera), 
%       Time)).
if(initiates(releaseShutter(Camera),
	     at(improperlyExposedPicture(Camera),Time)),
   not(happens(triggerFlash(Camera),Time))).


%; Delta

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1566).
% Delta: 
% From E: 
% 
% directive(delta).
directive(delta).
 


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1566).
% Happens(ReleaseShutter(Camera1),0).
% From E: 
% 
% happens(
%    releaseShutter(camera1), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1566).
observe(at(releaseShutter(camera1),0)).

% Delta: 
% From E: 
% 
% directive(delta).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1566).
directive(delta).
 


% Happens(TriggerFlash(Camera1),1).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1566).
% From E: 
% 
% happens(
%    triggerFlash(camera1), 1).
observe(at(triggerFlash(camera1),1)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1568).
% Delta: 
% From E: 
% 
% directive(delta).
directive(delta).
 


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1568).
% Happens(ReleaseShutter(Camera1),1).
% From E: 
% 
% happens(
%    releaseShutter(camera1), 1).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1568).
observe(at(releaseShutter(camera1),1)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1570).
%; added:
% [camera]
 % !HoldsAt(ImproperlyExposedPicture(camera),0).
% From E: 
% 
% holds(
%    not(improperlyExposedPicture(Camera)), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1570).
initially(not(improperlyExposedPicture(Camera))).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1572).
% [camera]
 % !HoldsAt(ProperlyExposedPicture(camera),0).
% From E: 
% 
% holds(
%    not(properlyExposedPicture(Camera)), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1572).
initially(not(properlyExposedPicture(Camera))).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1574).
% completion Delta Happens
% From E: 
% 
% ':-'(call_pel_directive(completion(delta))).
:- call_pel_directive(completion(delta)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1574).
% From E: 
% 
% ':-'(call_pel_directive(completion(happens))).
:- call_pel_directive(completion(happens)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1576).
% range time 0 2
% From E: 
% 
% ':-'(call_pel_directive(range(time,0,2))).
:- call_pel_directive(range(time, 0, 2)).

% range offset 1 1
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1576).
% From E: 
% 
% ':-'(call_pel_directive(range(offset,1,1))).
:- call_pel_directive(range(offset, 1, 1)).
%; End of file.
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%; FILE: examples/Mueller2006/Chapter8/MovingRobot.e
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; @inproceedings{Shanahan:1996,
%;   author = "Murray Shanahan",
%;   year = "1996",
%;   title = "Robotics and the common sense informatic situation",
%;   editor = "Wolfgang Wahlster",
%;   booktitle = "\uppercase{P}roceedings of the \uppercase{T}welfth \uppercase{E}uropean \uppercase{C}onference on \uppercase{A}rtificial \uppercase{I}ntelligence",
%;   pages = "684--688",
%;   address = "Chichester, UK",
%;   publisher = "John Wiley",
%; }
%;
%; @book{Mueller:2006,
%;   author = "Erik T. Mueller",
%;   year = "2006",
%;   title = "Commonsense Reasoning",
%;   address = "San Francisco",
%;   publisher = "Morgan Kaufmann/Elsevier",
%; }
%;

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1616).
% option renaming off
% From E: 
% 
% ':-'(call_pel_directive(option(renaming,off))).
:- call_pel_directive(option(renaming, off)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1618).
% load foundations/Root.e
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/Root.e'))).
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1618).
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/EC.e'))).
:- call_pel_directive(load('foundations/EC.e')).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1621).
% sort coord: integer
% From E: 
% 
% subsort(coord,integer).
subsort(coord,integer).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1623).
% sort direction: integer
% From E: 
% 
% subsort(direction,integer).
subsort(direction,integer).
%; 0 -> 0, 1 -> 90, 2 -> 180, 3 -> 370

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1626).
% sort robot
% From E: 
% 
% sort(robot).
sort(robot).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1628).
% robot Robot1
% From E: 
% 
% t(robot,robot1).
isa(robot1,robot).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1630).
% function Sin(direction): coord
% From E: 
% 
% function(
%    sin(direction), 
%    coord).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1630).
function(sin(direction),coord).

% function Cos(direction): coord
% From E: 
% 
% function(
%    cos(direction), 
%    coord).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1630).
function(cos(direction),coord).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1633).
% Sin(0)=0.
% From E: 
% 
% '='(
%    sin(0), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1633).
sin(0,0).


% Sin(1)=1.
% From E: 
% 
% '='(
%    sin(1), 1).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1633).
sin(1,1).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1635).
% Sin(2)=2.
% From E: 
% 
% '='(
%    sin(2), 2).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1635).
sin(2,2).


% Sin(3)=3.
% From E: 
% 
% '='(
%    sin(3), 3).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1635).
sin(3,3).


% Cos(0)=1.
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1637).
% From E: 
% 
% '='(
%    cos(0), 1).
cos(0,1).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1639).
% Cos(1)=2.
% From E: 
% 
% '='(
%    cos(1), 2).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1639).
cos(1,2).


% Cos(2)=3.
% From E: 
% 
% '='(
%    cos(2), 3).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1639).
cos(2,3).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1641).
% Cos(3)=4.
% From E: 
% 
% '='(
%    cos(3), 4).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1641).
cos(3,4).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1643).
% fluent Direction(robot,direction)
% From E: 
% 
% fluent(direction(robot,direction)).
mpred_prop(direction(robot,direction),fluent).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1643).
fluents([direction/2]).

% fluent Location(robot,coord,coord)
% From E: 
% 
% fluent(location(robot,coord,coord)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1643).
mpred_prop(location(robot,coord,coord),fluent).
fluents([location/3]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1646).
% event MoveLeftWheel(robot)
% From E: 
% 
% event(moveLeftWheel(robot)).
mpred_prop(moveLeftWheel(robot),event).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1646).
events([moveLeftWheel/1]).

% event MoveRightWheel(robot)
% From E: 
% 
% event(moveRightWheel(robot)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1646).
mpred_prop(moveRightWheel(robot),event).
events([moveRightWheel/1]).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1649).
%; Sigma
% [robot,direction1,direction2,time]
% !Happens(MoveRightWheel(robot),time) &
% HoldsAt(Direction(robot,direction1),time) &
% direction2 = (direction1-1)->
% Initiates(MoveLeftWheel(robot),Direction(robot,direction2),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1651).
% From E: 
% 
% '->'(
%    ','(
%       not(happens(
%              moveRightWheel(Robot), 
%              Time)), 
%       ','(
%          holds(
%             direction(Robot,Direction1), 
%             Time), 
%          Direction2=Direction1-1)), 
%    initiates_at(
%       moveLeftWheel(Robot), 
%       direction(Robot,Direction2), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1651).
if(initiates(moveLeftWheel(Robot), at(direction(Robot, Direction2), Time)),  (not(happens(moveRightWheel(Robot), Time)), at(direction(Robot, Direction1), Time), equals(Direction2, Direction1-1))).


% [robot,direction,time]
% !Happens(MoveRightWheel(robot),time) &
% HoldsAt(Direction(robot,direction),time) ->
% Terminates(MoveLeftWheel(robot),Direction(robot,direction),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1658).
% From E: 
% 
% '->'(
%    ','(
%       not(happens(
%              moveRightWheel(Robot), 
%              Time)), 
%       holds(
%          direction(Robot,Direction), 
%          Time)), 
%    terminates_at(
%       moveLeftWheel(Robot), 
%       direction(Robot,Direction), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1658).
if(terminates(moveLeftWheel(Robot), at(direction(Robot, Direction), Time)),  (not(happens(moveRightWheel(Robot), Time)), at(direction(Robot, Direction), Time))).


% [robot,direction1,direction2,time]
% !Happens(MoveLeftWheel(robot),time) &
% HoldsAt(Direction(robot,direction1),time) &
% direction2 = (direction1+1)->
% Initiates(MoveRightWheel(robot),Direction(robot,direction2),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1663).
% From E: 
% 
% '->'(
%    ','(
%       not(happens(
%              moveLeftWheel(Robot), 
%              Time)), 
%       ','(
%          holds(
%             direction(Robot,Direction1), 
%             Time), 
%          Direction2=Direction1+1)), 
%    initiates_at(
%       moveRightWheel(Robot), 
%       direction(Robot,Direction2), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1663).
if(initiates(moveRightWheel(Robot), at(direction(Robot, Direction2), Time)),  (not(happens(moveLeftWheel(Robot), Time)), at(direction(Robot, Direction1), Time), equals(Direction2, Direction1+1))).


% [robot,direction,time]
% !Happens(MoveLeftWheel(robot),time) &
% HoldsAt(Direction(robot,direction),time) ->
% Terminates(MoveRightWheel(robot),Direction(robot,direction),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1669).
% From E: 
% 
% '->'(
%    ','(
%       not(happens(
%              moveLeftWheel(Robot), 
%              Time)), 
%       holds(
%          direction(Robot,Direction), 
%          Time)), 
%    terminates_at(
%       moveRightWheel(Robot), 
%       direction(Robot,Direction), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1669).
if(terminates(moveRightWheel(Robot), at(direction(Robot, Direction), Time)),  (not(happens(moveLeftWheel(Robot), Time)), at(direction(Robot, Direction), Time))).


% [robot,direction,coord1,coord2,coord3,coord4,time]
% Happens(MoveLeftWheel(robot),time) &
% HoldsAt(Location(robot,coord1,coord2),time) &
% HoldsAt(Direction(robot,direction),time) &
% coord3 = coord1+Cos(direction) &
% coord4 = coord2+Sin(direction) ->
% Initiates(MoveRightWheel(robot),
%           Location(robot,coord3,coord4),
%           time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1674).
% From E: 
% 
% '->'(
%    ','(
%       happens(
%          moveLeftWheel(Robot), 
%          Time), 
%       ','(
%          holds(
%             location(Robot,Coord1,Coord2), 
%             Time), 
%          ','(
%             holds(
%                direction(Robot,Direction), 
%                Time), 
%             ','(
%                Coord3=Coord1+cos(Direction), 
%                Coord4=Coord2+sin(Direction))))), 
%    initiates_at(
%       moveRightWheel(Robot), 
%       location(Robot,Coord3,Coord4), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1674).
if(initiates(moveRightWheel(Robot), at(location(Robot, Coord3, Coord4), Time)),  (happens(moveLeftWheel(Robot), Time), at(location(Robot, Coord1, Coord2), Time), at(direction(Robot, Direction), Time), equals(Coord3, Coord1+cos(Direction)), equals(Coord4, Coord2+sin(Direction)))).


% [robot,coord1,coord2,time]
% Happens(MoveLeftWheel(robot),time) &
% HoldsAt(Location(robot,coord1,coord2),time) ->
%; FIX: Direction not needed!!
%; HoldsAt(Direction(robot,direction),time) ->
% Terminates(MoveRightWheel(robot),Location(robot,coord1,coord2),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1684).
% From E: 
% 
% '->'(
%    ','(
%       happens(
%          moveLeftWheel(Robot), 
%          Time), 
%       holds(
%          location(Robot,Coord1,Coord2), 
%          Time)), 
%    terminates_at(
%       moveRightWheel(Robot), 
%       location(Robot,Coord1,Coord2), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1684).
if(terminates(moveRightWheel(Robot), at(location(Robot, Coord1, Coord2), Time)),  (happens(moveLeftWheel(Robot), Time), at(location(Robot, Coord1, Coord2), Time))).


%; Delta


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1692).
% Happens(MoveRightWheel(Robot1),0).
% From E: 
% 
% happens(
%    moveRightWheel(robot1), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1692).
observe(at(moveRightWheel(robot1),0)).


% Happens(MoveLeftWheel(Robot1),1).
% From E: 
% 
% happens(
%    moveLeftWheel(robot1), 1).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1692).
observe(at(moveLeftWheel(robot1),1)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1694).
% Happens(MoveRightWheel(Robot1),1).
% From E: 
% 
% happens(
%    moveRightWheel(robot1), 1).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1694).
observe(at(moveRightWheel(robot1),1)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1696).
%; Psi
% [robot,coord1,coord2,coord3,coord4,time]
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1700).
% HoldsAt(Location(robot,coord1,coord2),time) &
% HoldsAt(Location(robot,coord3,coord4),time) ->
% coord1=coord3 &
% coord2=coord4.
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          location(Robot,Coord1,Coord2), 
%          Time), 
%       holds(
%          location(Robot,Coord3,Coord4), 
%          Time)), 
%    ','(
%       Coord1=Coord3, 
%       Coord2=Coord4)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1700).
if((equals(Coord1, Coord3), equals(Coord2, Coord4)),  (at(location(Robot, Coord1, Coord2), Time), at(location(Robot, Coord3, Coord4), Time))).


% [robot,direction1,direction2,time]
% HoldsAt(Direction(robot,direction1),time) &
% HoldsAt(Direction(robot,direction2),time) ->
% direction1=direction2.
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1706).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          direction(Robot,Direction1), 
%          Time), 
%       holds(
%          direction(Robot,Direction2), 
%          Time)), 
%    Direction1=Direction2).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1706).
if(equals(Direction1, Direction2),  (at(direction(Robot, Direction1), Time), at(direction(Robot, Direction2), Time))).


%; Gamma


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1712).
% HoldsAt(Location(Robot1,0,0),0).
% From E: 
% 
% holds(
%    location(robot1,0,0), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1712).
initially(location(robot1,0,0)).


% HoldsAt(Direction(Robot1,0),0).
% From E: 
% 
% holds(
%    direction(robot1,0), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1712).
initially(direction(robot1,0)).

% completion Happens
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1714).
% From E: 
% 
% ':-'(call_pel_directive(completion(happens))).
:- call_pel_directive(completion(happens)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1717).
% range time 0 3
% From E: 
% 
% ':-'(call_pel_directive(range(time,0,3))).
:- call_pel_directive(range(time, 0, 3)).

% range coord 0 3
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1717).
% From E: 
% 
% ':-'(call_pel_directive(range(coord,0,3))).
:- call_pel_directive(range(coord, 0, 3)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1719).
% range direction 0 3
% From E: 
% 
% ':-'(call_pel_directive(range(direction,0,3))).
:- call_pel_directive(range(direction, 0, 3)).

% range offset 1 1
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1719).
% From E: 
% 
% ':-'(call_pel_directive(range(offset,1,1))).
:- call_pel_directive(range(offset, 1, 1)).
%; End of file.
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%; FILE: examples/Mueller2006/Chapter8/PatHeadRubStomach.e
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; @book{Mueller:2006,
%;   author = "Erik T. Mueller",
%;   year = "2006",
%;   title = "Commonsense Reasoning",
%;   address = "San Francisco",
%;   publisher = "Morgan Kaufmann/Elsevier",
%; }
%;

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1748).
% load foundations/Root.e
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/Root.e'))).
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1748).
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/EC.e'))).
:- call_pel_directive(load('foundations/EC.e')).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1751).
% sort agent
% From E: 
% 
% sort(agent).
sort(agent).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1753).
% event PatHead(agent)
% From E: 
% 
% event(patHead(agent)).
events([patHead/1]).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1753).
mpred_prop(patHead(agent),action).
actions([patHead/1]).

% event RubStomach(agent)
% From E: 
% 
% event(rubStomach(agent)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1753).
events([rubStomach/1]).
mpred_prop(rubStomach(agent),action).
actions([rubStomach/1]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1756).
% agent Nathan
% From E: 
% 
% t(agent,nathan).
isa(nathan,agent).
%; Delta
% [agent,time]
% Happens(PatHead(agent),time) ->
% !Happens(RubStomach(agent),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1760).
% From E: 
% 
% '->'(
%    happens(
%       patHead(Agent), 
%       Time), 
%    not(happens(
%           rubStomach(Agent), 
%           Time))).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1760).
if(not(happens(rubStomach(Agent),Time)),
   happens(patHead(Agent),Time)).


% Happens(PatHead(Nathan),0) & Happens(RubStomach(Nathan),0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1763).
% From E: 
% 
% ','(
%    happens(
%       patHead(nathan), 0), 
%    happens(
%       rubStomach(nathan), 0)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1763).
happens(patHead(nathan), 0),
happens(rubStomach(nathan), 0).

% range time 0 1
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1765).
% From E: 
% 
% ':-'(call_pel_directive(range(time,0,1))).
:- call_pel_directive(range(time, 0, 1)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1767).
% range offset 1 1
% From E: 
% 
% ':-'(call_pel_directive(range(offset,1,1))).
:- call_pel_directive(range(offset, 1, 1)).
%; End of file.
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%; FILE: examples/Mueller2006/Chapter10/MovingNewspaperAndBox.e
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; @book{Mueller:2006,
%;   author = "Erik T. Mueller",
%;   year = "2006",
%;   title = "Commonsense Reasoning",
%;   address = "San Francisco",
%;   publisher = "Morgan Kaufmann/Elsevier",
%; }
%;

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1795).
% load foundations/Root.e
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/Root.e'))).
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1795).
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/EC.e'))).
:- call_pel_directive(load('foundations/EC.e')).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1798).
% sort object
% From E: 
% 
% sort(object).
sort(object).

% sort agent: object
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1798).
% From E: 
% 
% subsort(agent,object).
subsort(agent,object).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1800).
% sort physobj: object
% From E: 
% 
% subsort(physobj,object).
subsort(physobj,object).

% sort room: object
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1800).
% From E: 
% 
% subsort(room,object).
subsort(room,object).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1803).
% fluent IN(object,object)
% From E: 
% 
% fluent(in(object,object)).
mpred_prop(in(object,object),fluent).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1803).
fluents([in/2]).

% fluent INROOM(object,room)
% From E: 
% 
% fluent(inroom(object,room)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1803).
mpred_prop(inroom(object,room),fluent).
fluents([inroom/2]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1805).
% noninertial INROOM
% From E: 
% 
% ':-'(call_pel_directive(noninertial(inroom))).
:- call_pel_directive(noninertial(inroom)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1807).
% event MOVE(agent,object,object,object)
% From E: 
% 
% event(move(agent, object, object, 
%          object)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1807).
events([move/4]).
mpred_prop(move(agent,object,object,object),action).
actions([move/4]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1809).
% agent Lisa
% From E: 
% 
% t(agent,lisa).
isa(lisa,agent).

% physobj Box, Newspaper
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1809).
% From E: 
% 
% t(physobj,box).
isa(box,physobj).
% From E: 
% 
% t(physobj,newspaper).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1809).
isa(newspaper,physobj).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1811).
% room Kitchen, LivingRoom
% From E: 
% 
% t(room,kitchen).
isa(kitchen,room).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1811).
% From E: 
% 
% t(room,livingRoom).
isa(livingRoom,room).
%; Sigma
%; RS10
% [agent,physobj1,physobj2,room,time]
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1817).
% HoldsAt(IN(agent,room),time) &
% HoldsAt(IN(physobj1,room),time) &
% HoldsAt(INROOM(physobj2,room),time) ->
% Initiates(MOVE(agent,physobj1,room,physobj2),IN(physobj1,physobj2),time).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          in(Agent,Room), 
%          Time), 
%       ','(
%          holds(
%             in(Physobj1,Room), 
%             Time), 
%          holds(
%             inroom(Physobj2,Room), 
%             Time))), 
%    initiates_at(
%       move(Agent, Physobj1, Room, 
%          Physobj2), 
%       in(Physobj1,Physobj2), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1817).
if(initiates(move(Agent, Physobj1, Room, Physobj2), at(in(Physobj1, Physobj2), Time)),  (at(in(Agent, Room), Time), at(in(Physobj1, Room), Time), at(inroom(Physobj2, Room), Time))).


%; RS11
% [agent,physobj1,physobj2,room,time]
% HoldsAt(IN(agent,room),time) &
% HoldsAt(IN(physobj1,room),time) &
% HoldsAt(INROOM(physobj2,room),time) ->
% Terminates(MOVE(agent,physobj1,room,physobj2),IN(physobj1,room),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1823).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          in(Agent,Room), 
%          Time), 
%       ','(
%          holds(
%             in(Physobj1,Room), 
%             Time), 
%          holds(
%             inroom(Physobj2,Room), 
%             Time))), 
%    terminates_at(
%       move(Agent, Physobj1, Room, 
%          Physobj2), 
%       in(Physobj1,Room), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1823).
if(terminates(move(Agent, Physobj1, Room, Physobj2), at(in(Physobj1, Room), Time)),  (at(in(Agent, Room), Time), at(in(Physobj1, Room), Time), at(inroom(Physobj2, Room), Time))).


%; RS12
% [agent,physobj1,physobj2,room,time]
% HoldsAt(IN(agent,room),time) ->
% Initiates(MOVE(agent,physobj1,physobj2,room),IN(physobj1,room),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1830).
% From E: 
% 
% '->'(
%    holds(
%       in(Agent,Room), 
%       Time), 
%    initiates_at(
%       move(Agent, Physobj1, Physobj2, 
%          Room), 
%       in(Physobj1,Room), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1830).
if(initiates(move(Agent,Physobj1,Physobj2,Room),
	     at(in(Physobj1,Room),Time)),
   at(in(Agent,Room),Time)).


%; RS13
% [agent,physobj1,physobj2,room,time]
% HoldsAt(IN(agent,room),time) ->
% Terminates(MOVE(agent,physobj1,physobj2,room),IN(physobj1,physobj2),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1835).
% From E: 
% 
% '->'(
%    holds(
%       in(Agent,Room), 
%       Time), 
%    terminates_at(
%       move(Agent, Physobj1, Physobj2, 
%          Room), 
%       in(Physobj1,Physobj2), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1835).
if(terminates(move(Agent,
		   Physobj1,
		   Physobj2,
		   Room),
	      at(in(Physobj1,Physobj2),Time)),
   at(in(Agent,Room),Time)).


%; RS14
% [agent,room1,room2,time]
% HoldsAt(IN(agent,room1),time) ->
% Initiates(MOVE(agent,agent,room1,room2),IN(agent,room2),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1840).
% From E: 
% 
% '->'(
%    holds(
%       in(Agent,Room1), 
%       Time), 
%    initiates_at(
%       move(Agent, Agent, Room1, 
%          Room2), 
%       in(Agent,Room2), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1840).
if(initiates(move(Agent,Agent,Room1,Room2),
	     at(in(Agent,Room2),Time)),
   at(in(Agent,Room1),Time)).


%; RS15
% [agent,room1,room2,time]
% HoldsAt(IN(agent,room1),time) ->
% Terminates(MOVE(agent,agent,room1,room2),IN(agent,room1),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1845).
% From E: 
% 
% '->'(
%    holds(
%       in(Agent,Room1), 
%       Time), 
%    terminates_at(
%       move(Agent, Agent, Room1, 
%          Room2), 
%       in(Agent,Room1), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1845).
if(terminates(move(Agent,Agent,Room1,Room2),
	      at(in(Agent,Room1),Time)),
   at(in(Agent,Room1),Time)).


%; RS16
% [agent,physobj,room,time]
% HoldsAt(IN(agent,room),time) &
% HoldsAt(IN(physobj,room),time) ->
% Initiates(MOVE(agent,physobj,room,agent),IN(physobj,agent),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1850).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          in(Agent,Room), 
%          Time), 
%       holds(
%          in(Physobj,Room), 
%          Time)), 
%    initiates_at(
%       move(Agent, Physobj, Room, 
%          Agent), 
%       in(Physobj,Agent), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1850).
if(initiates(move(Agent, Physobj, Room, Agent), at(in(Physobj, Agent), Time)),  (at(in(Agent, Room), Time), at(in(Physobj, Room), Time))).


%; RS17
% [agent,physobj,room,time]
% HoldsAt(IN(agent,room),time) &
% HoldsAt(IN(physobj,room),time) ->
% Terminates(MOVE(agent,physobj,room,agent),IN(physobj,room),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1856).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          in(Agent,Room), 
%          Time), 
%       holds(
%          in(Physobj,Room), 
%          Time)), 
%    terminates_at(
%       move(Agent, Physobj, Room, 
%          Agent), 
%       in(Physobj,Room), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1856).
if(terminates(move(Agent, Physobj, Room, Agent), at(in(Physobj, Room), Time)),  (at(in(Agent, Room), Time), at(in(Physobj, Room), Time))).


%; RS18
% [agent,physobj,room,time]
% HoldsAt(IN(physobj,agent),time) &
% HoldsAt(IN(agent,room),time) ->
% Initiates(MOVE(agent,physobj,agent,room),IN(physobj,room),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1862).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          in(Physobj,Agent), 
%          Time), 
%       holds(
%          in(Agent,Room), 
%          Time)), 
%    initiates_at(
%       move(Agent, Physobj, Agent, 
%          Room), 
%       in(Physobj,Room), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1862).
if(initiates(move(Agent, Physobj, Agent, Room), at(in(Physobj, Room), Time)),  (at(in(Physobj, Agent), Time), at(in(Agent, Room), Time))).


%; RS19
% [agent,physobj,room,time]
% HoldsAt(IN(physobj,agent),time) &
% HoldsAt(IN(agent,room),time) ->
% Terminates(MOVE(agent,physobj,agent,room),IN(physobj,agent),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1868).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          in(Physobj,Agent), 
%          Time), 
%       holds(
%          in(Agent,Room), 
%          Time)), 
%    terminates_at(
%       move(Agent, Physobj, Agent, 
%          Room), 
%       in(Physobj,Agent), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1868).
if(terminates(move(Agent, Physobj, Agent, Room), at(in(Physobj, Agent), Time)),  (at(in(Physobj, Agent), Time), at(in(Agent, Room), Time))).


%; Delta


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1875).
% Happens(MOVE(Lisa,Newspaper,LivingRoom,Box),0).
% From E: 
% 
% happens(
%    move(lisa, newspaper, livingRoom, 
%       box), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1875).
observe(at(move(lisa,newspaper,livingRoom,box),0)).


% Happens(MOVE(Lisa,Box,LivingRoom,Lisa),1).
% From E: 
% 
% happens(
%    move(lisa, box, livingRoom, 
%       lisa), 1).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1875).
observe(at(move(lisa,box,livingRoom,lisa),1)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1877).
% Happens(MOVE(Lisa,Lisa,LivingRoom,Kitchen),2).
% From E: 
% 
% happens(
%    move(lisa, lisa, livingRoom, 
%       kitchen), 2).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1877).
observe(at(move(lisa,lisa,livingRoom,kitchen),2)).


% Happens(MOVE(Lisa,Box,Lisa,Kitchen),3).
% From E: 
% 
% happens(
%    move(lisa, box, lisa, 
%       kitchen), 3).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1877).
observe(at(move(lisa,box,lisa,kitchen),3)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1879).
% Happens(MOVE(Lisa,Lisa,Kitchen,LivingRoom),4).
% From E: 
% 
% happens(
%    move(lisa, lisa, kitchen, 
%       livingRoom), 4).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1879).
observe(at(move(lisa,lisa,kitchen,livingRoom),4)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1881).
%; Psi
%; RS1
% [object,time]
 % !HoldsAt(IN(object,object),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1883).
% From E: 
% 
% holds(
%    not(in(Object,Object)), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1883).
at(not(in(Object,Object)),Time).


%; RS2
% [object1,object2,time]
% HoldsAt(IN(object1,object2),time) ->
% !HoldsAt(IN(object2,object1),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1887).
% From E: 
% 
% '->'(
%    holds(
%       in(Object1,Object2), 
%       Time), 
%    holds(
%       not(in(Object2,Object1)), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1887).
if(at(not(in(Object2,Object1)),Time),
   at(in(Object1,Object2),Time)).


%; RS3
% [object1,object2,object3,time]
% HoldsAt(IN(object1,object2),time) &
% HoldsAt(IN(object2,object3),time) ->
% !HoldsAt(IN(object1,object3),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1892).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          in(Object1,Object2), 
%          Time), 
%       holds(
%          in(Object2,Object3), 
%          Time)), 
%    holds(
%       not(in(Object1,Object3)), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1892).
if(at(not(in(Object1, Object3)), Time),  (at(in(Object1, Object2), Time), at(in(Object2, Object3), Time))).


%; RS4
% [object,object1,object2,time]
% HoldsAt(IN(object,object1),time) &
% HoldsAt(IN(object,object2),time) ->
% object1=object2.
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1898).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          in(Object,Object1), 
%          Time), 
%       holds(
%          in(Object,Object2), 
%          Time)), 
%    Object1=Object2).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1898).
if(equals(Object1, Object2),  (at(in(Object, Object1), Time), at(in(Object, Object2), Time))).


%; RS7
% [object,room,time]
% HoldsAt(IN(object,room),time) ->
% HoldsAt(INROOM(object,room),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1904).
% From E: 
% 
% '->'(
%    holds(
%       in(Object,Room), 
%       Time), 
%    holds(
%       inroom(Object,Room), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1904).
if(at(inroom(Object,Room),Time),
   at(in(Object,Room),Time)).


%; RS8
% [object1,object2,room,time]
% HoldsAt(IN(object1,object2),time) &
% HoldsAt(INROOM(object2,room),time) ->
% HoldsAt(INROOM(object1,room),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1909).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          in(Object1,Object2), 
%          Time), 
%       holds(
%          inroom(Object2,Room), 
%          Time)), 
%    holds(
%       inroom(Object1,Room), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1909).
if(at(inroom(Object1, Room), Time),  (at(in(Object1, Object2), Time), at(inroom(Object2, Room), Time))).


%; RS9
% [object,room1,room2,time]
% HoldsAt(INROOM(object,room1),time) &
% HoldsAt(INROOM(object,room2),time) ->
% room1=room2.
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1915).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          inroom(Object,Room1), 
%          Time), 
%       holds(
%          inroom(Object,Room2), 
%          Time)), 
%    Room1=Room2).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1915).
if(equals(Room1, Room2),  (at(inroom(Object, Room1), Time), at(inroom(Object, Room2), Time))).


%; Gamma


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1922).
% HoldsAt(IN(Lisa,LivingRoom),0).
% From E: 
% 
% holds(
%    in(lisa,livingRoom), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1922).
initially(in(lisa,livingRoom)).


% HoldsAt(IN(Newspaper,LivingRoom),0).
% From E: 
% 
% holds(
%    in(newspaper,livingRoom), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1922).
initially(in(newspaper,livingRoom)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1924).
% HoldsAt(IN(Box,LivingRoom),0).
% From E: 
% 
% holds(
%    in(box,livingRoom), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1924).
initially(in(box,livingRoom)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1926).
%; added:
% [room1,room2,time]
 % !HoldsAt(INROOM(room1,room2),time).
% From E: 
% 
% holds(
%    not(inroom(Room1,Room2)), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1926).
at(not(inroom(Room1,Room2)),Time).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1928).
% [room,object,time]
 % !HoldsAt(IN(room,object),time).
% From E: 
% 
% holds(
%    not(in(Room,Object)), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1928).
at(not(in(Room,Object)),Time).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1930).
%; entailed:
%; HoldsAt(IN(Lisa,LivingRoom),5).
%; HoldsAt(IN(Box,Kitchen),5).
%; HoldsAt(INROOM(Newspaper,Kitchen),5).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1935).
% completion Happens
% From E: 
% 
% ':-'(call_pel_directive(completion(happens))).
:- call_pel_directive(completion(happens)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1937).
% range time 0 5
% From E: 
% 
% ':-'(call_pel_directive(range(time,0,5))).
:- call_pel_directive(range(time, 0, 5)).

% range offset 1 1
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1937).
% From E: 
% 
% ':-'(call_pel_directive(range(offset,1,1))).
:- call_pel_directive(range(offset, 1, 1)).
%; End of file.
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%; FILE: examples/Mueller2006/Chapter10/TwoScreens.e
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; @phdthesis{Cassimatis:2002,
%;   author = "Nicholas L. Cassimatis",
%;   year = "2002",
%;   title = "Polyscheme: A Cognitive Architecture for Integrating Multiple Representation and Inference Schemes",
%;   address = "Cambridge, MA",
%;   school = "Program in Media Arts and Sciences, School of Architecture and Planning, Massachusetts Institute of Technology",
%; }
%;
%; @book{Mueller:2006,
%;   author = "Erik T. Mueller",
%;   year = "2006",
%;   title = "Commonsense Reasoning",
%;   address = "San Francisco",
%;   publisher = "Morgan Kaufmann/Elsevier",
%; }
%;

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1974).
% load foundations/Root.e
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/Root.e'))).
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1974).
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/EC.e'))).
:- call_pel_directive(load('foundations/EC.e')).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1977).
% sort object
% From E: 
% 
% sort(object).
sort(object).

% sort location
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1977).
% From E: 
% 
% sort(location).
sort(location).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1980).
% object O1, O2
% From E: 
% 
% t(object,o1).
isa(o1,object).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1980).
% From E: 
% 
% t(object,o2).
isa(o2,object).

% location L1, L2, L3, L4, L5
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1980).
% From E: 
% 
% t(location,l1).
isa(l1,location).
% From E: 
% 
% t(location,l2).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1980).
isa(l2,location).
% From E: 
% 
% t(location,l3).
isa(l3,location).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1980).
% From E: 
% 
% t(location,l4).
isa(l4,location).
% From E: 
% 
% t(location,l5).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1980).
isa(l5,location).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1983).
% predicate Adjacent(location,location)
% From E: 
% 
% predicate(adjacent(location,location)).
mpred_prop(adjacent(location,location),predicate).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1983).
predicates([adjacent/2]).

% predicate Equal(object,object)
% From E: 
% 
% predicate(equal(object,object)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1983).
mpred_prop(equal(object,object),predicate).
predicates([equal/2]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1986).
% fluent At(object,location)
% From E: 
% 
% fluent(at_loc(object,location)).
mpred_prop(at_loc(object,location),fluent).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1986).
fluents([at_loc/2]).

% event Move(object,location,location)
% From E: 
% 
% event(move(object,location,location)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1986).
mpred_prop(move(object,location,location),event).
events([move/3]).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1989).
%; Sigma
% [object,location1,location2,time]
% HoldsAt(At(object,location1),time) &
% Adjacent(location1,location2) ->
% Initiates(Move(object,location1,location2),At(object,location2),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1991).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          at_loc(Object,Location1), 
%          Time), 
%       adjacent(Location1,Location2)), 
%    initiates_at(
%       move(Object,Location1,Location2), 
%       at_loc(Object,Location2), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1991).
if(initiates(move(Object, Location1, Location2), at(at_loc(Object, Location2), Time)),  (at(at_loc(Object, Location1), Time), adjacent(Location1, Location2))).


% [object,location1,location2,time]
% HoldsAt(At(object,location1),time) &
% Adjacent(location1,location2) ->
% Terminates(Move(object,location1,location2),At(object,location1),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1997).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          at_loc(Object,Location1), 
%          Time), 
%       adjacent(Location1,Location2)), 
%    terminates_at(
%       move(Object,Location1,Location2), 
%       at_loc(Object,Location1), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',1997).
if(terminates(move(Object, Location1, Location2), at(at_loc(Object, Location1), Time)),  (at(at_loc(Object, Location1), Time), adjacent(Location1, Location2))).


%; Psi
% [object,location1,location2,time]
% HoldsAt(At(object,location1),time) &
% HoldsAt(At(object,location2),time) ->
% location1=location2.
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2003).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          at_loc(Object,Location1), 
%          Time), 
%       holds(
%          at_loc(Object,Location2), 
%          Time)), 
%    Location1=Location2).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2003).
if(equals(Location1, Location2),  (at(at_loc(Object, Location1), Time), at(at_loc(Object, Location2), Time))).


% [object,time]
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2009).
% {location} % HoldsAt(At(object,location),time).
% From E: 
% 
% exists(Location, 
%    holds(
%       at_loc(Object,Location), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2009).
exists(Location,
 at(at_loc(Object,Location),Time)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2011).
% [object1,object2,location,time]
% HoldsAt(At(object1,location),time) &
% HoldsAt(At(object2,location),time) ->
% Equal(object1,object2).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          at_loc(Object1,Location), 
%          Time), 
%       holds(
%          at_loc(Object2,Location), 
%          Time)), 
%    equal(Object1,Object2)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2011).
if(equal(Object1, Object2),  (at(at_loc(Object1, Location), Time), at(at_loc(Object2, Location), Time))).


% [location1, location2]
% Adjacent(location1,location2) <->
% Adjacent(location2,location1).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2017).
% From E: 
% 
% <->(
%    adjacent(Location1,Location2), 
%    adjacent(Location2,Location1)).
adjacent(Location1, Location2) <->
    adjacent(Location2, Location1).


% [object1,object2]
% Equal(object1,object2) <->
% Equal(object2,object1).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2021).
% From E: 
% 
% <->(
%    equal(Object1,Object2), 
%    equal(Object2,Object1)).
equal(Object1, Object2) <->
    equal(Object2, Object1).


%; Gamma
% [location1,location2]
% Adjacent(location1,location2) <->
% (location1=L1 & location2=L2) |
% (location1=L2 & location2=L1) |
% (location1=L2 & location2=L3) |
% (location1=L3 & location2=L2) |
% (location1=L3 & location2=L4) |
% (location1=L4 & location2=L3) |
% (location1=L4 & location2=L5) |
% (location1=L5 & location2=L4).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2026).
% From E: 
% 
% <->(
%    adjacent(Location1,Location2), 
%    ';'(
%       ','(
%          Location1=l1, 
%          Location2=l2), 
%       ';'(
%          ','(
%             Location1=l2, 
%             Location2=l1), 
%          ';'(
%             ','(
%                Location1=l2, 
%                Location2=l3), 
%             ';'(
%                ','(
%                   Location1=l3, 
%                   Location2=l2), 
%                ';'(
%                   ','(
%                      Location1=l3, 
%                      Location2=l4), 
%                   ';'(
%                      ','(
%                         Location1=l4, 
%                         Location2=l3), 
%                      ';'(
%                         ','(
%                            Location1=l4, 
%                            Location2=l5), 
%                         ','(
%                            Location1=l5, 
%                            Location2=l4))))))))).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2026).
adjacent(Location1, Location2) <->
    (   Location1=l1,
        Location2=l2
    ;   Location1=l2,
        Location2=l1
    ;   Location1=l2,
        Location2=l3
    ;   Location1=l3,
        Location2=l2
    ;   Location1=l3,
        Location2=l4
    ;   Location1=l4,
        Location2=l3
    ;   Location1=l4,
        Location2=l5
    ;   Location1=l5,
        Location2=l4
    ).


% HoldsAt(At(O1,L1),0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2036).
% From E: 
% 
% holds(
%    at_loc(o1,l1), 0).
initially(at_loc(o1,l1)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2038).
% [object]
 % !HoldsAt(At(object,L5),0).
% From E: 
% 
% holds(
%    not(at_loc(Object,l5)), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2038).
initially(not(at_loc(Object,l5))).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2040).
% HoldsAt(At(O2,L5),4).
% From E: 
% 
% holds(
%    at_loc(o2,l5), 4).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2040).
at(at_loc(o2,l5),4).


% [object]
 % !HoldsAt(At(object,L1),4).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2040).
% From E: 
% 
% holds(
%    not(at_loc(Object,l1)), 4).
at(not(at_loc(Object,l1)),4).


% [object,time]
 % !HoldsAt(At(object,L3),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2042).
% From E: 
% 
% holds(
%    not(at_loc(Object,l3)), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2042).
at(not(at_loc(Object,l3)),Time).


%; ADDED:
% [object,location1,location2,time]
% Happens(Move(object,location1,location2),time) ->
% HoldsAt(At(object,location1),time) &
% Adjacent(location1,location2).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2046).
% From E: 
% 
% '->'(
%    happens(
%       move(Object,Location1,Location2), 
%       Time), 
%    ','(
%       holds(
%          at_loc(Object,Location1), 
%          Time), 
%       adjacent(Location1,Location2))).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2046).
if((at(at_loc(Object, Location1), Time), adjacent(Location1, Location2)), happens(move(Object, Location1, Location2), Time)).


% [object1,object2,location1,location2,time]
% Equal(object1,object2) &
% Happens(Move(object1,location1,location2),time) ->
% Happens(Move(object2,location1,location2),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2052).
% From E: 
% 
% '->'(
%    ','(
%       equal(Object1,Object2), 
%       happens(
%          move(Object1,Location1,Location2), 
%          Time)), 
%    happens(
%       move(Object2,Location1,Location2), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2052).
if(happens(move(Object2, Location1, Location2), Time),  (equal(Object1, Object2), happens(move(Object1, Location1, Location2), Time))).


%; entailed: !Equal(O1,O2).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2058).
% range time 0 4
% From E: 
% 
% ':-'(call_pel_directive(range(time,0,4))).
:- call_pel_directive(range(time, 0, 4)).

% range offset 1 1
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2058).
% From E: 
% 
% ':-'(call_pel_directive(range(offset,1,1))).
:- call_pel_directive(range(offset, 1, 1)).
%; End of file.
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%; FILE: examples/Mueller2006/Chapter10/OneScreen.e
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; @phdthesis{Cassimatis:2002,
%;   author = "Nicholas L. Cassimatis",
%;   year = "2002",
%;   title = "Polyscheme: A Cognitive Architecture for Integrating Multiple Representation and Inference Schemes",
%;   address = "Cambridge, MA",
%;   school = "Program in Media Arts and Sciences, School of Architecture and Planning, Massachusetts Institute of Technology",
%; }
%;
%; @book{Mueller:2006,
%;   author = "Erik T. Mueller",
%;   year = "2006",
%;   title = "Commonsense Reasoning",
%;   address = "San Francisco",
%;   publisher = "Morgan Kaufmann/Elsevier",
%; }
%;

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2095).
% load foundations/Root.e
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/Root.e'))).
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2095).
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/EC.e'))).
:- call_pel_directive(load('foundations/EC.e')).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2098).
% sort object
% From E: 
% 
% sort(object).
sort(object).

% sort location
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2098).
% From E: 
% 
% sort(location).
sort(location).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2101).
% object O1, O2
% From E: 
% 
% t(object,o1).
isa(o1,object).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2101).
% From E: 
% 
% t(object,o2).
isa(o2,object).

% location L1, L2, L3
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2101).
% From E: 
% 
% t(location,l1).
isa(l1,location).
% From E: 
% 
% t(location,l2).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2101).
isa(l2,location).
% From E: 
% 
% t(location,l3).
isa(l3,location).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2104).
% predicate Adjacent(location,location)
% From E: 
% 
% predicate(adjacent(location,location)).
mpred_prop(adjacent(location,location),predicate).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2104).
predicates([adjacent/2]).

% predicate Equal(object,object)
% From E: 
% 
% predicate(equal(object,object)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2104).
mpred_prop(equal(object,object),predicate).
predicates([equal/2]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2107).
% fluent At(object,location)
% From E: 
% 
% fluent(at_loc(object,location)).
mpred_prop(at_loc(object,location),fluent).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2107).
fluents([at_loc/2]).

% event Move(object,location,location)
% From E: 
% 
% event(move(object,location,location)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2107).
mpred_prop(move(object,location,location),event).
events([move/3]).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2110).
%; Sigma
% [object,location1,location2,time]
% HoldsAt(At(object,location1),time) &
% Adjacent(location1,location2) ->
% Initiates(Move(object,location1,location2),At(object,location2),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2112).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          at_loc(Object,Location1), 
%          Time), 
%       adjacent(Location1,Location2)), 
%    initiates_at(
%       move(Object,Location1,Location2), 
%       at_loc(Object,Location2), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2112).
if(initiates(move(Object, Location1, Location2), at(at_loc(Object, Location2), Time)),  (at(at_loc(Object, Location1), Time), adjacent(Location1, Location2))).


% [object,location1,location2,time]
% HoldsAt(At(object,location1),time) &
% Adjacent(location1,location2) ->
% Terminates(Move(object,location1,location2),At(object,location1),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2118).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          at_loc(Object,Location1), 
%          Time), 
%       adjacent(Location1,Location2)), 
%    terminates_at(
%       move(Object,Location1,Location2), 
%       at_loc(Object,Location1), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2118).
if(terminates(move(Object, Location1, Location2), at(at_loc(Object, Location1), Time)),  (at(at_loc(Object, Location1), Time), adjacent(Location1, Location2))).


%; Psi
% [object,location1,location2,time]
% HoldsAt(At(object,location1),time) &
% HoldsAt(At(object,location2),time) ->
% location1=location2.
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2124).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          at_loc(Object,Location1), 
%          Time), 
%       holds(
%          at_loc(Object,Location2), 
%          Time)), 
%    Location1=Location2).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2124).
if(equals(Location1, Location2),  (at(at_loc(Object, Location1), Time), at(at_loc(Object, Location2), Time))).


% [object,time]
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2130).
% {location} % HoldsAt(At(object,location),time).
% From E: 
% 
% exists(Location, 
%    holds(
%       at_loc(Object,Location), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2130).
exists(Location,
 at(at_loc(Object,Location),Time)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2132).
% [object1,object2,location,time]
% HoldsAt(At(object1,location),time) &
% HoldsAt(At(object2,location),time) ->
% Equal(object1,object2).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          at_loc(Object1,Location), 
%          Time), 
%       holds(
%          at_loc(Object2,Location), 
%          Time)), 
%    equal(Object1,Object2)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2132).
if(equal(Object1, Object2),  (at(at_loc(Object1, Location), Time), at(at_loc(Object2, Location), Time))).


% [location1, location2]
% Adjacent(location1,location2) <->
% Adjacent(location2,location1).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2138).
% From E: 
% 
% <->(
%    adjacent(Location1,Location2), 
%    adjacent(Location2,Location1)).
adjacent(Location1, Location2) <->
    adjacent(Location2, Location1).


% [object1,object2]
% Equal(object1,object2) <->
% Equal(object2,object1).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2142).
% From E: 
% 
% <->(
%    equal(Object1,Object2), 
%    equal(Object2,Object1)).
equal(Object1, Object2) <->
    equal(Object2, Object1).


%; Gamma
% [location1,location2]
% Adjacent(location1,location2) <->
% (location1=L1 & location2=L2) |
% (location1=L2 & location2=L1) |
% (location1=L2 & location2=L3) |
% (location1=L3 & location2=L2).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2147).
% From E: 
% 
% <->(
%    adjacent(Location1,Location2), 
%    ';'(
%       ','(
%          Location1=l1, 
%          Location2=l2), 
%       ';'(
%          ','(
%             Location1=l2, 
%             Location2=l1), 
%          ';'(
%             ','(
%                Location1=l2, 
%                Location2=l3), 
%             ','(
%                Location1=l3, 
%                Location2=l2))))).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2147).
adjacent(Location1, Location2) <->
    (   Location1=l1,
        Location2=l2
    ;   Location1=l2,
        Location2=l1
    ;   Location1=l2,
        Location2=l3
    ;   Location1=l3,
        Location2=l2
    ).


% HoldsAt(At(O1,L1),0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2153).
% From E: 
% 
% holds(
%    at_loc(o1,l1), 0).
initially(at_loc(o1,l1)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2155).
% [object]
 % !HoldsAt(At(object,L3),0).
% From E: 
% 
% holds(
%    not(at_loc(Object,l3)), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2155).
initially(not(at_loc(Object,l3))).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2157).
% [object]
 % !HoldsAt(At(object,L1),1).
% From E: 
% 
% holds(
%    not(at_loc(Object,l1)), 1).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2157).
at(not(at_loc(Object,l1)),1).


% [object]
 % !HoldsAt(At(object,L3),1).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2157).
% From E: 
% 
% holds(
%    not(at_loc(Object,l3)), 1).
at(not(at_loc(Object,l3)),1).


% HoldsAt(At(O2,L3),2).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2159).
% From E: 
% 
% holds(
%    at_loc(o2,l3), 2).
at(at_loc(o2,l3),2).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2161).
% [object]
 % !HoldsAt(At(object,L1),2).
% From E: 
% 
% holds(
%    not(at_loc(Object,l1)), 2).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2161).
at(not(at_loc(Object,l1)),2).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2163).
%; ADDED:
% [object,location1,location2,time]
% Happens(Move(object,location1,location2),time) ->
% HoldsAt(At(object,location1),time) &
% Adjacent(location1,location2).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2165).
% From E: 
% 
% '->'(
%    happens(
%       move(Object,Location1,Location2), 
%       Time), 
%    ','(
%       holds(
%          at_loc(Object,Location1), 
%          Time), 
%       adjacent(Location1,Location2))).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2165).
if((at(at_loc(Object, Location1), Time), adjacent(Location1, Location2)), happens(move(Object, Location1, Location2), Time)).


% [object1,object2,location1,location2,time]
% Equal(object1,object2) &
% Happens(Move(object1,location1,location2),time) ->
% Happens(Move(object2,location1,location2),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2170).
% From E: 
% 
% '->'(
%    ','(
%       equal(Object1,Object2), 
%       happens(
%          move(Object1,Location1,Location2), 
%          Time)), 
%    happens(
%       move(Object2,Location1,Location2), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2170).
if(happens(move(Object2, Location1, Location2), Time),  (equal(Object1, Object2), happens(move(Object1, Location1, Location2), Time))).

% range time 0 2
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2173).
% From E: 
% 
% ':-'(call_pel_directive(range(time,0,2))).
:- call_pel_directive(range(time, 0, 2)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2175).
% range offset 1 1
% From E: 
% 
% ':-'(call_pel_directive(range(offset,1,1))).
:- call_pel_directive(range(offset, 1, 1)).
%; End of file.
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%; FILE: examples/Mueller2006/Chapter9/RunningAndDriving.e
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; @book{Mueller:2006,
%;   author = "Erik T. Mueller",
%;   year = "2006",
%;   title = "Commonsense Reasoning",
%;   address = "San Francisco",
%;   publisher = "Morgan Kaufmann/Elsevier",
%; }
%;

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2203).
% load foundations/Root.e
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/Root.e'))).
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2203).
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/EC.e'))).
:- call_pel_directive(load('foundations/EC.e')).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2206).
% sort agent
% From E: 
% 
% sort(agent).
sort(agent).

% sort location
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2206).
% From E: 
% 
% sort(location).
sort(location).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2209).
% agent James
% From E: 
% 
% t(agent,james).
isa(james,agent).

% location Bookstore
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2209).
% From E: 
% 
% t(location,bookstore).
isa(bookstore,location).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2212).
% fluent Tired(agent)
% From E: 
% 
% fluent(tired(agent)).
mpred_prop(tired(agent),fluent).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2212).
fluents([tired/1]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2214).
% event Go(agent,location)
% From E: 
% 
% event(go(agent,location)).
events([go/2]).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2214).
mpred_prop(go(agent,location),action).
actions([go/2]).

% event Run(agent,location)
% From E: 
% 
% event(run(agent,location)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2214).
events([run/2]).
mpred_prop(run(agent,location),action).
actions([run/2]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2216).
% event Drive(agent,location)
% From E: 
% 
% event(drive(agent,location)).
events([drive/2]).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2216).
mpred_prop(drive(agent,location),action).
actions([drive/2]).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2218).
% [agent,location,time]
% Happens(Go(agent,location),time) ->
% Happens(Run(agent,location),time) | Happens(Drive(agent,location),time).
% From E: 
% 
% '->'(
%    happens(
%       go(Agent,Location), 
%       Time), 
%    ';'(
%       happens(
%          run(Agent,Location), 
%          Time), 
%       happens(
%          drive(Agent,Location), 
%          Time))).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2218).
 if((happens(run(Agent, Location), Time);happens(drive(Agent, Location), Time)),
      happens(go(Agent, Location), Time)).

% xor Run, Drive
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2221).
% From E: 
% 
% xor([run,drive]).
xor([run,drive]).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2224).
% [agent,location,time]
 % Initiates(Run(agent,location),Tired(agent),time).
% From E: 
% 
% initiates_at(
%    run(Agent,Location), 
%    tired(Agent), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2224).
initiates(run(Agent,Location),tired(Agent)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2226).
% !HoldsAt(Tired(James),0).
% From E: 
% 
% holds(
%    not(tired(james)), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2226).
initially(not(tired(james))).


% Happens(Go(James,Bookstore),0).
% From E: 
% 
% happens(
%    go(james,bookstore), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2226).
observe(at(go(james,bookstore),0)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2228).
% HoldsAt(Tired(James),1).
% From E: 
% 
% holds(
%    tired(james), 1).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2228).
at(tired(james),1).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2230).
% range time 0 1
% From E: 
% 
% ':-'(call_pel_directive(range(time,0,1))).
:- call_pel_directive(range(time, 0, 1)).

% range offset 1 1
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2230).
% From E: 
% 
% ':-'(call_pel_directive(range(offset,1,1))).
:- call_pel_directive(range(offset, 1, 1)).
%; End of file.
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%; FILE: examples/Mueller2006/Chapter9/RouletteWheel.e
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; @book{Mueller:2006,
%;   author = "Erik T. Mueller",
%;   year = "2006",
%;   title = "Commonsense Reasoning",
%;   address = "San Francisco",
%;   publisher = "Morgan Kaufmann/Elsevier",
%; }
%;

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2259).
% option modeldiff on
% From E: 
% 
% ':-'(call_pel_directive(option(modeldiff,on))).
:- call_pel_directive(option(modeldiff, on)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2261).
% load foundations/Root.e
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/Root.e'))).
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2261).
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/EC.e'))).
:- call_pel_directive(load('foundations/EC.e')).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2264).
% sort dealer
% From E: 
% 
% sort(dealer).
sort(dealer).

% sort wheel
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2264).
% From E: 
% 
% sort(wheel).
sort(wheel).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2266).
% sort value: integer
% From E: 
% 
% subsort(value,integer).
subsort(value,integer).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2268).
% wheel Wheel1
% From E: 
% 
% t(wheel,wheel1).
isa(wheel1,wheel).

% dealer Dealer1
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2268).
% From E: 
% 
% t(dealer,dealer1).
isa(dealer1,dealer).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2271).
% fluent WheelNumberDeterminer(wheel,value)
% From E: 
% 
% fluent(wheelNumberDeterminer(wheel,value)).
mpred_prop(wheelNumberDeterminer(wheel,value),fluent).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2271).
fluents([wheelNumberDeterminer/2]).

% fluent WheelNumber(wheel,value)
% From E: 
% 
% fluent(wheelNumber(wheel,value)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2271).
mpred_prop(wheelNumber(wheel,value),fluent).
fluents([wheelNumber/2]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2273).
% noninertial WheelNumberDeterminer
% From E: 
% 
% ':-'(call_pel_directive(noninertial(wheelNumberDeterminer))).
:- call_pel_directive(noninertial(wheelNumberDeterminer)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2275).
% event Spin(dealer,wheel)
% From E: 
% 
% event(spin(dealer,wheel)).
mpred_prop(spin(dealer,wheel),event).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2275).
events([spin/2]).

% event Reset(dealer,wheel)
% From E: 
% 
% event(reset(dealer,wheel)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2275).
mpred_prop(reset(dealer,wheel),event).
events([reset/2]).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2278).
% [wheel,time]
% {value}% HoldsAt(WheelNumberDeterminer(wheel,value),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2280).
% From E: 
% 
% exists(Value, 
%    holds(
%       wheelNumberDeterminer(Wheel,Value), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2280).
exists(Value,
 at(wheelNumberDeterminer(Wheel,Value),Time)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2282).
% [wheel,value1,value2,time]
% HoldsAt(WheelNumberDeterminer(wheel,value1),time) &
% HoldsAt(WheelNumberDeterminer(wheel,value2),time) ->
% value1=value2.
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          wheelNumberDeterminer(Wheel,Value1), 
%          Time), 
%       holds(
%          wheelNumberDeterminer(Wheel,Value2), 
%          Time)), 
%    Value1=Value2).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2282).
if(equals(Value1, Value2),  (at(wheelNumberDeterminer(Wheel, Value1), Time), at(wheelNumberDeterminer(Wheel, Value2), Time))).


% [dealer,wheel,value,time]
% HoldsAt(WheelNumberDeterminer(wheel,value),time) ->
% Initiates(Spin(dealer,wheel),WheelNumber(wheel,value),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2288).
% From E: 
% 
% '->'(
%    holds(
%       wheelNumberDeterminer(Wheel,Value), 
%       Time), 
%    initiates_at(
%       spin(Dealer,Wheel), 
%       wheelNumber(Wheel,Value), 
%       Time)).
if(initiates(spin(Dealer,Wheel),
	     at(wheelNumber(Wheel,Value),Time)),
   at(wheelNumberDeterminer(Wheel,Value),Time)).


% [dealer,wheel,value1,value2,time]
% HoldsAt(WheelNumber(wheel,value1),time) &
% HoldsAt(WheelNumberDeterminer(wheel,value2),time) &
% value1!=value2 ->
% Terminates(Spin(dealer,wheel),WheelNumber(wheel,value1),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2292).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          wheelNumber(Wheel,Value1), 
%          Time), 
%       ','(
%          holds(
%             wheelNumberDeterminer(Wheel,Value2), 
%             Time), 
%          Value1\=Value2)), 
%    terminates_at(
%       spin(Dealer,Wheel), 
%       wheelNumber(Wheel,Value1), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2292).
if(terminates(spin(Dealer, Wheel), at(wheelNumber(Wheel, Value1), Time)),  (at(wheelNumber(Wheel, Value1), Time), at(wheelNumberDeterminer(Wheel, Value2), Time), {dif(Value1, Value2)})).


% [dealer,wheel,value,time]
% Terminates(Reset(dealer,wheel),WheelNumber(wheel,value),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2298).
% From E: 
% 
% terminates_at(
%    reset(Dealer,Wheel), 
%    wheelNumber(Wheel,Value), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2298).
terminates(reset(Dealer,Wheel),
	   wheelNumber(Wheel,Value)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2300).
% [wheel,value1,value2,time]
% HoldsAt(WheelNumber(wheel,value1),time) &
% HoldsAt(WheelNumber(wheel,value2),time) ->
% value1=value2.
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          wheelNumber(Wheel,Value1), 
%          Time), 
%       holds(
%          wheelNumber(Wheel,Value2), 
%          Time)), 
%    Value1=Value2).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2300).
if(equals(Value1, Value2),  (at(wheelNumber(Wheel, Value1), Time), at(wheelNumber(Wheel, Value2), Time))).


% [value]
 % !HoldsAt(WheelNumber(Wheel1,value),0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2304).
% From E: 
% 
% holds(
%    not(wheelNumber(wheel1,Value)), 0).
initially(not(wheelNumber(wheel1,Value))).


% Happens(Spin(Dealer1,Wheel1),0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2306).
% From E: 
% 
% happens(
%    spin(dealer1,wheel1), 0).
observe(at(spin(dealer1,wheel1),0)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2308).
%;Happens(Reset(Dealer1,Wheel1),1).
%; added to prune models


% HoldsAt(WheelNumberDeterminer(Wheel1, 1),1).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2310).
% From E: 
% 
% holds(
%    wheelNumberDeterminer(wheel1,1), 1).
at(wheelNumberDeterminer(wheel1,1),1).

% completion Happens
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2312).
% From E: 
% 
% ':-'(call_pel_directive(completion(happens))).
:- call_pel_directive(completion(happens)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2315).
% range value 1 3
% From E: 
% 
% ':-'(call_pel_directive(range(value,1,3))).
:- call_pel_directive(range(value, 1, 3)).

% range time 0 1
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2315).
% From E: 
% 
% ':-'(call_pel_directive(range(time,0,1))).
:- call_pel_directive(range(time, 0, 1)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2317).
% range offset 1 1
% From E: 
% 
% ':-'(call_pel_directive(range(offset,1,1))).
:- call_pel_directive(range(offset, 1, 1)).
%; End of file.
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%; FILE: examples/Mueller2006/Chapter14/NetBill1.e
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; @inproceedings{SirbuTygar:1995,
%;   author = "Marvin A. Sirbu and J. D. Tygar",
%;   year = "1995",
%;   title = "Net\uppercase{B}ill: An \uppercase{I}nternet commerce system optimized for network delivered services",
%;   editor = "
%;   booktitle = "40th \uppercase{IEEE} \uppercase{C}omputer \uppercase{S}ociety \uppercase{I}nternational \uppercase{C}onference",
%;   pages = "20--25",
%;   publisher = "
%;   address = "
%; }
%;
%; @book{Mueller:2006,
%;   author = "Erik T. Mueller",
%;   year = "2006",
%;   title = "Commonsense Reasoning",
%;   address = "San Francisco",
%;   publisher = "Morgan Kaufmann/Elsevier",
%; }
%;

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2356).
% option modeldiff on
% From E: 
% 
% ':-'(call_pel_directive(option(modeldiff,on))).
:- call_pel_directive(option(modeldiff, on)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2358).
% load foundations/Root.e
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/Root.e'))).
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2358).
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/EC.e'))).
:- call_pel_directive(load('foundations/EC.e')).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2361).
% sort agent
% From E: 
% 
% sort(agent).
sort(agent).

% agent MusicStore, Jen
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2361).
% From E: 
% 
% t(agent,musicStore).
isa(musicStore,agent).
% From E: 
% 
% t(agent,jen).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2361).
isa(jen,agent).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2364).
% sort product
% From E: 
% 
% sort(product).
sort(product).

% product BritneyCD
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2364).
% From E: 
% 
% t(product,britneyCD).
isa(britneyCD,product).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2367).
% sort f
% From E: 
% 
% sort(f).
sort(f).

% f PurchaseRequestedJenMusicStoreBritneyCD1
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2367).
% From E: 
% 
% t(f,purchaseRequestedJenMusicStoreBritneyCD1).
isa(purchaseRequestedJenMusicStoreBritneyCD1,f).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2369).
% f DeliveredMusicStoreJenBritneyCD
% From E: 
% 
% t(f,deliveredMusicStoreJenBritneyCD).
isa(deliveredMusicStoreJenBritneyCD,f).

% f EPOSentJenMusicStore1
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2369).
% From E: 
% 
% t(f,ePOSentJenMusicStore1).
isa(ePOSentJenMusicStore1,f).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2372).
% sort amount: integer
% From E: 
% 
% subsort(amount,integer).
subsort(amount,integer).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2374).
% fluent C(agent,agent,f)
% From E: 
% 
% fluent(c(agent,agent,f)).
mpred_prop(c(agent,agent,f),fluent).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2374).
fluents([c/3]).

% fluent CC(agent,agent,f,f)
% From E: 
% 
% fluent(cc(agent, agent, f, 
%           f)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2374).
mpred_prop(cc(agent,agent,f,f),fluent).
fluents([cc/4]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2377).
% event CreateC(agent,agent,f)
% From E: 
% 
% event(createC(agent,agent,f)).
events([createC/3]).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2377).
mpred_prop(createC(agent,agent,f),action).
actions([createC/3]).

% event CreateCC(agent,agent,f,f)
% From E: 
% 
% event(createCC(agent, agent, f, 
%          f)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2377).
events([createCC/4]).
mpred_prop(createCC(agent,agent,f,f),action).
actions([createCC/4]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2379).
% event DischargeC(agent,agent,f)
% From E: 
% 
% event(dischargeC(agent,agent,f)).
events([dischargeC/3]).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2379).
mpred_prop(dischargeC(agent,agent,f),action).
actions([dischargeC/3]).

% event DischargeCC(agent,agent,f,f)
% From E: 
% 
% event(dischargeCC(agent, agent, f, 
%          f)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2379).
events([dischargeCC/4]).
mpred_prop(dischargeCC(agent,agent,f,f),action).
actions([dischargeCC/4]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2382).
% fluent QuoteSent(agent,agent,product,amount)
% From E: 
% 
% fluent(quoteSent(agent, agent, product, 
%           amount)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2382).
mpred_prop(quoteSent(agent,agent,product,amount),fluent).
fluents([quoteSent/4]).

% fluent PurchaseRequested(agent,agent,product,amount)
% From E: 
% 
% fluent(purchaseRequested(agent, agent, product, 
%           amount)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2382).
mpred_prop(purchaseRequested(agent,agent,product,amount),fluent).
fluents([purchaseRequested/4]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2384).
% fluent Delivered(agent,agent,product)
% From E: 
% 
% fluent(delivered(agent,agent,product)).
mpred_prop(delivered(agent,agent,product),fluent).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2384).
fluents([delivered/3]).

% fluent EPOSent(agent,agent,amount)
% From E: 
% 
% fluent(ePOSent(agent,agent,amount)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2384).
mpred_prop(ePOSent(agent,agent,amount),fluent).
fluents([ePOSent/3]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2387).
% event SendQuote(agent,agent,product,amount)
% From E: 
% 
% event(sendQuote(agent, agent, product, 
%          amount)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2387).
events([sendQuote/4]).
mpred_prop(sendQuote(agent,agent,product,amount),action).
actions([sendQuote/4]).

% event RequestPurchase(agent,agent,product,amount)
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2387).
% From E: 
% 
% event(requestPurchase(agent, agent, product, 
%          amount)).
events([requestPurchase/4]).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2387).
mpred_prop(requestPurchase(agent,agent,product,amount),action).
actions([requestPurchase/4]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2389).
% event Deliver(agent,agent,product)
% From E: 
% 
% event(deliver(agent,agent,product)).
events([deliver/3]).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2389).
mpred_prop(deliver(agent,agent,product),action).
actions([deliver/3]).

% event SendEPO(agent,agent,amount)
% From E: 
% 
% event(sendEPO(agent,agent,amount)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2389).
events([sendEPO/3]).
mpred_prop(sendEPO(agent,agent,amount),action).
actions([sendEPO/3]).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2392).
%; Sigma
% [agent1,agent2,f,time]
% Initiates(CreateC(agent1,agent2,f),C(agent1,agent2,f),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2394).
% From E: 
% 
% initiates_at(
%    createC(Agent1,Agent2,F), 
%    c(Agent1,Agent2,F), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2394).
initiates(createC(Agent1,Agent2,F),
	  c(Agent1,Agent2,F)).


% [agent1,agent2,f1,f2,time]
% Initiates(CreateCC(agent1,agent2,f1,f2),CC(agent1,agent2,f1,f2),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2398).
% From E: 
% 
% initiates_at(
%    createCC(Agent1, Agent2, F1, 
%       F2), 
%    cc(Agent1, Agent2, F1, 
%       F2), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2398).
initiates(createCC(Agent1,Agent2,F1,F2),
	  cc(Agent1,Agent2,F1,F2)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2400).
% [agent1,agent2,f,time]
% Terminates(DischargeC(agent1,agent2,f),C(agent1,agent2,f),time).
% From E: 
% 
% terminates_at(
%    dischargeC(Agent1,Agent2,F), 
%    c(Agent1,Agent2,F), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2400).
terminates(dischargeC(Agent1,Agent2,F),
	   c(Agent1,Agent2,F)).


% [agent1,agent2,f1,f2,time]
% Terminates(DischargeCC(agent1,agent2,f1,f2),CC(agent1,agent2,f1,f2),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2404).
% From E: 
% 
% terminates_at(
%    dischargeCC(Agent1, Agent2, F1, 
%       F2), 
%    cc(Agent1, Agent2, F1, 
%       F2), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2404).
terminates(dischargeCC(Agent1,Agent2,F1,F2),
	   cc(Agent1,Agent2,F1,F2)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2406).
% [agent1,agent2,product,amount,time]
% Initiates(SendQuote(agent1,agent2,product,amount),
%           QuoteSent(agent1,agent2,product,amount),
%           time).
% From E: 
% 
% initiates_at(
%    sendQuote(Agent1, Agent2, Product, 
%       Amount), 
%    quoteSent(Agent1, Agent2, Product, 
%       Amount), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2406).
initiates(sendQuote(Agent1,
		    Agent2,
		    Product,
		    Amount),
	  quoteSent(Agent1,
		    Agent2,
		    Product,
		    Amount)).


% [agent1,agent2,product,amount,time]
% Initiates(RequestPurchase(agent1,agent2,product,amount),
%           PurchaseRequested(agent1,agent2,product,amount),
%           time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2412).
% From E: 
% 
% initiates_at(
%    requestPurchase(Agent1, Agent2, Product, 
%       Amount), 
%    purchaseRequested(Agent1, Agent2, Product, 
%       Amount), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2412).
initiates(requestPurchase(Agent1,
			  Agent2,
			  Product,
			  Amount),
	  purchaseRequested(Agent1,
			    Agent2,
			    Product,
			    Amount)).


% [agent1,agent2,product,time]
% Initiates(Deliver(agent1,agent2,product),
%           Delivered(agent1,agent2,product),
%           time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2417).
% From E: 
% 
% initiates_at(
%    deliver(Agent1,Agent2,Product), 
%    delivered(Agent1,Agent2,Product), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2417).
initiates(deliver(Agent1,Agent2,Product),
	  delivered(Agent1,Agent2,Product)).


% [agent1,agent2,amount,time]
% Initiates(SendEPO(agent1,agent2,amount),
%           EPOSent(agent1,agent2,amount),
%           time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2422).
% From E: 
% 
% initiates_at(
%    sendEPO(Agent1,Agent2,Amount), 
%    ePOSent(Agent1,Agent2,Amount), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2422).
initiates(sendEPO(Agent1,Agent2,Amount),
	  ePOSent(Agent1,Agent2,Amount)).


% [agent1,agent2,product,amount,f1,f2,time]
% agent1=% MusicStore &
% agent2=Jen &
% product=BritneyCD &
% amount=1 &
% f1=PurchaseRequestedJenMusicStoreBritneyCD1 &
% f2=DeliveredMusicStoreJenBritneyCD ->
% Initiates(SendQuote(agent1,agent2,product,amount),
%           CC(agent1,agent2,f1,f2),
%           time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2427).
% From E: 
% 
% '->'(
%    ','(
%       Agent1=musicStore, 
%       ','(
%          Agent2=jen, 
%          ','(
%             Product=britneyCD, 
%             ','(
%                Amount=1, 
%                ','(
%                   F1=purchaseRequestedJenMusicStoreBritneyCD1, 
%                   F2=deliveredMusicStoreJenBritneyCD))))), 
%    initiates_at(
%       sendQuote(Agent1, Agent2, Product, 
%          Amount), 
%       cc(Agent1, Agent2, F1, 
%          F2), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2427).
if(initiates(sendQuote(Agent1, Agent2, Product, Amount), at(cc(Agent1, Agent2, F1, F2), Time)),  (equals(Agent1, musicStore), equals(Agent2, jen), equals(Product, britneyCD), equals(Amount, 1), equals(F1, purchaseRequestedJenMusicStoreBritneyCD1), equals(F2, deliveredMusicStoreJenBritneyCD))).


% [agent1,agent2,product,amount,f1,f2,time]
% agent1=% Jen &
% agent2=MusicStore &
% product=BritneyCD &
% amount=1 &
% f1=DeliveredMusicStoreJenBritneyCD &
% f2=EPOSentJenMusicStore1 &
% !HoldsAt(Delivered(agent2,agent1,product),time) ->
% Initiates(RequestPurchase(agent1,agent2,product,amount),
%           CC(agent1,agent2,f1,f2),
%           time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2438).
% From E: 
% 
% '->'(
%    ','(
%       Agent1=jen, 
%       ','(
%          Agent2=musicStore, 
%          ','(
%             Product=britneyCD, 
%             ','(
%                Amount=1, 
%                ','(
%                   F1=deliveredMusicStoreJenBritneyCD, 
%                   ','(
%                      F2=ePOSentJenMusicStore1, 
%                      holds(
%                         not(delivered(Agent2,Agent1,Product)), 
%                         Time))))))), 
%    initiates_at(
%       requestPurchase(Agent1, Agent2, Product, 
%          Amount), 
%       cc(Agent1, Agent2, F1, 
%          F2), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2438).
if(initiates(requestPurchase(Agent1, Agent2, Product, Amount), at(cc(Agent1, Agent2, F1, F2), Time)),  (equals(Agent1, jen), equals(Agent2, musicStore), equals(Product, britneyCD), equals(Amount, 1), equals(F1, deliveredMusicStoreJenBritneyCD), equals(F2, ePOSentJenMusicStore1), at(not(delivered(Agent2, Agent1, Product)), Time))).


%; Delta

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2451).
% Delta: 
% From E: 
% 
% directive(delta).
directive(delta).
 


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2451).
% [time]
% HoldsAt(CC(MusicStore,Jen,PurchaseRequestedJenMusicStoreBritneyCD1,DeliveredMusicStoreJenBritneyCD),time) &
% HoldsAt(PurchaseRequested(Jen,MusicStore,BritneyCD,1),time) ->
% Happens(CreateC(MusicStore,Jen,DeliveredMusicStoreJenBritneyCD),time).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          cc(musicStore, jen, purchaseRequestedJenMusicStoreBritneyCD1, 
%             deliveredMusicStoreJenBritneyCD), 
%          Time), 
%       holds(
%          purchaseRequested(jen, musicStore, britneyCD, 1), 
%          Time)), 
%    happens(
%       createC(musicStore,jen,deliveredMusicStoreJenBritneyCD), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2451).
if(happens(createC(musicStore, jen, deliveredMusicStoreJenBritneyCD), Time),  (at(cc(musicStore, jen, purchaseRequestedJenMusicStoreBritneyCD1, deliveredMusicStoreJenBritneyCD), Time), at(purchaseRequested(jen, musicStore, britneyCD, 1), Time))).

% Delta: 
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2455).
% From E: 
% 
% directive(delta).
directive(delta).
 


% [time]
% HoldsAt(CC(MusicStore,Jen,PurchaseRequestedJenMusicStoreBritneyCD1,DeliveredMusicStoreJenBritneyCD),time) &
% HoldsAt(PurchaseRequested(Jen, MusicStore, BritneyCD, 1),time) ->
% Happens(DischargeCC(MusicStore,Jen,PurchaseRequestedJenMusicStoreBritneyCD1,DeliveredMusicStoreJenBritneyCD),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2457).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          cc(musicStore, jen, purchaseRequestedJenMusicStoreBritneyCD1, 
%             deliveredMusicStoreJenBritneyCD), 
%          Time), 
%       holds(
%          purchaseRequested(jen, musicStore, britneyCD, 1), 
%          Time)), 
%    happens(
%       dischargeCC(musicStore, jen, purchaseRequestedJenMusicStoreBritneyCD1, 
%          deliveredMusicStoreJenBritneyCD), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2457).
if(happens(dischargeCC(musicStore, jen, purchaseRequestedJenMusicStoreBritneyCD1, deliveredMusicStoreJenBritneyCD), Time),  (at(cc(musicStore, jen, purchaseRequestedJenMusicStoreBritneyCD1, deliveredMusicStoreJenBritneyCD), Time), at(purchaseRequested(jen, musicStore, britneyCD, 1), Time))).

% Delta: 
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2460).
% From E: 
% 
% directive(delta).
directive(delta).
 


% [time]
% HoldsAt(CC(Jen, MusicStore, DeliveredMusicStoreJenBritneyCD, EPOSentJenMusicStore1),time) &
% HoldsAt(Delivered(MusicStore,Jen,BritneyCD),time) ->
% Happens(CreateC(Jen,MusicStore,EPOSentJenMusicStore1),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2462).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          cc(jen, musicStore, deliveredMusicStoreJenBritneyCD, 
%             ePOSentJenMusicStore1), 
%          Time), 
%       holds(
%          delivered(musicStore,jen,britneyCD), 
%          Time)), 
%    happens(
%       createC(jen,musicStore,ePOSentJenMusicStore1), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2462).
if(happens(createC(jen, musicStore, ePOSentJenMusicStore1), Time),  (at(cc(jen, musicStore, deliveredMusicStoreJenBritneyCD, ePOSentJenMusicStore1), Time), at(delivered(musicStore, jen, britneyCD), Time))).

% Delta: 
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2465).
% From E: 
% 
% directive(delta).
directive(delta).
 


% [time]
% HoldsAt(CC(Jen, MusicStore, DeliveredMusicStoreJenBritneyCD, EPOSentJenMusicStore1),time) &
% HoldsAt(Delivered(MusicStore,Jen,BritneyCD),time) ->
% Happens(DischargeCC(Jen,MusicStore,DeliveredMusicStoreJenBritneyCD, EPOSentJenMusicStore1),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2467).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          cc(jen, musicStore, deliveredMusicStoreJenBritneyCD, 
%             ePOSentJenMusicStore1), 
%          Time), 
%       holds(
%          delivered(musicStore,jen,britneyCD), 
%          Time)), 
%    happens(
%       dischargeCC(jen, musicStore, deliveredMusicStoreJenBritneyCD, 
%          ePOSentJenMusicStore1), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2467).
if(happens(dischargeCC(jen, musicStore, deliveredMusicStoreJenBritneyCD, ePOSentJenMusicStore1), Time),  (at(cc(jen, musicStore, deliveredMusicStoreJenBritneyCD, ePOSentJenMusicStore1), Time), at(delivered(musicStore, jen, britneyCD), Time))).

% Delta: 
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2470).
% From E: 
% 
% directive(delta).
directive(delta).
 


% [time]
% HoldsAt(C(MusicStore,Jen,DeliveredMusicStoreJenBritneyCD),time) &
% HoldsAt(Delivered(MusicStore,Jen,BritneyCD),time) ->
% Happens(DischargeC(MusicStore,Jen,DeliveredMusicStoreJenBritneyCD),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2472).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          c(musicStore,jen,deliveredMusicStoreJenBritneyCD), 
%          Time), 
%       holds(
%          delivered(musicStore,jen,britneyCD), 
%          Time)), 
%    happens(
%       dischargeC(musicStore,jen,deliveredMusicStoreJenBritneyCD), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2472).
if(happens(dischargeC(musicStore, jen, deliveredMusicStoreJenBritneyCD), Time),  (at(c(musicStore, jen, deliveredMusicStoreJenBritneyCD), Time), at(delivered(musicStore, jen, britneyCD), Time))).

% Delta: 
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2475).
% From E: 
% 
% directive(delta).
directive(delta).
 


% [time]
% HoldsAt(C(Jen,MusicStore,EPOSentJenMusicStore1),time) &
% HoldsAt(EPOSent(Jen,MusicStore,1),time) ->
% Happens(DischargeC(Jen,MusicStore,EPOSentJenMusicStore1),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2477).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          c(jen,musicStore,ePOSentJenMusicStore1), 
%          Time), 
%       holds(
%          ePOSent(jen,musicStore,1), 
%          Time)), 
%    happens(
%       dischargeC(jen,musicStore,ePOSentJenMusicStore1), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2477).
if(happens(dischargeC(jen, musicStore, ePOSentJenMusicStore1), Time),  (at(c(jen, musicStore, ePOSentJenMusicStore1), Time), at(ePOSent(jen, musicStore, 1), Time))).

% Delta: 
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2480).
% From E: 
% 
% directive(delta).
directive(delta).
 


% Happens(SendQuote(MusicStore,Jen,BritneyCD,1),0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2480).
% From E: 
% 
% happens(
%    sendQuote(musicStore, jen, britneyCD, 1), 0).
observe(at(sendQuote(musicStore,jen,britneyCD,1),0)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2482).
% Delta: 
% From E: 
% 
% directive(delta).
directive(delta).
 


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2482).
% Happens(RequestPurchase(Jen,MusicStore,BritneyCD,1),1).
% From E: 
% 
% happens(
%    requestPurchase(jen, musicStore, britneyCD, 1), 1).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2482).
observe(at(requestPurchase(jen,musicStore,britneyCD,1),1)).

% Delta: 
% From E: 
% 
% directive(delta).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2482).
directive(delta).
 


% Happens(Deliver(MusicStore,Jen,BritneyCD),3).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2482).
% From E: 
% 
% happens(
%    deliver(musicStore,jen,britneyCD), 3).
observe(at(deliver(musicStore,jen,britneyCD),3)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2484).
% Delta: 
% From E: 
% 
% directive(delta).
directive(delta).
 


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2484).
% Happens(SendEPO(Jen,MusicStore,1),5).
% From E: 
% 
% happens(
%    sendEPO(jen,musicStore,1), 5).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2484).
observe(at(sendEPO(jen,musicStore,1),5)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2486).
%; Gamma
% [agent1,agent2,product,amount]
% !HoldsAt(QuoteSent(agent1,agent2,product,amount),0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2488).
% From E: 
% 
% holds(
%    not(quoteSent(Agent1, Agent2, Product, 
%           Amount)), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2488).
initially(not(quoteSent(Agent1,
			Agent2,
			Product,
			Amount))).


% [agent1,agent2,product,amount]
% !HoldsAt(PurchaseRequested(agent1,agent2,product,amount),0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2492).
% From E: 
% 
% holds(
%    not(purchaseRequested(Agent1, Agent2, Product, 
%           Amount)), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2492).
initially(not(purchaseRequested(Agent1,
				Agent2,
				Product,
				Amount))).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2494).
% [agent1,agent2,product]
% !HoldsAt(Delivered(agent1,agent2,product),0).
% From E: 
% 
% holds(
%    not(delivered(Agent1,Agent2,Product)), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2494).
initially(not(delivered(Agent1,Agent2,Product))).


% [agent1,agent2,f]
% !HoldsAt(C(agent1,agent2,f),0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2498).
% From E: 
% 
% holds(
%    not(c(Agent1,Agent2,F)), 0).
initially(not(c(Agent1,Agent2,F))).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2500).
% [agent1,agent2,f1,f2]
% !HoldsAt(CC(agent1,agent2,f1,f2),0).
% From E: 
% 
% holds(
%    not(cc(Agent1, Agent2, F1, 
%           F2)), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2500).
initially(not(cc(Agent1,Agent2,F1,F2))).


% [agent1,agent2,amount]
% !HoldsAt(EPOSent(agent1,agent2,amount),0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2504).
% From E: 
% 
% holds(
%    not(ePOSent(Agent1,Agent2,Amount)), 0).
initially(not(ePOSent(Agent1,Agent2,Amount))).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2506).
% completion Delta Happens
% From E: 
% 
% ':-'(call_pel_directive(completion(delta))).
:- call_pel_directive(completion(delta)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2506).
% From E: 
% 
% ':-'(call_pel_directive(completion(happens))).
:- call_pel_directive(completion(happens)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2508).
% range time 0 7
% From E: 
% 
% ':-'(call_pel_directive(range(time,0,7))).
:- call_pel_directive(range(time, 0, 7)).

% range offset 1 1
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2508).
% From E: 
% 
% ':-'(call_pel_directive(range(offset,1,1))).
:- call_pel_directive(range(offset, 1, 1)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2510).
% range amount 1 1
% From E: 
% 
% ':-'(call_pel_directive(range(amount,1,1))).
:- call_pel_directive(range(amount, 1, 1)).
%; End of file.
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%; FILE: examples/Mueller2006/Chapter14/NetBill3.e
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; @inproceedings{SirbuTygar:1995,
%;   author = "Marvin A. Sirbu and J. D. Tygar",
%;   year = "1995",
%;   title = "Net\uppercase{B}ill: An \uppercase{I}nternet commerce system optimized for network delivered services",
%;   editor = "
%;   booktitle = "40th \uppercase{IEEE} \uppercase{C}omputer \uppercase{S}ociety \uppercase{I}nternational \uppercase{C}onference",
%;   pages = "20--25",
%;   publisher = "
%;   address = "
%; }
%;
%; @book{Mueller:2006,
%;   author = "Erik T. Mueller",
%;   year = "2006",
%;   title = "Commonsense Reasoning",
%;   address = "San Francisco",
%;   publisher = "Morgan Kaufmann/Elsevier",
%; }
%;

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2549).
% option modeldiff on
% From E: 
% 
% ':-'(call_pel_directive(option(modeldiff,on))).
:- call_pel_directive(option(modeldiff, on)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2551).
% load foundations/Root.e
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/Root.e'))).
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2551).
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/EC.e'))).
:- call_pel_directive(load('foundations/EC.e')).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2554).
% sort agent
% From E: 
% 
% sort(agent).
sort(agent).

% agent MusicStore, Jen
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2554).
% From E: 
% 
% t(agent,musicStore).
isa(musicStore,agent).
% From E: 
% 
% t(agent,jen).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2554).
isa(jen,agent).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2557).
% sort product
% From E: 
% 
% sort(product).
sort(product).

% product BritneyCD
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2557).
% From E: 
% 
% t(product,britneyCD).
isa(britneyCD,product).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2560).
% sort f
% From E: 
% 
% sort(f).
sort(f).

% f PurchaseRequestedJenMusicStoreBritneyCD1
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2560).
% From E: 
% 
% t(f,purchaseRequestedJenMusicStoreBritneyCD1).
isa(purchaseRequestedJenMusicStoreBritneyCD1,f).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2562).
% f DeliveredMusicStoreJenBritneyCD
% From E: 
% 
% t(f,deliveredMusicStoreJenBritneyCD).
isa(deliveredMusicStoreJenBritneyCD,f).

% f EPOSentJenMusicStore1
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2562).
% From E: 
% 
% t(f,ePOSentJenMusicStore1).
isa(ePOSentJenMusicStore1,f).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2565).
% sort amount: integer
% From E: 
% 
% subsort(amount,integer).
subsort(amount,integer).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2567).
% fluent C(agent,agent,f)
% From E: 
% 
% fluent(c(agent,agent,f)).
mpred_prop(c(agent,agent,f),fluent).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2567).
fluents([c/3]).

% fluent CC(agent,agent,f,f)
% From E: 
% 
% fluent(cc(agent, agent, f, 
%           f)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2567).
mpred_prop(cc(agent,agent,f,f),fluent).
fluents([cc/4]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2570).
% event CreateC(agent,agent,f)
% From E: 
% 
% event(createC(agent,agent,f)).
events([createC/3]).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2570).
mpred_prop(createC(agent,agent,f),action).
actions([createC/3]).

% event CreateCC(agent,agent,f,f)
% From E: 
% 
% event(createCC(agent, agent, f, 
%          f)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2570).
events([createCC/4]).
mpred_prop(createCC(agent,agent,f,f),action).
actions([createCC/4]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2572).
% event DischargeC(agent,agent,f)
% From E: 
% 
% event(dischargeC(agent,agent,f)).
events([dischargeC/3]).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2572).
mpred_prop(dischargeC(agent,agent,f),action).
actions([dischargeC/3]).

% event DischargeCC(agent,agent,f,f)
% From E: 
% 
% event(dischargeCC(agent, agent, f, 
%          f)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2572).
events([dischargeCC/4]).
mpred_prop(dischargeCC(agent,agent,f,f),action).
actions([dischargeCC/4]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2575).
% fluent QuoteSent(agent,agent,product,amount)
% From E: 
% 
% fluent(quoteSent(agent, agent, product, 
%           amount)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2575).
mpred_prop(quoteSent(agent,agent,product,amount),fluent).
fluents([quoteSent/4]).

% fluent PurchaseRequested(agent,agent,product,amount)
% From E: 
% 
% fluent(purchaseRequested(agent, agent, product, 
%           amount)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2575).
mpred_prop(purchaseRequested(agent,agent,product,amount),fluent).
fluents([purchaseRequested/4]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2577).
% fluent Delivered(agent,agent,product)
% From E: 
% 
% fluent(delivered(agent,agent,product)).
mpred_prop(delivered(agent,agent,product),fluent).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2577).
fluents([delivered/3]).

% fluent EPOSent(agent,agent,amount)
% From E: 
% 
% fluent(ePOSent(agent,agent,amount)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2577).
mpred_prop(ePOSent(agent,agent,amount),fluent).
fluents([ePOSent/3]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2580).
% event SendQuote(agent,agent,product,amount)
% From E: 
% 
% event(sendQuote(agent, agent, product, 
%          amount)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2580).
events([sendQuote/4]).
mpred_prop(sendQuote(agent,agent,product,amount),action).
actions([sendQuote/4]).

% event RequestPurchase(agent,agent,product,amount)
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2580).
% From E: 
% 
% event(requestPurchase(agent, agent, product, 
%          amount)).
events([requestPurchase/4]).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2580).
mpred_prop(requestPurchase(agent,agent,product,amount),action).
actions([requestPurchase/4]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2582).
% event Deliver(agent,agent,product)
% From E: 
% 
% event(deliver(agent,agent,product)).
events([deliver/3]).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2582).
mpred_prop(deliver(agent,agent,product),action).
actions([deliver/3]).

% event SendEPO(agent,agent,amount)
% From E: 
% 
% event(sendEPO(agent,agent,amount)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2582).
events([sendEPO/3]).
mpred_prop(sendEPO(agent,agent,amount),action).
actions([sendEPO/3]).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2585).
%; Sigma
% [agent1,agent2,f,time]
% Initiates(CreateC(agent1,agent2,f),C(agent1,agent2,f),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2587).
% From E: 
% 
% initiates_at(
%    createC(Agent1,Agent2,F), 
%    c(Agent1,Agent2,F), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2587).
initiates(createC(Agent1,Agent2,F),
	  c(Agent1,Agent2,F)).


% [agent1,agent2,f1,f2,time]
% Initiates(CreateCC(agent1,agent2,f1,f2),CC(agent1,agent2,f1,f2),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2591).
% From E: 
% 
% initiates_at(
%    createCC(Agent1, Agent2, F1, 
%       F2), 
%    cc(Agent1, Agent2, F1, 
%       F2), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2591).
initiates(createCC(Agent1,Agent2,F1,F2),
	  cc(Agent1,Agent2,F1,F2)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2593).
% [agent1,agent2,f,time]
% Terminates(DischargeC(agent1,agent2,f),C(agent1,agent2,f),time).
% From E: 
% 
% terminates_at(
%    dischargeC(Agent1,Agent2,F), 
%    c(Agent1,Agent2,F), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2593).
terminates(dischargeC(Agent1,Agent2,F),
	   c(Agent1,Agent2,F)).


% [agent1,agent2,f1,f2,time]
% Terminates(DischargeCC(agent1,agent2,f1,f2),CC(agent1,agent2,f1,f2),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2597).
% From E: 
% 
% terminates_at(
%    dischargeCC(Agent1, Agent2, F1, 
%       F2), 
%    cc(Agent1, Agent2, F1, 
%       F2), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2597).
terminates(dischargeCC(Agent1,Agent2,F1,F2),
	   cc(Agent1,Agent2,F1,F2)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2599).
% [agent1,agent2,product,amount,time]
% Initiates(SendQuote(agent1,agent2,product,amount),
%           QuoteSent(agent1,agent2,product,amount),
%           time).
% From E: 
% 
% initiates_at(
%    sendQuote(Agent1, Agent2, Product, 
%       Amount), 
%    quoteSent(Agent1, Agent2, Product, 
%       Amount), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2599).
initiates(sendQuote(Agent1,
		    Agent2,
		    Product,
		    Amount),
	  quoteSent(Agent1,
		    Agent2,
		    Product,
		    Amount)).


% [agent1,agent2,product,amount,time]
% Initiates(RequestPurchase(agent1,agent2,product,amount),
%           PurchaseRequested(agent1,agent2,product,amount),
%           time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2605).
% From E: 
% 
% initiates_at(
%    requestPurchase(Agent1, Agent2, Product, 
%       Amount), 
%    purchaseRequested(Agent1, Agent2, Product, 
%       Amount), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2605).
initiates(requestPurchase(Agent1,
			  Agent2,
			  Product,
			  Amount),
	  purchaseRequested(Agent1,
			    Agent2,
			    Product,
			    Amount)).


% [agent1,agent2,product,time]
% Initiates(Deliver(agent1,agent2,product),
%           Delivered(agent1,agent2,product),
%           time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2610).
% From E: 
% 
% initiates_at(
%    deliver(Agent1,Agent2,Product), 
%    delivered(Agent1,Agent2,Product), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2610).
initiates(deliver(Agent1,Agent2,Product),
	  delivered(Agent1,Agent2,Product)).


% [agent1,agent2,amount,time]
% Initiates(SendEPO(agent1,agent2,amount),
%           EPOSent(agent1,agent2,amount),
%           time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2615).
% From E: 
% 
% initiates_at(
%    sendEPO(Agent1,Agent2,Amount), 
%    ePOSent(Agent1,Agent2,Amount), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2615).
initiates(sendEPO(Agent1,Agent2,Amount),
	  ePOSent(Agent1,Agent2,Amount)).


% [agent1,agent2,product,amount,f1,f2,time]
% agent1=% MusicStore &
% agent2=Jen &
% product=BritneyCD &
% amount=1 &
% f1=PurchaseRequestedJenMusicStoreBritneyCD1 &
% f2=DeliveredMusicStoreJenBritneyCD ->
% Initiates(SendQuote(agent1,agent2,product,amount),
%           CC(agent1,agent2,f1,f2),
%           time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2620).
% From E: 
% 
% '->'(
%    ','(
%       Agent1=musicStore, 
%       ','(
%          Agent2=jen, 
%          ','(
%             Product=britneyCD, 
%             ','(
%                Amount=1, 
%                ','(
%                   F1=purchaseRequestedJenMusicStoreBritneyCD1, 
%                   F2=deliveredMusicStoreJenBritneyCD))))), 
%    initiates_at(
%       sendQuote(Agent1, Agent2, Product, 
%          Amount), 
%       cc(Agent1, Agent2, F1, 
%          F2), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2620).
if(initiates(sendQuote(Agent1, Agent2, Product, Amount), at(cc(Agent1, Agent2, F1, F2), Time)),  (equals(Agent1, musicStore), equals(Agent2, jen), equals(Product, britneyCD), equals(Amount, 1), equals(F1, purchaseRequestedJenMusicStoreBritneyCD1), equals(F2, deliveredMusicStoreJenBritneyCD))).


% [agent1,agent2,product,amount,f1,f2,time]
% agent1=% Jen &
% agent2=MusicStore &
% product=BritneyCD &
% amount=1 &
% f1=DeliveredMusicStoreJenBritneyCD &
% f2=EPOSentJenMusicStore1 &
% !HoldsAt(Delivered(agent2,agent1,product),time) ->
% Initiates(RequestPurchase(agent1,agent2,product,amount),
%           CC(agent1,agent2,f1,f2),
%           time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2631).
% From E: 
% 
% '->'(
%    ','(
%       Agent1=jen, 
%       ','(
%          Agent2=musicStore, 
%          ','(
%             Product=britneyCD, 
%             ','(
%                Amount=1, 
%                ','(
%                   F1=deliveredMusicStoreJenBritneyCD, 
%                   ','(
%                      F2=ePOSentJenMusicStore1, 
%                      holds(
%                         not(delivered(Agent2,Agent1,Product)), 
%                         Time))))))), 
%    initiates_at(
%       requestPurchase(Agent1, Agent2, Product, 
%          Amount), 
%       cc(Agent1, Agent2, F1, 
%          F2), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2631).
if(initiates(requestPurchase(Agent1, Agent2, Product, Amount), at(cc(Agent1, Agent2, F1, F2), Time)),  (equals(Agent1, jen), equals(Agent2, musicStore), equals(Product, britneyCD), equals(Amount, 1), equals(F1, deliveredMusicStoreJenBritneyCD), equals(F2, ePOSentJenMusicStore1), at(not(delivered(Agent2, Agent1, Product)), Time))).


%; Delta

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2644).
% Delta: 
% From E: 
% 
% directive(delta).
directive(delta).
 


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2644).
% [time]
% HoldsAt(CC(MusicStore,Jen,PurchaseRequestedJenMusicStoreBritneyCD1,DeliveredMusicStoreJenBritneyCD),time) &
% HoldsAt(PurchaseRequested(Jen,MusicStore,BritneyCD,1),time) ->
% Happens(CreateC(MusicStore,Jen,DeliveredMusicStoreJenBritneyCD),time).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          cc(musicStore, jen, purchaseRequestedJenMusicStoreBritneyCD1, 
%             deliveredMusicStoreJenBritneyCD), 
%          Time), 
%       holds(
%          purchaseRequested(jen, musicStore, britneyCD, 1), 
%          Time)), 
%    happens(
%       createC(musicStore,jen,deliveredMusicStoreJenBritneyCD), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2644).
if(happens(createC(musicStore, jen, deliveredMusicStoreJenBritneyCD), Time),  (at(cc(musicStore, jen, purchaseRequestedJenMusicStoreBritneyCD1, deliveredMusicStoreJenBritneyCD), Time), at(purchaseRequested(jen, musicStore, britneyCD, 1), Time))).

% Delta: 
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2648).
% From E: 
% 
% directive(delta).
directive(delta).
 


% [time]
% HoldsAt(CC(MusicStore,Jen,PurchaseRequestedJenMusicStoreBritneyCD1,DeliveredMusicStoreJenBritneyCD),time) &
% HoldsAt(PurchaseRequested(Jen, MusicStore, BritneyCD, 1),time) ->
% Happens(DischargeCC(MusicStore,Jen,PurchaseRequestedJenMusicStoreBritneyCD1,DeliveredMusicStoreJenBritneyCD),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2650).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          cc(musicStore, jen, purchaseRequestedJenMusicStoreBritneyCD1, 
%             deliveredMusicStoreJenBritneyCD), 
%          Time), 
%       holds(
%          purchaseRequested(jen, musicStore, britneyCD, 1), 
%          Time)), 
%    happens(
%       dischargeCC(musicStore, jen, purchaseRequestedJenMusicStoreBritneyCD1, 
%          deliveredMusicStoreJenBritneyCD), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2650).
if(happens(dischargeCC(musicStore, jen, purchaseRequestedJenMusicStoreBritneyCD1, deliveredMusicStoreJenBritneyCD), Time),  (at(cc(musicStore, jen, purchaseRequestedJenMusicStoreBritneyCD1, deliveredMusicStoreJenBritneyCD), Time), at(purchaseRequested(jen, musicStore, britneyCD, 1), Time))).

% Delta: 
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2653).
% From E: 
% 
% directive(delta).
directive(delta).
 


% [time]
% HoldsAt(CC(Jen, MusicStore, DeliveredMusicStoreJenBritneyCD, EPOSentJenMusicStore1),time) &
% HoldsAt(Delivered(MusicStore,Jen,BritneyCD),time) ->
% Happens(CreateC(Jen,MusicStore,EPOSentJenMusicStore1),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2655).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          cc(jen, musicStore, deliveredMusicStoreJenBritneyCD, 
%             ePOSentJenMusicStore1), 
%          Time), 
%       holds(
%          delivered(musicStore,jen,britneyCD), 
%          Time)), 
%    happens(
%       createC(jen,musicStore,ePOSentJenMusicStore1), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2655).
if(happens(createC(jen, musicStore, ePOSentJenMusicStore1), Time),  (at(cc(jen, musicStore, deliveredMusicStoreJenBritneyCD, ePOSentJenMusicStore1), Time), at(delivered(musicStore, jen, britneyCD), Time))).

% Delta: 
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2658).
% From E: 
% 
% directive(delta).
directive(delta).
 


% [time]
% HoldsAt(CC(Jen, MusicStore, DeliveredMusicStoreJenBritneyCD, EPOSentJenMusicStore1),time) &
% HoldsAt(Delivered(MusicStore,Jen,BritneyCD),time) ->
% Happens(DischargeCC(Jen,MusicStore,DeliveredMusicStoreJenBritneyCD, EPOSentJenMusicStore1),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2660).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          cc(jen, musicStore, deliveredMusicStoreJenBritneyCD, 
%             ePOSentJenMusicStore1), 
%          Time), 
%       holds(
%          delivered(musicStore,jen,britneyCD), 
%          Time)), 
%    happens(
%       dischargeCC(jen, musicStore, deliveredMusicStoreJenBritneyCD, 
%          ePOSentJenMusicStore1), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2660).
if(happens(dischargeCC(jen, musicStore, deliveredMusicStoreJenBritneyCD, ePOSentJenMusicStore1), Time),  (at(cc(jen, musicStore, deliveredMusicStoreJenBritneyCD, ePOSentJenMusicStore1), Time), at(delivered(musicStore, jen, britneyCD), Time))).

% Delta: 
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2663).
% From E: 
% 
% directive(delta).
directive(delta).
 


% [time]
% HoldsAt(C(MusicStore,Jen,DeliveredMusicStoreJenBritneyCD),time) &
% HoldsAt(Delivered(MusicStore,Jen,BritneyCD),time) ->
% Happens(DischargeC(MusicStore,Jen,DeliveredMusicStoreJenBritneyCD),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2665).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          c(musicStore,jen,deliveredMusicStoreJenBritneyCD), 
%          Time), 
%       holds(
%          delivered(musicStore,jen,britneyCD), 
%          Time)), 
%    happens(
%       dischargeC(musicStore,jen,deliveredMusicStoreJenBritneyCD), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2665).
if(happens(dischargeC(musicStore, jen, deliveredMusicStoreJenBritneyCD), Time),  (at(c(musicStore, jen, deliveredMusicStoreJenBritneyCD), Time), at(delivered(musicStore, jen, britneyCD), Time))).

% Delta: 
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2668).
% From E: 
% 
% directive(delta).
directive(delta).
 


% [time]
% HoldsAt(C(Jen,MusicStore,EPOSentJenMusicStore1),time) &
% HoldsAt(EPOSent(Jen,MusicStore,1),time) ->
% Happens(DischargeC(Jen,MusicStore,EPOSentJenMusicStore1),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2670).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          c(jen,musicStore,ePOSentJenMusicStore1), 
%          Time), 
%       holds(
%          ePOSent(jen,musicStore,1), 
%          Time)), 
%    happens(
%       dischargeC(jen,musicStore,ePOSentJenMusicStore1), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2670).
if(happens(dischargeC(jen, musicStore, ePOSentJenMusicStore1), Time),  (at(c(jen, musicStore, ePOSentJenMusicStore1), Time), at(ePOSent(jen, musicStore, 1), Time))).

% Delta: 
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2673).
% From E: 
% 
% directive(delta).
directive(delta).
 


% Happens(Deliver(MusicStore,Jen,BritneyCD),0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2673).
% From E: 
% 
% happens(
%    deliver(musicStore,jen,britneyCD), 0).
observe(at(deliver(musicStore,jen,britneyCD),0)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2675).
% Delta: 
% From E: 
% 
% directive(delta).
directive(delta).
 


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2675).
% Happens(SendEPO(Jen,MusicStore,1),2).
% From E: 
% 
% happens(
%    sendEPO(jen,musicStore,1), 2).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2675).
observe(at(sendEPO(jen,musicStore,1),2)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2677).
%; Gamma
% [agent1,agent2,product,amount]
% !HoldsAt(QuoteSent(agent1,agent2,product,amount),0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2679).
% From E: 
% 
% holds(
%    not(quoteSent(Agent1, Agent2, Product, 
%           Amount)), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2679).
initially(not(quoteSent(Agent1,
			Agent2,
			Product,
			Amount))).


% [agent1,agent2,product,amount]
% !HoldsAt(PurchaseRequested(agent1,agent2,product,amount),0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2683).
% From E: 
% 
% holds(
%    not(purchaseRequested(Agent1, Agent2, Product, 
%           Amount)), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2683).
initially(not(purchaseRequested(Agent1,
				Agent2,
				Product,
				Amount))).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2685).
% [agent1,agent2,product]
% !HoldsAt(Delivered(agent1,agent2,product),0).
% From E: 
% 
% holds(
%    not(delivered(Agent1,Agent2,Product)), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2685).
initially(not(delivered(Agent1,Agent2,Product))).


% [agent1,agent2,f]
% !HoldsAt(C(agent1,agent2,f),0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2689).
% From E: 
% 
% holds(
%    not(c(Agent1,Agent2,F)), 0).
initially(not(c(Agent1,Agent2,F))).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2691).
% [agent1,agent2,f1,f2]
% !HoldsAt(CC(agent1,agent2,f1,f2),0).
% From E: 
% 
% holds(
%    not(cc(Agent1, Agent2, F1, 
%           F2)), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2691).
initially(not(cc(Agent1,Agent2,F1,F2))).


% [agent1,agent2,amount]
% !HoldsAt(EPOSent(agent1,agent2,amount),0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2695).
% From E: 
% 
% holds(
%    not(ePOSent(Agent1,Agent2,Amount)), 0).
initially(not(ePOSent(Agent1,Agent2,Amount))).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2697).
% completion Delta Happens
% From E: 
% 
% ':-'(call_pel_directive(completion(delta))).
:- call_pel_directive(completion(delta)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2697).
% From E: 
% 
% ':-'(call_pel_directive(completion(happens))).
:- call_pel_directive(completion(happens)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2699).
% range time 0 4
% From E: 
% 
% ':-'(call_pel_directive(range(time,0,4))).
:- call_pel_directive(range(time, 0, 4)).

% range offset 1 1
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2699).
% From E: 
% 
% ':-'(call_pel_directive(range(offset,1,1))).
:- call_pel_directive(range(offset, 1, 1)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2701).
% range amount 1 1
% From E: 
% 
% ':-'(call_pel_directive(range(amount,1,1))).
:- call_pel_directive(range(amount, 1, 1)).
%; End of file.
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%; FILE: examples/Mueller2006/Chapter14/NetBill2.e
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; @inproceedings{SirbuTygar:1995,
%;   author = "Marvin A. Sirbu and J. D. Tygar",
%;   year = "1995",
%;   title = "Net\uppercase{B}ill: An \uppercase{I}nternet commerce system optimized for network delivered services",
%;   editor = "
%;   booktitle = "40th \uppercase{IEEE} \uppercase{C}omputer \uppercase{S}ociety \uppercase{I}nternational \uppercase{C}onference",
%;   pages = "20--25",
%;   publisher = "
%;   address = "
%; }
%;
%; @book{Mueller:2006,
%;   author = "Erik T. Mueller",
%;   year = "2006",
%;   title = "Commonsense Reasoning",
%;   address = "San Francisco",
%;   publisher = "Morgan Kaufmann/Elsevier",
%; }
%;

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2740).
% option modeldiff on
% From E: 
% 
% ':-'(call_pel_directive(option(modeldiff,on))).
:- call_pel_directive(option(modeldiff, on)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2742).
% load foundations/Root.e
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/Root.e'))).
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2742).
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/EC.e'))).
:- call_pel_directive(load('foundations/EC.e')).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2745).
% sort agent
% From E: 
% 
% sort(agent).
sort(agent).

% agent MusicStore, Jen
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2745).
% From E: 
% 
% t(agent,musicStore).
isa(musicStore,agent).
% From E: 
% 
% t(agent,jen).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2745).
isa(jen,agent).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2748).
% sort product
% From E: 
% 
% sort(product).
sort(product).

% product BritneyCD
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2748).
% From E: 
% 
% t(product,britneyCD).
isa(britneyCD,product).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2751).
% sort f
% From E: 
% 
% sort(f).
sort(f).

% f PurchaseRequestedJenMusicStoreBritneyCD1
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2751).
% From E: 
% 
% t(f,purchaseRequestedJenMusicStoreBritneyCD1).
isa(purchaseRequestedJenMusicStoreBritneyCD1,f).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2753).
% f DeliveredMusicStoreJenBritneyCD
% From E: 
% 
% t(f,deliveredMusicStoreJenBritneyCD).
isa(deliveredMusicStoreJenBritneyCD,f).

% f EPOSentJenMusicStore1
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2753).
% From E: 
% 
% t(f,ePOSentJenMusicStore1).
isa(ePOSentJenMusicStore1,f).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2756).
% sort amount: integer
% From E: 
% 
% subsort(amount,integer).
subsort(amount,integer).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2758).
% fluent C(agent,agent,f)
% From E: 
% 
% fluent(c(agent,agent,f)).
mpred_prop(c(agent,agent,f),fluent).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2758).
fluents([c/3]).

% fluent CC(agent,agent,f,f)
% From E: 
% 
% fluent(cc(agent, agent, f, 
%           f)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2758).
mpred_prop(cc(agent,agent,f,f),fluent).
fluents([cc/4]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2761).
% event CreateC(agent,agent,f)
% From E: 
% 
% event(createC(agent,agent,f)).
events([createC/3]).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2761).
mpred_prop(createC(agent,agent,f),action).
actions([createC/3]).

% event CreateCC(agent,agent,f,f)
% From E: 
% 
% event(createCC(agent, agent, f, 
%          f)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2761).
events([createCC/4]).
mpred_prop(createCC(agent,agent,f,f),action).
actions([createCC/4]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2763).
% event DischargeC(agent,agent,f)
% From E: 
% 
% event(dischargeC(agent,agent,f)).
events([dischargeC/3]).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2763).
mpred_prop(dischargeC(agent,agent,f),action).
actions([dischargeC/3]).

% event DischargeCC(agent,agent,f,f)
% From E: 
% 
% event(dischargeCC(agent, agent, f, 
%          f)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2763).
events([dischargeCC/4]).
mpred_prop(dischargeCC(agent,agent,f,f),action).
actions([dischargeCC/4]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2766).
% fluent QuoteSent(agent,agent,product,amount)
% From E: 
% 
% fluent(quoteSent(agent, agent, product, 
%           amount)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2766).
mpred_prop(quoteSent(agent,agent,product,amount),fluent).
fluents([quoteSent/4]).

% fluent PurchaseRequested(agent,agent,product,amount)
% From E: 
% 
% fluent(purchaseRequested(agent, agent, product, 
%           amount)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2766).
mpred_prop(purchaseRequested(agent,agent,product,amount),fluent).
fluents([purchaseRequested/4]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2768).
% fluent Delivered(agent,agent,product)
% From E: 
% 
% fluent(delivered(agent,agent,product)).
mpred_prop(delivered(agent,agent,product),fluent).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2768).
fluents([delivered/3]).

% fluent EPOSent(agent,agent,amount)
% From E: 
% 
% fluent(ePOSent(agent,agent,amount)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2768).
mpred_prop(ePOSent(agent,agent,amount),fluent).
fluents([ePOSent/3]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2771).
% event SendQuote(agent,agent,product,amount)
% From E: 
% 
% event(sendQuote(agent, agent, product, 
%          amount)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2771).
events([sendQuote/4]).
mpred_prop(sendQuote(agent,agent,product,amount),action).
actions([sendQuote/4]).

% event RequestPurchase(agent,agent,product,amount)
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2771).
% From E: 
% 
% event(requestPurchase(agent, agent, product, 
%          amount)).
events([requestPurchase/4]).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2771).
mpred_prop(requestPurchase(agent,agent,product,amount),action).
actions([requestPurchase/4]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2773).
% event Deliver(agent,agent,product)
% From E: 
% 
% event(deliver(agent,agent,product)).
events([deliver/3]).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2773).
mpred_prop(deliver(agent,agent,product),action).
actions([deliver/3]).

% event SendEPO(agent,agent,amount)
% From E: 
% 
% event(sendEPO(agent,agent,amount)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2773).
events([sendEPO/3]).
mpred_prop(sendEPO(agent,agent,amount),action).
actions([sendEPO/3]).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2776).
%; Sigma
% [agent1,agent2,f,time]
% Initiates(CreateC(agent1,agent2,f),C(agent1,agent2,f),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2778).
% From E: 
% 
% initiates_at(
%    createC(Agent1,Agent2,F), 
%    c(Agent1,Agent2,F), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2778).
initiates(createC(Agent1,Agent2,F),
	  c(Agent1,Agent2,F)).


% [agent1,agent2,f1,f2,time]
% Initiates(CreateCC(agent1,agent2,f1,f2),CC(agent1,agent2,f1,f2),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2782).
% From E: 
% 
% initiates_at(
%    createCC(Agent1, Agent2, F1, 
%       F2), 
%    cc(Agent1, Agent2, F1, 
%       F2), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2782).
initiates(createCC(Agent1,Agent2,F1,F2),
	  cc(Agent1,Agent2,F1,F2)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2784).
% [agent1,agent2,f,time]
% Terminates(DischargeC(agent1,agent2,f),C(agent1,agent2,f),time).
% From E: 
% 
% terminates_at(
%    dischargeC(Agent1,Agent2,F), 
%    c(Agent1,Agent2,F), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2784).
terminates(dischargeC(Agent1,Agent2,F),
	   c(Agent1,Agent2,F)).


% [agent1,agent2,f1,f2,time]
% Terminates(DischargeCC(agent1,agent2,f1,f2),CC(agent1,agent2,f1,f2),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2788).
% From E: 
% 
% terminates_at(
%    dischargeCC(Agent1, Agent2, F1, 
%       F2), 
%    cc(Agent1, Agent2, F1, 
%       F2), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2788).
terminates(dischargeCC(Agent1,Agent2,F1,F2),
	   cc(Agent1,Agent2,F1,F2)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2790).
% [agent1,agent2,product,amount,time]
% Initiates(SendQuote(agent1,agent2,product,amount),
%           QuoteSent(agent1,agent2,product,amount),
%           time).
% From E: 
% 
% initiates_at(
%    sendQuote(Agent1, Agent2, Product, 
%       Amount), 
%    quoteSent(Agent1, Agent2, Product, 
%       Amount), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2790).
initiates(sendQuote(Agent1,
		    Agent2,
		    Product,
		    Amount),
	  quoteSent(Agent1,
		    Agent2,
		    Product,
		    Amount)).


% [agent1,agent2,product,amount,time]
% Initiates(RequestPurchase(agent1,agent2,product,amount),
%           PurchaseRequested(agent1,agent2,product,amount),
%           time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2796).
% From E: 
% 
% initiates_at(
%    requestPurchase(Agent1, Agent2, Product, 
%       Amount), 
%    purchaseRequested(Agent1, Agent2, Product, 
%       Amount), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2796).
initiates(requestPurchase(Agent1,
			  Agent2,
			  Product,
			  Amount),
	  purchaseRequested(Agent1,
			    Agent2,
			    Product,
			    Amount)).


% [agent1,agent2,product,time]
% Initiates(Deliver(agent1,agent2,product),
%           Delivered(agent1,agent2,product),
%           time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2801).
% From E: 
% 
% initiates_at(
%    deliver(Agent1,Agent2,Product), 
%    delivered(Agent1,Agent2,Product), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2801).
initiates(deliver(Agent1,Agent2,Product),
	  delivered(Agent1,Agent2,Product)).


% [agent1,agent2,amount,time]
% Initiates(SendEPO(agent1,agent2,amount),
%           EPOSent(agent1,agent2,amount),
%           time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2806).
% From E: 
% 
% initiates_at(
%    sendEPO(Agent1,Agent2,Amount), 
%    ePOSent(Agent1,Agent2,Amount), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2806).
initiates(sendEPO(Agent1,Agent2,Amount),
	  ePOSent(Agent1,Agent2,Amount)).


% [agent1,agent2,product,amount,f1,f2,time]
% agent1=% MusicStore &
% agent2=Jen &
% product=BritneyCD &
% amount=1 &
% f1=PurchaseRequestedJenMusicStoreBritneyCD1 &
% f2=DeliveredMusicStoreJenBritneyCD ->
% Initiates(SendQuote(agent1,agent2,product,amount),
%           CC(agent1,agent2,f1,f2),
%           time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2811).
% From E: 
% 
% '->'(
%    ','(
%       Agent1=musicStore, 
%       ','(
%          Agent2=jen, 
%          ','(
%             Product=britneyCD, 
%             ','(
%                Amount=1, 
%                ','(
%                   F1=purchaseRequestedJenMusicStoreBritneyCD1, 
%                   F2=deliveredMusicStoreJenBritneyCD))))), 
%    initiates_at(
%       sendQuote(Agent1, Agent2, Product, 
%          Amount), 
%       cc(Agent1, Agent2, F1, 
%          F2), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2811).
if(initiates(sendQuote(Agent1, Agent2, Product, Amount), at(cc(Agent1, Agent2, F1, F2), Time)),  (equals(Agent1, musicStore), equals(Agent2, jen), equals(Product, britneyCD), equals(Amount, 1), equals(F1, purchaseRequestedJenMusicStoreBritneyCD1), equals(F2, deliveredMusicStoreJenBritneyCD))).


% [agent1,agent2,product,amount,f1,f2,time]
% agent1=% Jen &
% agent2=MusicStore &
% product=BritneyCD &
% amount=1 &
% f1=DeliveredMusicStoreJenBritneyCD &
% f2=EPOSentJenMusicStore1 &
% !HoldsAt(Delivered(agent2,agent1,product),time) ->
% Initiates(RequestPurchase(agent1,agent2,product,amount),
%           CC(agent1,agent2,f1,f2),
%           time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2822).
% From E: 
% 
% '->'(
%    ','(
%       Agent1=jen, 
%       ','(
%          Agent2=musicStore, 
%          ','(
%             Product=britneyCD, 
%             ','(
%                Amount=1, 
%                ','(
%                   F1=deliveredMusicStoreJenBritneyCD, 
%                   ','(
%                      F2=ePOSentJenMusicStore1, 
%                      holds(
%                         not(delivered(Agent2,Agent1,Product)), 
%                         Time))))))), 
%    initiates_at(
%       requestPurchase(Agent1, Agent2, Product, 
%          Amount), 
%       cc(Agent1, Agent2, F1, 
%          F2), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2822).
if(initiates(requestPurchase(Agent1, Agent2, Product, Amount), at(cc(Agent1, Agent2, F1, F2), Time)),  (equals(Agent1, jen), equals(Agent2, musicStore), equals(Product, britneyCD), equals(Amount, 1), equals(F1, deliveredMusicStoreJenBritneyCD), equals(F2, ePOSentJenMusicStore1), at(not(delivered(Agent2, Agent1, Product)), Time))).


%; Delta

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2835).
% Delta: 
% From E: 
% 
% directive(delta).
directive(delta).
 


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2835).
% [time]
% HoldsAt(CC(MusicStore,Jen,PurchaseRequestedJenMusicStoreBritneyCD1,DeliveredMusicStoreJenBritneyCD),time) &
% HoldsAt(PurchaseRequested(Jen,MusicStore,BritneyCD,1),time) ->
% Happens(CreateC(MusicStore,Jen,DeliveredMusicStoreJenBritneyCD),time).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          cc(musicStore, jen, purchaseRequestedJenMusicStoreBritneyCD1, 
%             deliveredMusicStoreJenBritneyCD), 
%          Time), 
%       holds(
%          purchaseRequested(jen, musicStore, britneyCD, 1), 
%          Time)), 
%    happens(
%       createC(musicStore,jen,deliveredMusicStoreJenBritneyCD), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2835).
if(happens(createC(musicStore, jen, deliveredMusicStoreJenBritneyCD), Time),  (at(cc(musicStore, jen, purchaseRequestedJenMusicStoreBritneyCD1, deliveredMusicStoreJenBritneyCD), Time), at(purchaseRequested(jen, musicStore, britneyCD, 1), Time))).

% Delta: 
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2839).
% From E: 
% 
% directive(delta).
directive(delta).
 


% [time]
% HoldsAt(CC(MusicStore,Jen,PurchaseRequestedJenMusicStoreBritneyCD1,DeliveredMusicStoreJenBritneyCD),time) &
% HoldsAt(PurchaseRequested(Jen, MusicStore, BritneyCD, 1),time) ->
% Happens(DischargeCC(MusicStore,Jen,PurchaseRequestedJenMusicStoreBritneyCD1,DeliveredMusicStoreJenBritneyCD),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2841).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          cc(musicStore, jen, purchaseRequestedJenMusicStoreBritneyCD1, 
%             deliveredMusicStoreJenBritneyCD), 
%          Time), 
%       holds(
%          purchaseRequested(jen, musicStore, britneyCD, 1), 
%          Time)), 
%    happens(
%       dischargeCC(musicStore, jen, purchaseRequestedJenMusicStoreBritneyCD1, 
%          deliveredMusicStoreJenBritneyCD), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2841).
if(happens(dischargeCC(musicStore, jen, purchaseRequestedJenMusicStoreBritneyCD1, deliveredMusicStoreJenBritneyCD), Time),  (at(cc(musicStore, jen, purchaseRequestedJenMusicStoreBritneyCD1, deliveredMusicStoreJenBritneyCD), Time), at(purchaseRequested(jen, musicStore, britneyCD, 1), Time))).

% Delta: 
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2844).
% From E: 
% 
% directive(delta).
directive(delta).
 


% [time]
% HoldsAt(CC(Jen, MusicStore, DeliveredMusicStoreJenBritneyCD, EPOSentJenMusicStore1),time) &
% HoldsAt(Delivered(MusicStore,Jen,BritneyCD),time) ->
% Happens(CreateC(Jen,MusicStore,EPOSentJenMusicStore1),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2846).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          cc(jen, musicStore, deliveredMusicStoreJenBritneyCD, 
%             ePOSentJenMusicStore1), 
%          Time), 
%       holds(
%          delivered(musicStore,jen,britneyCD), 
%          Time)), 
%    happens(
%       createC(jen,musicStore,ePOSentJenMusicStore1), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2846).
if(happens(createC(jen, musicStore, ePOSentJenMusicStore1), Time),  (at(cc(jen, musicStore, deliveredMusicStoreJenBritneyCD, ePOSentJenMusicStore1), Time), at(delivered(musicStore, jen, britneyCD), Time))).

% Delta: 
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2849).
% From E: 
% 
% directive(delta).
directive(delta).
 


% [time]
% HoldsAt(CC(Jen, MusicStore, DeliveredMusicStoreJenBritneyCD, EPOSentJenMusicStore1),time) &
% HoldsAt(Delivered(MusicStore,Jen,BritneyCD),time) ->
% Happens(DischargeCC(Jen,MusicStore,DeliveredMusicStoreJenBritneyCD, EPOSentJenMusicStore1),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2851).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          cc(jen, musicStore, deliveredMusicStoreJenBritneyCD, 
%             ePOSentJenMusicStore1), 
%          Time), 
%       holds(
%          delivered(musicStore,jen,britneyCD), 
%          Time)), 
%    happens(
%       dischargeCC(jen, musicStore, deliveredMusicStoreJenBritneyCD, 
%          ePOSentJenMusicStore1), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2851).
if(happens(dischargeCC(jen, musicStore, deliveredMusicStoreJenBritneyCD, ePOSentJenMusicStore1), Time),  (at(cc(jen, musicStore, deliveredMusicStoreJenBritneyCD, ePOSentJenMusicStore1), Time), at(delivered(musicStore, jen, britneyCD), Time))).

% Delta: 
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2854).
% From E: 
% 
% directive(delta).
directive(delta).
 


% [time]
% HoldsAt(C(MusicStore,Jen,DeliveredMusicStoreJenBritneyCD),time) &
% HoldsAt(Delivered(MusicStore,Jen,BritneyCD),time) ->
% Happens(DischargeC(MusicStore,Jen,DeliveredMusicStoreJenBritneyCD),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2856).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          c(musicStore,jen,deliveredMusicStoreJenBritneyCD), 
%          Time), 
%       holds(
%          delivered(musicStore,jen,britneyCD), 
%          Time)), 
%    happens(
%       dischargeC(musicStore,jen,deliveredMusicStoreJenBritneyCD), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2856).
if(happens(dischargeC(musicStore, jen, deliveredMusicStoreJenBritneyCD), Time),  (at(c(musicStore, jen, deliveredMusicStoreJenBritneyCD), Time), at(delivered(musicStore, jen, britneyCD), Time))).

% Delta: 
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2859).
% From E: 
% 
% directive(delta).
directive(delta).
 


% [time]
% HoldsAt(C(Jen,MusicStore,EPOSentJenMusicStore1),time) &
% HoldsAt(EPOSent(Jen,MusicStore,1),time) ->
% Happens(DischargeC(Jen,MusicStore,EPOSentJenMusicStore1),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2861).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          c(jen,musicStore,ePOSentJenMusicStore1), 
%          Time), 
%       holds(
%          ePOSent(jen,musicStore,1), 
%          Time)), 
%    happens(
%       dischargeC(jen,musicStore,ePOSentJenMusicStore1), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2861).
if(happens(dischargeC(jen, musicStore, ePOSentJenMusicStore1), Time),  (at(c(jen, musicStore, ePOSentJenMusicStore1), Time), at(ePOSent(jen, musicStore, 1), Time))).

% Delta: 
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2864).
% From E: 
% 
% directive(delta).
directive(delta).
 


% Happens(RequestPurchase(Jen,MusicStore,BritneyCD,1),0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2864).
% From E: 
% 
% happens(
%    requestPurchase(jen, musicStore, britneyCD, 1), 0).
observe(at(requestPurchase(jen,musicStore,britneyCD,1),0)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2866).
% Delta: 
% From E: 
% 
% directive(delta).
directive(delta).
 


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2866).
% Happens(Deliver(MusicStore,Jen,BritneyCD),2).
% From E: 
% 
% happens(
%    deliver(musicStore,jen,britneyCD), 2).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2866).
observe(at(deliver(musicStore,jen,britneyCD),2)).

% Delta: 
% From E: 
% 
% directive(delta).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2866).
directive(delta).
 


% Happens(SendEPO(Jen,MusicStore,1),4).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2866).
% From E: 
% 
% happens(
%    sendEPO(jen,musicStore,1), 4).
observe(at(sendEPO(jen,musicStore,1),4)).


%; Gamma
% [agent1,agent2,product,amount]
% !HoldsAt(QuoteSent(agent1,agent2,product,amount),0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2871).
% From E: 
% 
% holds(
%    not(quoteSent(Agent1, Agent2, Product, 
%           Amount)), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2871).
initially(not(quoteSent(Agent1,
			Agent2,
			Product,
			Amount))).


% [agent1,agent2,product,amount]
% !HoldsAt(PurchaseRequested(agent1,agent2,product,amount),0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2875).
% From E: 
% 
% holds(
%    not(purchaseRequested(Agent1, Agent2, Product, 
%           Amount)), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2875).
initially(not(purchaseRequested(Agent1,
				Agent2,
				Product,
				Amount))).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2877).
% [agent1,agent2,product]
% !HoldsAt(Delivered(agent1,agent2,product),0).
% From E: 
% 
% holds(
%    not(delivered(Agent1,Agent2,Product)), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2877).
initially(not(delivered(Agent1,Agent2,Product))).


% [agent1,agent2,f]
% !HoldsAt(C(agent1,agent2,f),0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2881).
% From E: 
% 
% holds(
%    not(c(Agent1,Agent2,F)), 0).
initially(not(c(Agent1,Agent2,F))).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2883).
% [agent1,agent2,f1,f2]
% !HoldsAt(CC(agent1,agent2,f1,f2),0).
% From E: 
% 
% holds(
%    not(cc(Agent1, Agent2, F1, 
%           F2)), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2883).
initially(not(cc(Agent1,Agent2,F1,F2))).


% [agent1,agent2,amount]
% !HoldsAt(EPOSent(agent1,agent2,amount),0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2887).
% From E: 
% 
% holds(
%    not(ePOSent(Agent1,Agent2,Amount)), 0).
initially(not(ePOSent(Agent1,Agent2,Amount))).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2889).
% completion Delta Happens
% From E: 
% 
% ':-'(call_pel_directive(completion(delta))).
:- call_pel_directive(completion(delta)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2889).
% From E: 
% 
% ':-'(call_pel_directive(completion(happens))).
:- call_pel_directive(completion(happens)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2891).
% range time 0 6
% From E: 
% 
% ':-'(call_pel_directive(range(time,0,6))).
:- call_pel_directive(range(time, 0, 6)).

% range offset 1 1
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2891).
% From E: 
% 
% ':-'(call_pel_directive(range(offset,1,1))).
:- call_pel_directive(range(offset, 1, 1)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2893).
% range amount 1 1
% From E: 
% 
% ':-'(call_pel_directive(range(amount,1,1))).
:- call_pel_directive(range(amount, 1, 1)).
%; End of file.
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%; FILE: examples/Mueller2006/Chapter14/Vision.e
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; @inproceedings{ShanahanRandell:2004,
%;   author = "Murray Shanahan and David A. Randell",
%;   year = "2004",
%;   title = "A logic-based formulation of active visual perception",
%;   editor = "Didier Dubois and Christopher A. Welty and Mary-Anne Williams",
%;   booktitle = "\uppercase{P}roceedings of the \uppercase{N}inth \uppercase{I}nternational \uppercase{C}onference on \uppercase{P}rinciples of \uppercase{K}nowledge \uppercase{R}epresentation and \uppercase{R}easoning",
%;   pages = "64--72",
%;   address = "Menlo Park, CA",
%;   publisher = "AAAI Press",
%; }
%;
%; @book{Mueller:2006,
%;   author = "Erik T. Mueller",
%;   year = "2006",
%;   title = "Commonsense Reasoning",
%;   address = "San Francisco",
%;   publisher = "Morgan Kaufmann/Elsevier",
%; }
%;

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2932).
% option modeldiff on
% From E: 
% 
% ':-'(call_pel_directive(option(modeldiff,on))).
:- call_pel_directive(option(modeldiff, on)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2934).
% load foundations/Root.e
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/Root.e'))).
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2934).
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/EC.e'))).
:- call_pel_directive(load('foundations/EC.e')).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2937).
% sort object
% From E: 
% 
% sort(object).
sort(object).

% sort shape
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2937).
% From E: 
% 
% sort(shape).
sort(shape).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2939).
% sort aspect
% From E: 
% 
% sort(aspect).
sort(aspect).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2941).
% object Object1
% From E: 
% 
% t(object,object1).
isa(object1,object).

% aspect Aspect1, Aspect2, Aspect3
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2941).
% From E: 
% 
% t(aspect,aspect1).
isa(aspect1,aspect).
% From E: 
% 
% t(aspect,aspect2).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2941).
isa(aspect2,aspect).
% From E: 
% 
% t(aspect,aspect3).
isa(aspect3,aspect).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2943).
% shape Shape1, Shape2
% From E: 
% 
% t(shape,shape1).
isa(shape1,shape).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2943).
% From E: 
% 
% t(shape,shape2).
isa(shape2,shape).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2945).
% predicate Shape(object,shape)
% From E: 
% 
% predicate(shape(object,shape)).
mpred_prop(shape(object,shape),predicate).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2945).
predicates([shape/2]).

% predicate Arc(shape,aspect,aspect)
% From E: 
% 
% predicate(arc(shape,aspect,aspect)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2945).
mpred_prop(arc(shape,aspect,aspect),predicate).
predicates([arc/3]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2947).
% fluent Aspect(object,aspect)
% From E: 
% 
% fluent(aspect(object,aspect)).
mpred_prop(aspect(object,aspect),fluent).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2947).
fluents([aspect/2]).

% event Change(object,aspect,aspect)
% From E: 
% 
% event(change(object,aspect,aspect)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2947).
mpred_prop(change(object,aspect,aspect),event).
events([change/3]).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2950).
%; Sigma
% [object,aspect1,aspect2,shape,time]
% HoldsAt(Aspect(object,aspect1),time) &
% Shape(object,shape) &
% (Arc(shape,aspect1,aspect2) |
%  Arc(shape,aspect2,aspect1)) ->
% Initiates(Change(object,aspect1,aspect2),Aspect(object,aspect2),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2952).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          aspect(Object,Aspect1), 
%          Time), 
%       ','(
%          shape(Object,Shape), 
%          ';'(
%             arc(Shape,Aspect1,Aspect2), 
%             arc(Shape,Aspect2,Aspect1)))), 
%    initiates_at(
%       change(Object,Aspect1,Aspect2), 
%       aspect(Object,Aspect2), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2952).
if(initiates(change(Object, Aspect1, Aspect2), at(aspect(Object, Aspect2), Time)),  (at(aspect(Object, Aspect1), Time), shape(Object, Shape), (arc(Shape, Aspect1, Aspect2);arc(Shape, Aspect2, Aspect1)))).


% [object,aspect1,aspect2,shape,time]
% HoldsAt(Aspect(object,aspect1),time) &
% Shape(object,shape) &
% (Arc(shape,aspect1,aspect2) |
%  Arc(shape,aspect2,aspect1)) ->
% Terminates(Change(object,aspect1,aspect2),Aspect(object,aspect1),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2960).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          aspect(Object,Aspect1), 
%          Time), 
%       ','(
%          shape(Object,Shape), 
%          ';'(
%             arc(Shape,Aspect1,Aspect2), 
%             arc(Shape,Aspect2,Aspect1)))), 
%    terminates_at(
%       change(Object,Aspect1,Aspect2), 
%       aspect(Object,Aspect1), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2960).
if(terminates(change(Object, Aspect1, Aspect2), at(aspect(Object, Aspect1), Time)),  (at(aspect(Object, Aspect1), Time), shape(Object, Shape), (arc(Shape, Aspect1, Aspect2);arc(Shape, Aspect2, Aspect1)))).


%; preconditions (added)
% [object,aspect1,aspect2,time]
% Happens(Change(object,aspect1,aspect2),time) ->
% HoldsAt(Aspect(object,aspect1),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2968).
% From E: 
% 
% '->'(
%    happens(
%       change(Object,Aspect1,Aspect2), 
%       Time), 
%    holds(
%       aspect(Object,Aspect1), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2968).
if(at(aspect(Object,Aspect1),Time),
   happens(change(Object,Aspect1,Aspect2),Time)).


% [object,aspect1,aspect2,aspect3,time]
% Happens(Change(object,aspect1,aspect2),time) &
% Happens(Change(object,aspect1,aspect3),time) ->
% aspect2=aspect3.
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2973).
% From E: 
% 
% '->'(
%    ','(
%       happens(
%          change(Object,Aspect1,Aspect2), 
%          Time), 
%       happens(
%          change(Object,Aspect1,Aspect3), 
%          Time)), 
%    Aspect2=Aspect3).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2973).
if(equals(Aspect2, Aspect3),  (happens(change(Object, Aspect1, Aspect2), Time), happens(change(Object, Aspect1, Aspect3), Time))).


%; Psi
% [object,shape1,shape2]
% Shape(object,shape1) &
% Shape(object,shape2) ->
% shape1=shape2.
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2979).
% From E: 
% 
% '->'(
%    ','(
%       shape(Object,Shape1), 
%       shape(Object,Shape2)), 
%    Shape1=Shape2).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2979).
if(equals(Shape1, Shape2),  (shape(Object, Shape1), shape(Object, Shape2))).


% [object,aspect1,aspect2,time]
% HoldsAt(Aspect(object,aspect1),time) &
% HoldsAt(Aspect(object,aspect2),time) ->
% aspect1=aspect2.
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2985).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          aspect(Object,Aspect1), 
%          Time), 
%       holds(
%          aspect(Object,Aspect2), 
%          Time)), 
%    Aspect1=Aspect2).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2985).
if(equals(Aspect1, Aspect2),  (at(aspect(Object, Aspect1), Time), at(aspect(Object, Aspect2), Time))).


% [aspect1,aspect2]
% Arc(Shape1,aspect1,aspect2) <->
% (aspect1=Aspect1 & aspect2=Aspect2).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2990).
% From E: 
% 
% <->(
%    arc(shape1,Aspect1,Aspect2), 
%    ','(
%       Aspect1=aspect1, 
%       Aspect2=aspect2)).
arc(shape1, Aspect1, Aspect2) <->
    Aspect1=aspect1,
    Aspect2=aspect2.


% [aspect1,aspect2]
% Arc(Shape2,aspect1,aspect2) <->
% ((aspect1=Aspect1 & aspect2=Aspect3) |
%  (aspect1=Aspect3 & aspect2=Aspect2)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2994).
% From E: 
% 
% <->(
%    arc(shape2,Aspect1,Aspect2), 
%    ';'(
%       ','(
%          Aspect1=aspect1, 
%          Aspect2=aspect3), 
%       ','(
%          Aspect1=aspect3, 
%          Aspect2=aspect2))).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',2994).
arc(shape2, Aspect1, Aspect2) <->
    (   Aspect1=aspect1,
        Aspect2=aspect3
    ;   Aspect1=aspect3,
        Aspect2=aspect2
    ).


%; Gamma


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3000).
% HoldsAt(Aspect(Object1,Aspect1),0).
% From E: 
% 
% holds(
%    aspect(object1,aspect1), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3000).
initially(aspect(object1,aspect1)).


% HoldsAt(Aspect(Object1,Aspect2),1).
% From E: 
% 
% holds(
%    aspect(object1,aspect2), 1).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3000).
at(aspect(object1,aspect2),1).


%;completion Delta Happens

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3005).
% range time 0 1
% From E: 
% 
% ':-'(call_pel_directive(range(time,0,1))).
:- call_pel_directive(range(time, 0, 1)).

% range offset 1 1
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3005).
% From E: 
% 
% ':-'(call_pel_directive(range(offset,1,1))).
:- call_pel_directive(range(offset, 1, 1)).
%; End of file.
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%; FILE: examples/Mueller2006/Chapter14/Workflow.e
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; @incollection{CicekliYildirim:2000,
%;   author = "Nihan Kesim Cicekli and Yakup Yildirim",
%;   year = "2000",
%;   title = "Formalizing workflows using the event calculus",
%;   editor = "Mohamed T. Ibrahim and Josef K{\"{u}}ng and Norman Revell",
%;   booktitle = "Database and Expert Systems Applications",
%;   series = "Lecture Notes in Computer Science",
%;   volume = "1873",
%;   pages = "222--231",
%;   address = "Berlin",
%;   publisher = "Springer",
%; }
%;
%; @unpublished{WFMC:1999,
%;   author = "{Workflow Management Coalition}",
%;   year = "1999",
%;   title = "\uppercase{W}orkflow \uppercase{M}anagement \uppercase{C}oalition Terminology \& Glossary",
%;   howpublished = "Document Number WFMC-TC-1011, Document Status -- Issue 3.0, Workflow Management Coalition, Winchester, UK",
%; }
%;
%; @book{Mueller:2006,
%;   author = "Erik T. Mueller",
%;   year = "2006",
%;   title = "Commonsense Reasoning",
%;   address = "San Francisco",
%;   publisher = "Morgan Kaufmann/Elsevier",
%; }
%;

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3054).
% option modeldiff on
% From E: 
% 
% ':-'(call_pel_directive(option(modeldiff,on))).
:- call_pel_directive(option(modeldiff, on)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3056).
% load foundations/Root.e
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/Root.e'))).
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3056).
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/EC.e'))).
:- call_pel_directive(load('foundations/EC.e')).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3059).
% sort activity
% From E: 
% 
% sort(activity).
sort(activity).

% sort condition
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3059).
% From E: 
% 
% sort(condition).
sort(condition).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3061).
% activity A, B, C1, C2, C3, D, E1, E2, E3, F, G
% From E: 
% 
% t(activity,a).
isa(a,activity).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3061).
% From E: 
% 
% t(activity,b).
isa(b,activity).
% From E: 
% 
% t(activity,c1).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3061).
isa(c1,activity).
% From E: 
% 
% t(activity,c2).
isa(c2,activity).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3061).
% From E: 
% 
% t(activity,c3).
isa(c3,activity).
% From E: 
% 
% t(activity,d).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3061).
isa(d,activity).
% From E: 
% 
% t(activity,e1).
isa(e1,activity).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3061).
% From E: 
% 
% t(activity,e2).
isa(e2,activity).
% From E: 
% 
% t(activity,e3).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3061).
isa(e3,activity).
% From E: 
% 
% t(activity,f).
isa(f,activity).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3061).
% From E: 
% 
% t(activity,g).
isa(g,activity).

% condition E1C, E2C, E3C, FC
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3061).
% From E: 
% 
% t(condition,e1c).
isa(e1c,condition).
% From E: 
% 
% t(condition,e2c).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3061).
isa(e2c,condition).
% From E: 
% 
% t(condition,e3c).
isa(e3c,condition).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3061).
% From E: 
% 
% t(condition,fc).
isa(fc,condition).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3064).
% fluent Active(activity)
% From E: 
% 
% fluent(active(activity)).
mpred_prop(active(activity),fluent).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3064).
fluents([active/1]).

% fluent Completed(activity)
% From E: 
% 
% fluent(completed(activity)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3064).
mpred_prop(completed(activity),fluent).
fluents([completed/1]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3066).
% fluent Condition(condition)
% From E: 
% 
% fluent(condition(condition)).
mpred_prop(condition(condition),fluent).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3066).
fluents([condition/1]).

% noninertial Condition
% From E: 
% 
% ':-'(call_pel_directive(noninertial(condition))).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3066).
:- call_pel_directive(noninertial(condition)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3069).
% event Start(activity)
% From E: 
% 
% event(start(activity)).
mpred_prop(start(activity),event).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3069).
events([start/1]).

% event End(activity)
% From E: 
% 
% event(end(activity)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3069).
mpred_prop(end(activity),event).
events([end/1]).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3072).
%; Sigma
% [activity,time]
% Initiates(Start(activity),Active(activity),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3074).
% From E: 
% 
% initiates_at(
%    start(Activity), 
%    active(Activity), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3074).
initiates(start(Activity),active(Activity)).


% [activity,time]
% Terminates(Start(activity),Completed(activity),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3078).
% From E: 
% 
% terminates_at(
%    start(Activity), 
%    completed(Activity), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3078).
terminates(start(Activity),completed(Activity)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3080).
% [activity,time]
% Initiates(End(activity),Completed(activity),time).
% From E: 
% 
% initiates_at(
%    end(Activity), 
%    completed(Activity), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3080).
initiates(end(Activity),completed(Activity)).


% [activity,time]
% Terminates(End(activity),Active(activity),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3084).
% From E: 
% 
% terminates_at(
%    end(Activity), 
%    active(Activity), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3084).
terminates(end(Activity),active(Activity)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3086).
%; Delta
%; A; B

% Delta: 
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3088).
% From E: 
% 
% directive(delta).
directive(delta).
 


% [time]
% !HoldsAt(Active(B),time) &
% !HoldsAt(Completed(A),time-1) &
% HoldsAt(Completed(A),time) ->
% Happens(Start(B),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3090).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          not(active(b)), 
%          Time), 
%       ','(
%          holds(
%             not(completed(a)), 
%             Time-1), 
%          holds(
%             completed(a), 
%             Time))), 
%    happens(
%       start(b), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3090).
if(happens(start(b), Time),  (at(not(active(b)), Time), at(not(completed(a)), Time-1), at(completed(a), Time))).


%; B; AND-split C1, C2, C3

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3096).
% Delta: 
% From E: 
% 
% directive(delta).
directive(delta).
 


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3096).
% [time]
% !HoldsAt(Active(C1),time) &
% !HoldsAt(Completed(B),time-1) &
% HoldsAt(Completed(B),time) ->
% Happens(Start(C1),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3096).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          not(active(c1)), 
%          Time), 
%       ','(
%          holds(
%             not(completed(b)), 
%             Time-1), 
%          holds(
%             completed(b), 
%             Time))), 
%    happens(
%       start(c1), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3096).
if(happens(start(c1), Time),  (at(not(active(c1)), Time), at(not(completed(b)), Time-1), at(completed(b), Time))).

% Delta: 
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3101).
% From E: 
% 
% directive(delta).
directive(delta).
 


% [time]
% !HoldsAt(Active(C2),time) &
% !HoldsAt(Completed(B),time-1) &
% HoldsAt(Completed(B),time) ->
% Happens(Start(C2),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3103).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          not(active(c2)), 
%          Time), 
%       ','(
%          holds(
%             not(completed(b)), 
%             Time-1), 
%          holds(
%             completed(b), 
%             Time))), 
%    happens(
%       start(c2), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3103).
if(happens(start(c2), Time),  (at(not(active(c2)), Time), at(not(completed(b)), Time-1), at(completed(b), Time))).

% Delta: 
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3107).
% From E: 
% 
% directive(delta).
directive(delta).
 


% [time]
% !HoldsAt(Active(C3),time) &
% !HoldsAt(Completed(B),time-1) &
% HoldsAt(Completed(B),time) ->
% Happens(Start(C3),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3109).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          not(active(c3)), 
%          Time), 
%       ','(
%          holds(
%             not(completed(b)), 
%             Time-1), 
%          holds(
%             completed(b), 
%             Time))), 
%    happens(
%       start(c3), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3109).
if(happens(start(c3), Time),  (at(not(active(c3)), Time), at(not(completed(b)), Time-1), at(completed(b), Time))).


%; AND-join C1, C2, C3; D

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3115).
% Delta: 
% From E: 
% 
% directive(delta).
directive(delta).
 


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3115).
% [time]
% !HoldsAt(Active(D),time) &
% ((!HoldsAt(Completed(C1),time-1) & HoldsAt(Completed(C1),time))|
%  (!HoldsAt(Completed(C2),time-1) & HoldsAt(Completed(C2),time))|
%  (!HoldsAt(Completed(C3),time-1) & HoldsAt(Completed(C3),time))) &
% HoldsAt(Completed(C1),time) &
% HoldsAt(Completed(C2),time) &
% HoldsAt(Completed(C3),time) ->
% Happens(Start(D),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3115).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          not(active(d)), 
%          Time), 
%       ','(
%          ';'(
%             ','(
%                holds(
%                   not(completed(c1)), 
%                   Time-1), 
%                holds(
%                   completed(c1), 
%                   Time)), 
%             ';'(
%                ','(
%                   holds(
%                      not(completed(c2)), 
%                      Time-1), 
%                   holds(
%                      completed(c2), 
%                      Time)), 
%                ','(
%                   holds(
%                      not(completed(c3)), 
%                      Time-1), 
%                   holds(
%                      completed(c3), 
%                      Time)))), 
%          ','(
%             holds(
%                completed(c1), 
%                Time), 
%             ','(
%                holds(
%                   completed(c2), 
%                   Time), 
%                holds(
%                   completed(c3), 
%                   Time))))), 
%    happens(
%       start(d), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3115).
if(happens(start(d), Time),  (at(not(active(d)), Time), (at(not(completed(c1)), Time-1), at(completed(c1), Time);at(not(completed(c2)), Time-1), at(completed(c2), Time);at(not(completed(c3)), Time-1), at(completed(c3), Time)), at(completed(c1), Time), at(completed(c2), Time), at(completed(c3), Time))).


%; D; XOR-split E1, E2, E3

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3126).
% Delta: 
% From E: 
% 
% directive(delta).
directive(delta).
 


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3126).
% [time]
% !HoldsAt(Active(E1),time) &
% !HoldsAt(Completed(D),time-1) &
% HoldsAt(Completed(D),time) &
% HoldsAt(Condition(E1C),time) ->
% Happens(Start(E1),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3126).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          not(active(e1)), 
%          Time), 
%       ','(
%          holds(
%             not(completed(d)), 
%             Time-1), 
%          ','(
%             holds(
%                completed(d), 
%                Time), 
%             holds(
%                condition(e1c), 
%                Time)))), 
%    happens(
%       start(e1), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3126).
if(happens(start(e1), Time),  (at(not(active(e1)), Time), at(not(completed(d)), Time-1), at(completed(d), Time), at(condition(e1c), Time))).

% Delta: 
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3132).
% From E: 
% 
% directive(delta).
directive(delta).
 


% [time]
% !HoldsAt(Active(E2),time) &
% !HoldsAt(Completed(D),time-1) &
% HoldsAt(Completed(D),time) &
% HoldsAt(Condition(E2C),time) ->
% Happens(Start(E2),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3134).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          not(active(e2)), 
%          Time), 
%       ','(
%          holds(
%             not(completed(d)), 
%             Time-1), 
%          ','(
%             holds(
%                completed(d), 
%                Time), 
%             holds(
%                condition(e2c), 
%                Time)))), 
%    happens(
%       start(e2), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3134).
if(happens(start(e2), Time),  (at(not(active(e2)), Time), at(not(completed(d)), Time-1), at(completed(d), Time), at(condition(e2c), Time))).

% Delta: 
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3139).
% From E: 
% 
% directive(delta).
directive(delta).
 


% [time]
% !HoldsAt(Active(E3),time) &
% !HoldsAt(Completed(D),time-1) &
% HoldsAt(Completed(D),time) &
% HoldsAt(Condition(E3C),time) ->
% Happens(Start(E3),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3141).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          not(active(e3)), 
%          Time), 
%       ','(
%          holds(
%             not(completed(d)), 
%             Time-1), 
%          ','(
%             holds(
%                completed(d), 
%                Time), 
%             holds(
%                condition(e3c), 
%                Time)))), 
%    happens(
%       start(e3), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3141).
if(happens(start(e3), Time),  (at(not(active(e3)), Time), at(not(completed(d)), Time-1), at(completed(d), Time), at(condition(e3c), Time))).


%; XOR-join E1, E2, E3; F

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3148).
% Delta: 
% From E: 
% 
% directive(delta).
directive(delta).
 


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3148).
% [time]
% !HoldsAt(Active(F),time) &
% ((!HoldsAt(Completed(E1),time-1) & HoldsAt(Completed(E1),time))|
%  (!HoldsAt(Completed(E2),time-1) & HoldsAt(Completed(E2),time))|
%  (!HoldsAt(Completed(E3),time-1) & HoldsAt(Completed(E3),time))) ->
% Happens(Start(F),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3148).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          not(active(f)), 
%          Time), 
%       ';'(
%          ','(
%             holds(
%                not(completed(e1)), 
%                Time-1), 
%             holds(
%                completed(e1), 
%                Time)), 
%          ';'(
%             ','(
%                holds(
%                   not(completed(e2)), 
%                   Time-1), 
%                holds(
%                   completed(e2), 
%                   Time)), 
%             ','(
%                holds(
%                   not(completed(e3)), 
%                   Time-1), 
%                holds(
%                   completed(e3), 
%                   Time))))), 
%    happens(
%       start(f), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3148).
if(happens(start(f), Time),  (at(not(active(f)), Time), (at(not(completed(e1)), Time-1), at(completed(e1), Time);at(not(completed(e2)), Time-1), at(completed(e2), Time);at(not(completed(e3)), Time-1), at(completed(e3), Time)))).


%; while (FC) F; G

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3156).
% Delta: 
% From E: 
% 
% directive(delta).
directive(delta).
 


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3156).
% [time]
% !HoldsAt(Active(F),time) &
% !HoldsAt(Completed(F),time-1) &
% HoldsAt(Completed(F),time) &
% HoldsAt(Condition(FC),time) ->
% Happens(Start(F),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3156).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          not(active(f)), 
%          Time), 
%       ','(
%          holds(
%             not(completed(f)), 
%             Time-1), 
%          ','(
%             holds(
%                completed(f), 
%                Time), 
%             holds(
%                condition(fc), 
%                Time)))), 
%    happens(
%       start(f), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3156).
if(happens(start(f), Time),  (at(not(active(f)), Time), at(not(completed(f)), Time-1), at(completed(f), Time), at(condition(fc), Time))).

% Delta: 
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3162).
% From E: 
% 
% directive(delta).
directive(delta).
 


% [time]
% !HoldsAt(Active(G),time) &
% !HoldsAt(Completed(F),time-1) &
% HoldsAt(Completed(F),time) &
% !HoldsAt(Condition(FC),time) ->
% Happens(Start(G),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3164).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          not(active(g)), 
%          Time), 
%       ','(
%          holds(
%             not(completed(f)), 
%             Time-1), 
%          ','(
%             holds(
%                completed(f), 
%                Time), 
%             holds(
%                not(condition(fc)), 
%                Time)))), 
%    happens(
%       start(g), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3164).
if(happens(start(g), Time),  (at(not(active(g)), Time), at(not(completed(f)), Time-1), at(completed(f), Time), at(not(condition(fc)), Time))).

% Delta: 
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3169).
% From E: 
% 
% directive(delta).
directive(delta).
 


% Happens(Start(A),0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3169).
% From E: 
% 
% happens(
%    start(a), 0).
observe(at(start(a),0)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3171).
% Delta: 
% From E: 
% 
% directive(delta).
directive(delta).
 


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3171).
% Happens(End(A),1).
% From E: 
% 
% happens(
%    end(a), 1).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3171).
observe(at(end(a),1)).

% Delta: 
% From E: 
% 
% directive(delta).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3171).
directive(delta).
 


% Happens(End(B),3).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3171).
% From E: 
% 
% happens(
%    end(b), 3).
observe(at(end(b),3)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3173).
% Delta: 
% From E: 
% 
% directive(delta).
directive(delta).
 


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3173).
% Happens(End(C1),5).
% From E: 
% 
% happens(
%    end(c1), 5).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3173).
observe(at(end(c1),5)).

% Delta: 
% From E: 
% 
% directive(delta).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3173).
directive(delta).
 


% Happens(End(C2),6).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3173).
% From E: 
% 
% happens(
%    end(c2), 6).
observe(at(end(c2),6)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3175).
% Delta: 
% From E: 
% 
% directive(delta).
directive(delta).
 


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3175).
% Happens(End(C3),7).
% From E: 
% 
% happens(
%    end(c3), 7).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3175).
observe(at(end(c3),7)).

% Delta: 
% From E: 
% 
% directive(delta).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3175).
directive(delta).
 


% Happens(End(D),9).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3175).
% From E: 
% 
% happens(
%    end(d), 9).
observe(at(end(d),9)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3177).
% Delta: 
% From E: 
% 
% directive(delta).
directive(delta).
 


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3177).
% Happens(End(E2),11).
% From E: 
% 
% happens(
%    end(e2), 11).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3177).
observe(at(end(e2),11)).

% Delta: 
% From E: 
% 
% directive(delta).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3177).
directive(delta).
 


% Happens(End(F),13).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3177).
% From E: 
% 
% happens(
%    end(f), 13).
observe(at(end(f),13)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3179).
% Delta: 
% From E: 
% 
% directive(delta).
directive(delta).
 


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3179).
% Happens(End(F),15).
% From E: 
% 
% happens(
%    end(f), 15).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3179).
observe(at(end(f),15)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3181).
%; Gamma
% [activity]
 % !HoldsAt(Active(activity),0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3183).
% From E: 
% 
% holds(
%    not(active(Activity)), 0).
initially(not(active(Activity))).


% [activity]
 % !HoldsAt(Completed(activity),0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3183).
% From E: 
% 
% holds(
%    not(completed(Activity)), 0).
initially(not(completed(Activity))).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3185).
% [time]
 % time=% 14 <-> HoldsAt(Condition(FC),time).
% From E: 
% 
% <->(
%    Time=14, 
%    holds(
%       condition(fc), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3185).
Time=14 <->
    at(condition(fc), Time).


% [time]
 % !HoldsAt(Condition(E1C),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3185).
% From E: 
% 
% holds(
%    not(condition(e1c)), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3185).
at(not(condition(e1c)),Time).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3187).
% [time]
 % time=% 10 <-> HoldsAt(Condition(E2C),time).
% From E: 
% 
% <->(
%    Time=10, 
%    holds(
%       condition(e2c), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3187).
Time=10 <->
    at(condition(e2c), Time).


% [time]
 % !HoldsAt(Condition(E3C),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3187).
% From E: 
% 
% holds(
%    not(condition(e3c)), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3187).
at(not(condition(e3c)),Time).

% completion Delta Happens
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3189).
% From E: 
% 
% ':-'(call_pel_directive(completion(delta))).
:- call_pel_directive(completion(delta)).
% From E: 
% 
% ':-'(call_pel_directive(completion(happens))).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3189).
:- call_pel_directive(completion(happens)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3192).
% range time 0 18
% From E: 
% 
% ':-'(call_pel_directive(range(time,0,18))).
:- call_pel_directive(range(time, 0, 18)).

% range offset 1 1
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3192).
% From E: 
% 
% ':-'(call_pel_directive(range(offset,1,1))).
:- call_pel_directive(range(offset, 1, 1)).
%; End of file.
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%; FILE: examples/Mueller2006/Chapter6/ThielscherCircuit1.e
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; @article{Thielscher:1997,
%;   author = "Michael Thielscher",
%;   year = "1997",
%;   title = "Ramification and causality",
%;   journal = "Artificial Intelligence",
%;   volume = "89",
%;   pages = "317--364",
%; }
%;
%; @book{Mueller:2006,
%;   author = "Erik T. Mueller",
%;   year = "2006",
%;   title = "Commonsense Reasoning",
%;   address = "San Francisco",
%;   publisher = "Morgan Kaufmann/Elsevier",
%; }
%;

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3230).
% load foundations/Root.e
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/Root.e'))).
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3230).
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/EC.e'))).
:- call_pel_directive(load('foundations/EC.e')).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3232).
% load foundations/ECCausal.e
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/ECCausal.e'))).
:- call_pel_directive(load('foundations/ECCausal.e')).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3234).
% sort switch
% From E: 
% 
% sort(switch).
sort(switch).

% sort relay
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3234).
% From E: 
% 
% sort(relay).
sort(relay).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3236).
% sort light
% From E: 
% 
% sort(light).
sort(light).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3238).
% switch S1, S2, S3
% From E: 
% 
% t(switch,s1).
isa(s1,switch).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3238).
% From E: 
% 
% t(switch,s2).
isa(s2,switch).
% From E: 
% 
% t(switch,s3).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3238).
isa(s3,switch).

% relay R
% From E: 
% 
% t(relay,r).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3238).
isa(r,relay).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3240).
% light L
% From E: 
% 
% t(light,l).
isa(l,light).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3242).
% event Light(light)
% From E: 
% 
% event(light(light)).
mpred_prop(light(light),event).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3242).
events([light/1]).

% event Close(switch)
% From E: 
% 
% event(close(switch)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3242).
mpred_prop(close(switch),event).
events([close/1]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3244).
% event Open(switch)
% From E: 
% 
% event(open(switch)).
mpred_prop(open(switch),event).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3244).
events([open/1]).

% event Activate(relay)
% From E: 
% 
% event(activate(relay)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3244).
mpred_prop(activate(relay),event).
events([activate/1]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3247).
% fluent Lit(light)
% From E: 
% 
% fluent(lit(light)).
mpred_prop(lit(light),fluent).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3247).
fluents([lit/1]).

% fluent Closed(switch)
% From E: 
% 
% fluent(closed(switch)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3247).
mpred_prop(closed(switch),fluent).
fluents([closed/1]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3249).
% fluent Activated(relay)
% From E: 
% 
% fluent(activated(relay)).
mpred_prop(activated(relay),fluent).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3249).
fluents([activated/1]).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3251).
% [time]
% Stopped(Lit(L),time) &
% Initiated(Closed(S1),time) &
% Initiated(Closed(S2),time) ->
% Happens(Light(L),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3251).
% From E: 
% 
% '->'(
%    ','(
%       stopped(
%          lit(l), 
%          Time), 
%       ','(
%          initiated(
%             closed(s1), 
%             Time), 
%          initiated(
%             closed(s2), 
%             Time))), 
%    happens(
%       light(l), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3251).
if(happens(light(l), Time),  (stopped(lit(l), Time), initiated(closed(s1), Time), initiated(closed(s2), Time))).


% [time]
% Started(Closed(S2),time) &
% Initiated(Activated(R),time) ->
% Happens(Open(S2),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3258).
% From E: 
% 
% '->'(
%    ','(
%       started(
%          closed(s2), 
%          Time), 
%       initiated(
%          activated(r), 
%          Time)), 
%    happens(
%       open(s2), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3258).
if(happens(open(s2), Time),  (started(closed(s2), Time), initiated(activated(r), Time))).


% [time]
% Stopped(Activated(R),time) &
% Initiated(Closed(S1),time) &
% Initiated(Closed(S3),time) ->
% Happens(Activate(R),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3263).
% From E: 
% 
% '->'(
%    ','(
%       stopped(
%          activated(r), 
%          Time), 
%       ','(
%          initiated(
%             closed(s1), 
%             Time), 
%          initiated(
%             closed(s3), 
%             Time))), 
%    happens(
%       activate(r), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3263).
if(happens(activate(r), Time),  (stopped(activated(r), Time), initiated(closed(s1), Time), initiated(closed(s3), Time))).


% [switch,time]
 % Initiates(Close(switch),Closed(switch),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3267).
% From E: 
% 
% initiates_at(
%    close(Switch), 
%    closed(Switch), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3267).
initiates(close(Switch),closed(Switch)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3269).
% [switch,time]
 % Terminates(Open(switch),Closed(switch),time).
% From E: 
% 
% terminates_at(
%    open(Switch), 
%    closed(Switch), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3269).
terminates(open(Switch),closed(Switch)).


% [relay,time]
 % Initiates(Activate(relay),Activated(relay),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3269).
% From E: 
% 
% initiates_at(
%    activate(Relay), 
%    activated(Relay), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3269).
initiates(activate(Relay),activated(Relay)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3271).
% [light,time]
 % Initiates(Light(light),Lit(light),time).
% From E: 
% 
% initiates_at(
%    light(Light), 
%    lit(Light), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3271).
initiates(light(Light),lit(Light)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3273).
% !HoldsAt(Closed(S1),0).
% From E: 
% 
% holds(
%    not(closed(s1)), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3273).
initially(not(closed(s1))).


% HoldsAt(Closed(S2),0).
% From E: 
% 
% holds(
%    closed(s2), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3273).
initially(closed(s2)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3275).
% HoldsAt(Closed(S3),0).
% From E: 
% 
% holds(
%    closed(s3), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3275).
initially(closed(s3)).


% !HoldsAt(Activated(R),0).
% From E: 
% 
% holds(
%    not(activated(r)), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3275).
initially(not(activated(r))).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3277).
% !HoldsAt(Lit(L),0).
% From E: 
% 
% holds(
%    not(lit(l)), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3277).
initially(not(lit(l))).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3279).
% Happens(Close(S1),0).
% From E: 
% 
% happens(
%    close(s1), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3279).
observe(at(close(s1),0)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3281).
% completion Happens
% From E: 
% 
% ':-'(call_pel_directive(completion(happens))).
:- call_pel_directive(completion(happens)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3283).
% range time 0 1
% From E: 
% 
% ':-'(call_pel_directive(range(time,0,1))).
:- call_pel_directive(range(time, 0, 1)).

% range offset 1 1
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3283).
% From E: 
% 
% ':-'(call_pel_directive(range(offset,1,1))).
:- call_pel_directive(range(offset, 1, 1)).
%; End of file.
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%; FILE: examples/Mueller2006/Chapter6/CarryingABook1.e
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; Example: Carrying a Book (Effect Axioms)
%;
%; @book{Mueller:2006,
%;   author = "Erik T. Mueller",
%;   year = "2006",
%;   title = "Commonsense Reasoning",
%;   address = "San Francisco",
%;   publisher = "Morgan Kaufmann/Elsevier",
%; }
%;
%;

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3315).
% option modeldiff on
% From E: 
% 
% ':-'(call_pel_directive(option(modeldiff,on))).
:- call_pel_directive(option(modeldiff, on)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3317).
% load foundations/Root.e
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/Root.e'))).
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3317).
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/EC.e'))).
:- call_pel_directive(load('foundations/EC.e')).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3320).
% sort object
% From E: 
% 
% sort(object).
sort(object).

% sort agent: object
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3320).
% From E: 
% 
% subsort(agent,object).
subsort(agent,object).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3322).
% sort room
% From E: 
% 
% sort(room).
sort(room).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3324).
% object Book
% From E: 
% 
% t(object,book).
isa(book,object).

% agent Nathan
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3324).
% From E: 
% 
% t(agent,nathan).
isa(nathan,agent).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3326).
% room LivingRoom, Kitchen
% From E: 
% 
% t(room,livingRoom).
isa(livingRoom,room).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3326).
% From E: 
% 
% t(room,kitchen).
isa(kitchen,room).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3328).
% event LetGoOf(agent,object)
% From E: 
% 
% event(letGoOf(agent,object)).
events([letGoOf/2]).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3328).
mpred_prop(letGoOf(agent,object),action).
actions([letGoOf/2]).

% event PickUp(agent,object)
% From E: 
% 
% event(pickUp(agent,object)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3328).
events([pickUp/2]).
mpred_prop(pickUp(agent,object),action).
actions([pickUp/2]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3330).
% event Walk(agent,room,room)
% From E: 
% 
% event(walk(agent,room,room)).
events([walk/3]).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3330).
mpred_prop(walk(agent,room,room),action).
actions([walk/3]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3332).
% fluent InRoom(object,room)
% From E: 
% 
% fluent(inRoom(object,room)).
mpred_prop(inRoom(object,room),fluent).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3332).
fluents([inRoom/2]).

% fluent Holding(agent,object)
% From E: 
% 
% fluent(holding(agent,object)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3332).
mpred_prop(holding(agent,object),fluent).
fluents([holding/2]).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3335).
%; Sigma
% [agent,room1,room2,time]
% Initiates(Walk(agent,room1,room2),InRoom(agent,room2),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3337).
% From E: 
% 
% initiates_at(
%    walk(Agent,Room1,Room2), 
%    inRoom(Agent,Room2), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3337).
initiates(walk(Agent,Room1,Room2),
	  inRoom(Agent,Room2)).


% [agent,room1,room2,time]
% room1!=% room2 ->
% Terminates(Walk(agent,room1,room2),InRoom(agent,room1),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3341).
% From E: 
% 
% '->'(
%    Room1\=Room2, 
%    terminates_at(
%       walk(Agent,Room1,Room2), 
%       inRoom(Agent,Room1), 
%       Time)).
if(terminates(walk(Agent,Room1,Room2),
	      at(inRoom(Agent,Room1),Time)),
   {dif(Room1,Room2)}).


% [agent,object,room,time]
% HoldsAt(InRoom(agent,room),time) &
% HoldsAt(InRoom(object,room),time) ->
% Initiates(PickUp(agent,object),Holding(agent,object),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3345).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          inRoom(Agent,Room), 
%          Time), 
%       holds(
%          inRoom(Object,Room), 
%          Time)), 
%    initiates_at(
%       pickUp(Agent,Object), 
%       holding(Agent,Object), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3345).
if(initiates(pickUp(Agent, Object), at(holding(Agent, Object), Time)),  (at(inRoom(Agent, Room), Time), at(inRoom(Object, Room), Time))).


% [agent,object,time]
% HoldsAt(Holding(agent,object),time) ->
% Terminates(LetGoOf(agent,object),Holding(agent,object),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3350).
% From E: 
% 
% '->'(
%    holds(
%       holding(Agent,Object), 
%       Time), 
%    terminates_at(
%       letGoOf(Agent,Object), 
%       holding(Agent,Object), 
%       Time)).
if(terminates(letGoOf(Agent,Object),
	      at(holding(Agent,Object),Time)),
   at(holding(Agent,Object),Time)).


% [agent,object,room1,room2,time]
% HoldsAt(Holding(agent,object),time) ->
% Initiates(Walk(agent,room1,room2),InRoom(object,room2),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3354).
% From E: 
% 
% '->'(
%    holds(
%       holding(Agent,Object), 
%       Time), 
%    initiates_at(
%       walk(Agent,Room1,Room2), 
%       inRoom(Object,Room2), 
%       Time)).
if(initiates(walk(Agent,Room1,Room2),
	     at(inRoom(Object,Room2),Time)),
   at(holding(Agent,Object),Time)).


% [agent,object,room1,room2,time]
% HoldsAt(Holding(agent,object),time) &
% room1!=room2 ->
% Terminates(Walk(agent,room1,room2),InRoom(object,room1),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3358).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          holding(Agent,Object), 
%          Time), 
%       Room1\=Room2), 
%    terminates_at(
%       walk(Agent,Room1,Room2), 
%       inRoom(Object,Room1), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3358).
if(terminates(walk(Agent, Room1, Room2), at(inRoom(Object, Room1), Time)),  (at(holding(Agent, Object), Time), {dif(Room1, Room2)})).


%; Delta


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3364).
% Happens(PickUp(Nathan,Book),0).
% From E: 
% 
% happens(
%    pickUp(nathan,book), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3364).
observe(at(pickUp(nathan,book),0)).


% Happens(Walk(Nathan,LivingRoom,Kitchen),1).
% From E: 
% 
% happens(
%    walk(nathan,livingRoom,kitchen), 1).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3364).
observe(at(walk(nathan,livingRoom,kitchen),1)).


%; Psi
% [object,room1,room2,time]
% HoldsAt(InRoom(object,room1),time) &
% HoldsAt(InRoom(object,room2),time) ->
% room1=room2.
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3369).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          inRoom(Object,Room1), 
%          Time), 
%       holds(
%          inRoom(Object,Room2), 
%          Time)), 
%    Room1=Room2).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3369).
if(equals(Room1, Room2),  (at(inRoom(Object, Room1), Time), at(inRoom(Object, Room2), Time))).


%; Gamma


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3376).
% HoldsAt(InRoom(Nathan,LivingRoom),0).
% From E: 
% 
% holds(
%    inRoom(nathan,livingRoom), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3376).
initially(inRoom(nathan,livingRoom)).


% HoldsAt(InRoom(Book,LivingRoom),0).
% From E: 
% 
% holds(
%    inRoom(book,livingRoom), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3376).
initially(inRoom(book,livingRoom)).


%; added:


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3380).
% !HoldsAt(Holding(Nathan,Book),0).
% From E: 
% 
% holds(
%    not(holding(nathan,book)), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3380).
initially(not(holding(nathan,book))).


% [agent,time]
 % !HoldsAt(Holding(agent,agent),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3380).
% From E: 
% 
% holds(
%    not(holding(Agent,Agent)), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3380).
at(not(holding(Agent,Agent)),Time).

% completion Happens
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3382).
% From E: 
% 
% ':-'(call_pel_directive(completion(happens))).
:- call_pel_directive(completion(happens)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3385).
% range time 0 2
% From E: 
% 
% ':-'(call_pel_directive(range(time,0,2))).
:- call_pel_directive(range(time, 0, 2)).

% range offset 1 1
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3385).
% From E: 
% 
% ':-'(call_pel_directive(range(offset,1,1))).
:- call_pel_directive(range(offset, 1, 1)).
%; End of file.
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%; FILE: examples/Mueller2006/Chapter6/ThielscherCircuit2.e
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; @article{Thielscher:1997,
%;   author = "Michael Thielscher",
%;   year = "1997",
%;   title = "Ramification and causality",
%;   journal = "Artificial Intelligence",
%;   volume = "89",
%;   pages = "317--364",
%; }
%;
%; @book{Mueller:2006,
%;   author = "Erik T. Mueller",
%;   year = "2006",
%;   title = "Commonsense Reasoning",
%;   address = "San Francisco",
%;   publisher = "Morgan Kaufmann/Elsevier",
%; }
%;

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3423).
% load foundations/Root.e
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/Root.e'))).
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3423).
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/EC.e'))).
:- call_pel_directive(load('foundations/EC.e')).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3426).
% sort switch
% From E: 
% 
% sort(switch).
sort(switch).

% sort relay
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3426).
% From E: 
% 
% sort(relay).
sort(relay).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3428).
% sort light
% From E: 
% 
% sort(light).
sort(light).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3430).
% switch S1, S2, S3
% From E: 
% 
% t(switch,s1).
isa(s1,switch).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3430).
% From E: 
% 
% t(switch,s2).
isa(s2,switch).
% From E: 
% 
% t(switch,s3).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3430).
isa(s3,switch).

% relay R
% From E: 
% 
% t(relay,r).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3430).
isa(r,relay).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3432).
% light L
% From E: 
% 
% t(light,l).
isa(l,light).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3434).
% event Light(light)
% From E: 
% 
% event(light(light)).
mpred_prop(light(light),event).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3434).
events([light/1]).

% event Unlight(light)
% From E: 
% 
% event(unlight(light)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3434).
mpred_prop(unlight(light),event).
events([unlight/1]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3436).
% event Close(switch)
% From E: 
% 
% event(close(switch)).
mpred_prop(close(switch),event).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3436).
events([close/1]).

% event Open(switch)
% From E: 
% 
% event(open(switch)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3436).
mpred_prop(open(switch),event).
events([open/1]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3438).
% event Activate(relay)
% From E: 
% 
% event(activate(relay)).
mpred_prop(activate(relay),event).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3438).
events([activate/1]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3440).
% fluent Lit(light)
% From E: 
% 
% fluent(lit(light)).
mpred_prop(lit(light),fluent).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3440).
fluents([lit/1]).

% fluent Closed(switch)
% From E: 
% 
% fluent(closed(switch)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3440).
mpred_prop(closed(switch),fluent).
fluents([closed/1]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3442).
% fluent Activated(relay)
% From E: 
% 
% fluent(activated(relay)).
mpred_prop(activated(relay),fluent).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3442).
fluents([activated/1]).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3444).
% [time]
% !HoldsAt(Lit(L),time) &
% HoldsAt(Closed(S1),time) &
% HoldsAt(Closed(S2),time) ->
% Happens(Light(L),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3444).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          not(lit(l)), 
%          Time), 
%       ','(
%          holds(
%             closed(s1), 
%             Time), 
%          holds(
%             closed(s2), 
%             Time))), 
%    happens(
%       light(l), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3444).
if(happens(light(l), Time),  (at(not(lit(l)), Time), at(closed(s1), Time), at(closed(s2), Time))).


% [time]
% HoldsAt(Lit(L),time) &
% (!HoldsAt(Closed(S1),time) | !HoldsAt(Closed(S2),time)) ->
% Happens(Unlight(L),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3451).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          lit(l), 
%          Time), 
%       ';'(
%          holds(
%             not(closed(s1)), 
%             Time), 
%          holds(
%             not(closed(s2)), 
%             Time))), 
%    happens(
%       unlight(l), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3451).
if(happens(unlight(l), Time),  (at(lit(l), Time), (at(not(closed(s1)), Time);at(not(closed(s2)), Time)))).


% [time]
% HoldsAt(Closed(S2),time) &
% HoldsAt(Activated(R),time) ->
% Happens(Open(S2),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3456).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          closed(s2), 
%          Time), 
%       holds(
%          activated(r), 
%          Time)), 
%    happens(
%       open(s2), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3456).
if(happens(open(s2), Time),  (at(closed(s2), Time), at(activated(r), Time))).


% [time]
% !HoldsAt(Activated(R),time) &
% HoldsAt(Closed(S1),time) &
% HoldsAt(Closed(S3),time) ->
% Happens(Activate(R),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3461).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          not(activated(r)), 
%          Time), 
%       ','(
%          holds(
%             closed(s1), 
%             Time), 
%          holds(
%             closed(s3), 
%             Time))), 
%    happens(
%       activate(r), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3461).
if(happens(activate(r), Time),  (at(not(activated(r)), Time), at(closed(s1), Time), at(closed(s3), Time))).


% [switch,time]
 % Initiates(Close(switch),Closed(switch),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3465).
% From E: 
% 
% initiates_at(
%    close(Switch), 
%    closed(Switch), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3465).
initiates(close(Switch),closed(Switch)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3467).
% [switch,time]
 % Terminates(Open(switch),Closed(switch),time).
% From E: 
% 
% terminates_at(
%    open(Switch), 
%    closed(Switch), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3467).
terminates(open(Switch),closed(Switch)).


% [relay,time]
 % Initiates(Activate(relay),Activated(relay),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3467).
% From E: 
% 
% initiates_at(
%    activate(Relay), 
%    activated(Relay), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3467).
initiates(activate(Relay),activated(Relay)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3469).
% [light,time]
 % Initiates(Light(light),Lit(light),time).
% From E: 
% 
% initiates_at(
%    light(Light), 
%    lit(Light), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3469).
initiates(light(Light),lit(Light)).


% [light,time]
 % Terminates(Unlight(light),Lit(light),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3469).
% From E: 
% 
% terminates_at(
%    unlight(Light), 
%    lit(Light), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3469).
terminates(unlight(Light),lit(Light)).


% !HoldsAt(Closed(S1),0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3471).
% From E: 
% 
% holds(
%    not(closed(s1)), 0).
initially(not(closed(s1))).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3473).
% HoldsAt(Closed(S2),0).
% From E: 
% 
% holds(
%    closed(s2), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3473).
initially(closed(s2)).


% HoldsAt(Closed(S3),0).
% From E: 
% 
% holds(
%    closed(s3), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3473).
initially(closed(s3)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3475).
% !HoldsAt(Activated(R),0).
% From E: 
% 
% holds(
%    not(activated(r)), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3475).
initially(not(activated(r))).


% !HoldsAt(Lit(L),0).
% From E: 
% 
% holds(
%    not(lit(l)), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3475).
initially(not(lit(l))).


% Happens(Close(S1),0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3477).
% From E: 
% 
% happens(
%    close(s1), 0).
observe(at(close(s1),0)).

% completion Happens
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3479).
% From E: 
% 
% ':-'(call_pel_directive(completion(happens))).
:- call_pel_directive(completion(happens)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3482).
% range time 0 4
% From E: 
% 
% ':-'(call_pel_directive(range(time,0,4))).
:- call_pel_directive(range(time, 0, 4)).

% range offset 1 1
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3482).
% From E: 
% 
% ':-'(call_pel_directive(range(offset,1,1))).
:- call_pel_directive(range(offset, 1, 1)).
%; End of file.
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%; FILE: examples/Mueller2006/Chapter6/ShanahanCircuit.e
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; @inproceedings{Shanahan:1999a,
%;   author = "Murray Shanahan",
%;   year = "1999",
%;   title = "The ramification problem in the event calculus",
%;   booktitle = "\uppercase{P}roceedings of the \uppercase{S}ixteenth \uppercase{I}nternational \uppercase{J}oint \uppercase{C}onference on \uppercase{A}rtificial \uppercase{I}ntelligence",
%;   pages = "140--146",
%;   address = "San Mateo, CA",
%;   publisher = "Morgan Kaufmann",
%; }
%;
%; @book{Mueller:2006,
%;   author = "Erik T. Mueller",
%;   year = "2006",
%;   title = "Commonsense Reasoning",
%;   address = "San Francisco",
%;   publisher = "Morgan Kaufmann/Elsevier",
%; }
%;

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3521).
% load foundations/Root.e
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/Root.e'))).
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3521).
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/EC.e'))).
:- call_pel_directive(load('foundations/EC.e')).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3524).
% sort switch
% From E: 
% 
% sort(switch).
sort(switch).

% sort relay
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3524).
% From E: 
% 
% sort(relay).
sort(relay).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3526).
% sort light
% From E: 
% 
% sort(light).
sort(light).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3528).
% switch S1, S2, S3
% From E: 
% 
% t(switch,s1).
isa(s1,switch).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3528).
% From E: 
% 
% t(switch,s2).
isa(s2,switch).
% From E: 
% 
% t(switch,s3).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3528).
isa(s3,switch).

% relay R
% From E: 
% 
% t(relay,r).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3528).
isa(r,relay).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3530).
% light L
% From E: 
% 
% t(light,l).
isa(l,light).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3532).
% event Light(light)
% From E: 
% 
% event(light(light)).
mpred_prop(light(light),event).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3532).
events([light/1]).

% event Unlight(light)
% From E: 
% 
% event(unlight(light)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3532).
mpred_prop(unlight(light),event).
events([unlight/1]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3534).
% event Close(switch)
% From E: 
% 
% event(close(switch)).
mpred_prop(close(switch),event).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3534).
events([close/1]).

% event Open(switch)
% From E: 
% 
% event(open(switch)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3534).
mpred_prop(open(switch),event).
events([open/1]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3536).
% event Activate(relay)
% From E: 
% 
% event(activate(relay)).
mpred_prop(activate(relay),event).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3536).
events([activate/1]).

% event Deactivate(relay)
% From E: 
% 
% event(deactivate(relay)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3536).
mpred_prop(deactivate(relay),event).
events([deactivate/1]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3539).
% fluent Lit(light)
% From E: 
% 
% fluent(lit(light)).
mpred_prop(lit(light),fluent).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3539).
fluents([lit/1]).

% fluent Closed(switch)
% From E: 
% 
% fluent(closed(switch)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3539).
mpred_prop(closed(switch),fluent).
fluents([closed/1]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3541).
% fluent Activated(relay)
% From E: 
% 
% fluent(activated(relay)).
mpred_prop(activated(relay),fluent).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3541).
fluents([activated/1]).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3543).
% [time]
% !HoldsAt(Lit(L),time) &
% HoldsAt(Closed(S1),time) &
% HoldsAt(Closed(S2),time) ->
% Happens(Light(L),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3543).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          not(lit(l)), 
%          Time), 
%       ','(
%          holds(
%             closed(s1), 
%             Time), 
%          holds(
%             closed(s2), 
%             Time))), 
%    happens(
%       light(l), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3543).
if(happens(light(l), Time),  (at(not(lit(l)), Time), at(closed(s1), Time), at(closed(s2), Time))).


% [time]
% HoldsAt(Lit(L),time) &
% (!HoldsAt(Closed(S1),time) | !HoldsAt(Closed(S2),time)) ->
% Happens(Unlight(L),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3550).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          lit(l), 
%          Time), 
%       ';'(
%          holds(
%             not(closed(s1)), 
%             Time), 
%          holds(
%             not(closed(s2)), 
%             Time))), 
%    happens(
%       unlight(l), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3550).
if(happens(unlight(l), Time),  (at(lit(l), Time), (at(not(closed(s1)), Time);at(not(closed(s2)), Time)))).


% [time]
% HoldsAt(Closed(S2),time) &
% HoldsAt(Activated(R),time) ->
% Happens(Open(S2),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3555).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          closed(s2), 
%          Time), 
%       holds(
%          activated(r), 
%          Time)), 
%    happens(
%       open(s2), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3555).
if(happens(open(s2), Time),  (at(closed(s2), Time), at(activated(r), Time))).


% [time]
% !HoldsAt(Activated(R),time) &
% HoldsAt(Closed(S1),time) &
% HoldsAt(Closed(S2),time) &
% HoldsAt(Closed(S3),time) ->
% Happens(Activate(R),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3560).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          not(activated(r)), 
%          Time), 
%       ','(
%          holds(
%             closed(s1), 
%             Time), 
%          ','(
%             holds(
%                closed(s2), 
%                Time), 
%             holds(
%                closed(s3), 
%                Time)))), 
%    happens(
%       activate(r), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3560).
if(happens(activate(r), Time),  (at(not(activated(r)), Time), at(closed(s1), Time), at(closed(s2), Time), at(closed(s3), Time))).


% [time]
% HoldsAt(Activated(R),time) &
% (!HoldsAt(Closed(S1),time) |
%  !HoldsAt(Closed(S2),time) |
%  !HoldsAt(Closed(S3),time)) ->
% Happens(Deactivate(R),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3567).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          activated(r), 
%          Time), 
%       ';'(
%          holds(
%             not(closed(s1)), 
%             Time), 
%          ';'(
%             holds(
%                not(closed(s2)), 
%                Time), 
%             holds(
%                not(closed(s3)), 
%                Time)))), 
%    happens(
%       deactivate(r), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3567).
if(happens(deactivate(r), Time),  (at(activated(r), Time), (at(not(closed(s1)), Time);at(not(closed(s2)), Time);at(not(closed(s3)), Time)))).


% [switch,time]
 % Initiates(Close(switch),Closed(switch),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3572).
% From E: 
% 
% initiates_at(
%    close(Switch), 
%    closed(Switch), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3572).
initiates(close(Switch),closed(Switch)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3574).
% [switch,time]
 % Terminates(Open(switch),Closed(switch),time).
% From E: 
% 
% terminates_at(
%    open(Switch), 
%    closed(Switch), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3574).
terminates(open(Switch),closed(Switch)).


% [relay,time]
 % Initiates(Activate(relay),Activated(relay),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3574).
% From E: 
% 
% initiates_at(
%    activate(Relay), 
%    activated(Relay), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3574).
initiates(activate(Relay),activated(Relay)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3576).
% [relay,time]
 % Terminates(Deactivate(relay),Activated(relay),time).
% From E: 
% 
% terminates_at(
%    deactivate(Relay), 
%    activated(Relay), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3576).
terminates(deactivate(Relay),activated(Relay)).


% [light,time]
 % Initiates(Light(light),Lit(light),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3576).
% From E: 
% 
% initiates_at(
%    light(Light), 
%    lit(Light), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3576).
initiates(light(Light),lit(Light)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3578).
% [light,time]
 % Terminates(Unlight(light),Lit(light),time).
% From E: 
% 
% terminates_at(
%    unlight(Light), 
%    lit(Light), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3578).
terminates(unlight(Light),lit(Light)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3580).
% !HoldsAt(Closed(S1),0).
% From E: 
% 
% holds(
%    not(closed(s1)), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3580).
initially(not(closed(s1))).


% HoldsAt(Closed(S2),0).
% From E: 
% 
% holds(
%    closed(s2), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3580).
initially(closed(s2)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3582).
% HoldsAt(Closed(S3),0).
% From E: 
% 
% holds(
%    closed(s3), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3582).
initially(closed(s3)).


% !HoldsAt(Activated(R),0).
% From E: 
% 
% holds(
%    not(activated(r)), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3582).
initially(not(activated(r))).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3584).
% !HoldsAt(Lit(L),0).
% From E: 
% 
% holds(
%    not(lit(l)), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3584).
initially(not(lit(l))).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3586).
% Happens(Close(S1),0).
% From E: 
% 
% happens(
%    close(s1), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3586).
observe(at(close(s1),0)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3588).
% completion Happens
% From E: 
% 
% ':-'(call_pel_directive(completion(happens))).
:- call_pel_directive(completion(happens)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3590).
% range time 0 4
% From E: 
% 
% ':-'(call_pel_directive(range(time,0,4))).
:- call_pel_directive(range(time, 0, 4)).

% range offset 1 1
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3590).
% From E: 
% 
% ':-'(call_pel_directive(range(offset,1,1))).
:- call_pel_directive(range(offset, 1, 1)).
%; End of file.
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%; FILE: examples/Mueller2006/Chapter6/CarryingABook2.e
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; Example: Carrying a Book (Release Axioms and State Constraints)
%;
%; @book{Mueller:2006,
%;   author = "Erik T. Mueller",
%;   year = "2006",
%;   title = "Commonsense Reasoning",
%;   address = "San Francisco",
%;   publisher = "Morgan Kaufmann/Elsevier",
%; }
%;

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3621).
% load foundations/Root.e
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/Root.e'))).
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3621).
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/EC.e'))).
:- call_pel_directive(load('foundations/EC.e')).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3624).
% sort object
% From E: 
% 
% sort(object).
sort(object).

% sort agent: object
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3624).
% From E: 
% 
% subsort(agent,object).
subsort(agent,object).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3626).
% sort room
% From E: 
% 
% sort(room).
sort(room).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3628).
% object Book
% From E: 
% 
% t(object,book).
isa(book,object).

% agent Nathan
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3628).
% From E: 
% 
% t(agent,nathan).
isa(nathan,agent).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3630).
% room LivingRoom, Kitchen
% From E: 
% 
% t(room,livingRoom).
isa(livingRoom,room).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3630).
% From E: 
% 
% t(room,kitchen).
isa(kitchen,room).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3632).
% event LetGoOf(agent,object)
% From E: 
% 
% event(letGoOf(agent,object)).
events([letGoOf/2]).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3632).
mpred_prop(letGoOf(agent,object),action).
actions([letGoOf/2]).

% event PickUp(agent,object)
% From E: 
% 
% event(pickUp(agent,object)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3632).
events([pickUp/2]).
mpred_prop(pickUp(agent,object),action).
actions([pickUp/2]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3634).
% event Walk(agent,room,room)
% From E: 
% 
% event(walk(agent,room,room)).
events([walk/3]).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3634).
mpred_prop(walk(agent,room,room),action).
actions([walk/3]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3636).
% fluent InRoom(object,room)
% From E: 
% 
% fluent(inRoom(object,room)).
mpred_prop(inRoom(object,room),fluent).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3636).
fluents([inRoom/2]).

% fluent Holding(agent,object)
% From E: 
% 
% fluent(holding(agent,object)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3636).
mpred_prop(holding(agent,object),fluent).
fluents([holding/2]).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3639).
%; Sigma
% [agent,room1,room2,time]
% Initiates(Walk(agent,room1,room2),InRoom(agent,room2),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3641).
% From E: 
% 
% initiates_at(
%    walk(Agent,Room1,Room2), 
%    inRoom(Agent,Room2), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3641).
initiates(walk(Agent,Room1,Room2),
	  inRoom(Agent,Room2)).


% [agent,room1,room2,time]
% room1!=% room2 ->
% Terminates(Walk(agent,room1,room2),InRoom(agent,room1),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3645).
% From E: 
% 
% '->'(
%    Room1\=Room2, 
%    terminates_at(
%       walk(Agent,Room1,Room2), 
%       inRoom(Agent,Room1), 
%       Time)).
if(terminates(walk(Agent,Room1,Room2),
	      at(inRoom(Agent,Room1),Time)),
   {dif(Room1,Room2)}).


% [agent,object,room,time]
% HoldsAt(InRoom(agent,room),time) &
% HoldsAt(InRoom(object,room),time) ->
% Initiates(PickUp(agent,object),Holding(agent,object),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3649).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          inRoom(Agent,Room), 
%          Time), 
%       holds(
%          inRoom(Object,Room), 
%          Time)), 
%    initiates_at(
%       pickUp(Agent,Object), 
%       holding(Agent,Object), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3649).
if(initiates(pickUp(Agent, Object), at(holding(Agent, Object), Time)),  (at(inRoom(Agent, Room), Time), at(inRoom(Object, Room), Time))).


% [agent,object,time]
% HoldsAt(Holding(agent,object),time) ->
% Terminates(LetGoOf(agent,object),Holding(agent,object),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3654).
% From E: 
% 
% '->'(
%    holds(
%       holding(Agent,Object), 
%       Time), 
%    terminates_at(
%       letGoOf(Agent,Object), 
%       holding(Agent,Object), 
%       Time)).
if(terminates(letGoOf(Agent,Object),
	      at(holding(Agent,Object),Time)),
   at(holding(Agent,Object),Time)).


% [agent,object,room,time]
% Releases(PickUp(agent,object),InRoom(object,room),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3658).
% From E: 
% 
% releases_at(
%    pickUp(Agent,Object), 
%    inRoom(Object,Room), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3658).
releases(pickUp(Agent,Object),
	 inRoom(Object,Room)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3660).
% [agent,object,room,time]
% HoldsAt(InRoom(agent,room),time) ->
% Initiates(LetGoOf(agent,object),InRoom(object,room),time).
% From E: 
% 
% '->'(
%    holds(
%       inRoom(Agent,Room), 
%       Time), 
%    initiates_at(
%       letGoOf(Agent,Object), 
%       inRoom(Object,Room), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3660).
if(initiates(letGoOf(Agent,Object),
	     at(inRoom(Object,Room),Time)),
   at(inRoom(Agent,Room),Time)).


%; Delta


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3666).
% Happens(PickUp(Nathan,Book),0).
% From E: 
% 
% happens(
%    pickUp(nathan,book), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3666).
observe(at(pickUp(nathan,book),0)).


% Happens(Walk(Nathan,LivingRoom,Kitchen),1).
% From E: 
% 
% happens(
%    walk(nathan,livingRoom,kitchen), 1).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3666).
observe(at(walk(nathan,livingRoom,kitchen),1)).


%; Psi
% [object,room1,room2,time]
% HoldsAt(InRoom(object,room1),time) &
% HoldsAt(InRoom(object,room2),time) ->
% room1=room2.
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3671).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          inRoom(Object,Room1), 
%          Time), 
%       holds(
%          inRoom(Object,Room2), 
%          Time)), 
%    Room1=Room2).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3671).
if(equals(Room1, Room2),  (at(inRoom(Object, Room1), Time), at(inRoom(Object, Room2), Time))).


% [agent,object,room,time]
% HoldsAt(Holding(agent,object),time) &
% HoldsAt(InRoom(agent,room),time) ->
% HoldsAt(InRoom(object,room),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3677).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          holding(Agent,Object), 
%          Time), 
%       holds(
%          inRoom(Agent,Room), 
%          Time)), 
%    holds(
%       inRoom(Object,Room), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3677).
if(at(inRoom(Object, Room), Time),  (at(holding(Agent, Object), Time), at(inRoom(Agent, Room), Time))).


%; Gamma


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3683).
% HoldsAt(InRoom(Nathan,LivingRoom),0).
% From E: 
% 
% holds(
%    inRoom(nathan,livingRoom), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3683).
initially(inRoom(nathan,livingRoom)).


% HoldsAt(InRoom(Book,LivingRoom),0).
% From E: 
% 
% holds(
%    inRoom(book,livingRoom), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3683).
initially(inRoom(book,livingRoom)).


%; added:


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3687).
% !HoldsAt(Holding(Nathan,Book),0).
% From E: 
% 
% holds(
%    not(holding(nathan,book)), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3687).
initially(not(holding(nathan,book))).


% [agent,time]
 % !HoldsAt(Holding(agent,agent),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3687).
% From E: 
% 
% holds(
%    not(holding(Agent,Agent)), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3687).
at(not(holding(Agent,Agent)),Time).

% completion Happens
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3689).
% From E: 
% 
% ':-'(call_pel_directive(completion(happens))).
:- call_pel_directive(completion(happens)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3692).
% range time 0 2
% From E: 
% 
% ':-'(call_pel_directive(range(time,0,2))).
:- call_pel_directive(range(time, 0, 2)).

% range offset 1 1
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3692).
% From E: 
% 
% ':-'(call_pel_directive(range(offset,1,1))).
:- call_pel_directive(range(offset, 1, 1)).
%; End of file.
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%; FILE: examples/Mueller2006/Chapter7/HotAirBalloon.e
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; @article{MillerShanahan:1999,
%;   author = "Rob Miller and Murray Shanahan",
%;   year = "1999",
%;   title = "The event calculus in classical logic---\uppercase{A}lternative axiomatisations",
%;   journal = "Link{\"{o}}ping Electronic Articles in Computer and Information Science",
%;   volume = "4",
%;   number = "016",
%; }
%;
%; @book{Mueller:2006,
%;   author = "Erik T. Mueller",
%;   year = "2006",
%;   title = "Commonsense Reasoning",
%;   address = "San Francisco",
%;   publisher = "Morgan Kaufmann/Elsevier",
%; }
%;

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3730).
% option encoding 3
% From E: 
% 
% ':-'(call_pel_directive(option(encoding,3))).
:- call_pel_directive(option(encoding, 3)).

% option trajectory on
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3730).
% From E: 
% 
% ':-'(call_pel_directive(option(trajectory,on))).
:- call_pel_directive(option(trajectory, on)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3733).
% load foundations/Root.e
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/Root.e'))).
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3733).
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/EC.e'))).
:- call_pel_directive(load('foundations/EC.e')).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3736).
% sort balloon
% From E: 
% 
% sort(balloon).
sort(balloon).

% sort agent
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3736).
% From E: 
% 
% sort(agent).
sort(agent).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3738).
% sort height: integer
% From E: 
% 
% subsort(height,integer).
subsort(height,integer).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3740).
% agent Nathan
% From E: 
% 
% t(agent,nathan).
isa(nathan,agent).

% balloon Balloon
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3740).
% From E: 
% 
% t(balloon,balloon).
isa(balloon,balloon).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3743).
% fluent HeaterOn(balloon)
% From E: 
% 
% fluent(heaterOn(balloon)).
mpred_prop(heaterOn(balloon),fluent).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3743).
fluents([heaterOn/1]).

% fluent Height(balloon,height)
% From E: 
% 
% fluent(height(balloon,height)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3743).
mpred_prop(height(balloon,height),fluent).
fluents([height/2]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3745).
% noninertial Height
% From E: 
% 
% ':-'(call_pel_directive(noninertial(height))).
:- call_pel_directive(noninertial(height)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3747).
% event TurnOnHeater(agent,balloon)
% From E: 
% 
% event(turnOnHeater(agent,balloon)).
events([turnOnHeater/2]).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3747).
mpred_prop(turnOnHeater(agent,balloon),action).
actions([turnOnHeater/2]).

% event TurnOffHeater(agent,balloon)
% From E: 
% 
% event(turnOffHeater(agent,balloon)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3747).
events([turnOffHeater/2]).
mpred_prop(turnOffHeater(agent,balloon),action).
actions([turnOffHeater/2]).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3750).
%; Sigma
% [agent,balloon,time]
% Initiates(TurnOnHeater(agent,balloon),HeaterOn(balloon),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3752).
% From E: 
% 
% initiates_at(
%    turnOnHeater(Agent,Balloon), 
%    heaterOn(Balloon), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3752).
initiates(turnOnHeater(Agent,Balloon),
	  heaterOn(Balloon)).


% [agent,balloon,time]
% Terminates(TurnOffHeater(agent,balloon),HeaterOn(balloon),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3756).
% From E: 
% 
% terminates_at(
%    turnOffHeater(Agent,Balloon), 
%    heaterOn(Balloon), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3756).
terminates(turnOffHeater(Agent,Balloon),
	   heaterOn(Balloon)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3758).
%; Delta

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3760).
% Delta: 
% From E: 
% 
% directive(delta).
directive(delta).
 


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3760).
% Happens(TurnOnHeater(Nathan,Balloon),0).
% From E: 
% 
% happens(
%    turnOnHeater(nathan,balloon), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3760).
observe(at(turnOnHeater(nathan,balloon),0)).

% Delta: 
% From E: 
% 
% directive(delta).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3760).
directive(delta).
 


% Happens(TurnOffHeater(Nathan,Balloon),2).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3760).
% From E: 
% 
% happens(
%    turnOffHeater(nathan,balloon), 2).
observe(at(turnOffHeater(nathan,balloon),2)).


%; Psi
% [balloon,height1,height2,time]
% HoldsAt(Height(balloon,height1),time) &
% HoldsAt(Height(balloon,height2),time) ->
% height1=height2.
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3765).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          height(Balloon,Height1), 
%          Time), 
%       holds(
%          height(Balloon,Height2), 
%          Time)), 
%    Height1=Height2).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3765).
if(equals(Height1, Height2),  (at(height(Balloon, Height1), Time), at(height(Balloon, Height2), Time))).


%; Pi
% [balloon,height1,height2,offset,time]
% HoldsAt(Height(balloon,height1),time) &
% height2 = (height1 + offset) ->
% Trajectory(HeaterOn(balloon),time,Height(balloon,height2),offset).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3772).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          height(Balloon,Height1), 
%          Time), 
%       Height2=Height1+Offset), 
%    trajectory(
%       heaterOn(Balloon), 
%       Time, 
%       height(Balloon,Height2), 
%       Offset)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3772).
if(trajectory(heaterOn(Balloon), Time, height(Balloon, Height2), Offset),  (at(height(Balloon, Height1), Time), equals(Height2, Height1+Offset))).


% [balloon,height1,height2,offset,time]
% HoldsAt(Height(balloon,height1),time) &
% height2 = (height1 - offset) ->
% AntiTrajectory(HeaterOn(balloon),time,Height(balloon,height2),offset).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3778).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          height(Balloon,Height1), 
%          Time), 
%       Height2=Height1-Offset), 
%    antiTrajectory(
%       heaterOn(Balloon), 
%       Time, 
%       height(Balloon,Height2), 
%       Offset)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3778).
if(antiTrajectory(heaterOn(Balloon), Time, height(Balloon, Height2), Offset),  (at(height(Balloon, Height1), Time), equals(Height2, Height1-Offset))).


%; Gamma


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3784).
% HoldsAt(Height(Balloon,0),0).
% From E: 
% 
% holds(
%    height(balloon,0), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3784).
initially(height(balloon,0)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3786).
%; added:


% !HoldsAt(HeaterOn(Balloon),0).
% From E: 
% 
% holds(
%    not(heaterOn(balloon)), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3786).
initially(not(heaterOn(balloon))).

% completion Delta Happens
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3788).
% From E: 
% 
% ':-'(call_pel_directive(completion(delta))).
:- call_pel_directive(completion(delta)).
% From E: 
% 
% ':-'(call_pel_directive(completion(happens))).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3788).
:- call_pel_directive(completion(happens)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3791).
% range time 0 3
% From E: 
% 
% ':-'(call_pel_directive(range(time,0,3))).
:- call_pel_directive(range(time, 0, 3)).

% range height 0 2
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3791).
% From E: 
% 
% ':-'(call_pel_directive(range(height,0,2))).
:- call_pel_directive(range(height, 0, 2)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3793).
% range offset 1 2
% From E: 
% 
% ':-'(call_pel_directive(range(offset,1,2))).
:- call_pel_directive(range(offset, 1, 2)).
%; End of file.
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%; FILE: examples/Mueller2006/Chapter7/FallingObjectWithEvents.e
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; @book{Mueller:2006,
%;   author = "Erik T. Mueller",
%;   year = "2006",
%;   title = "Commonsense Reasoning",
%;   address = "San Francisco",
%;   publisher = "Morgan Kaufmann/Elsevier",
%; }
%;

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3821).
% load foundations/Root.e
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/Root.e'))).
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3821).
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/EC.e'))).
:- call_pel_directive(load('foundations/EC.e')).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3824).
% sort object
% From E: 
% 
% sort(object).
sort(object).

% sort agent
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3824).
% From E: 
% 
% sort(agent).
sort(agent).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3826).
% sort height: integer
% From E: 
% 
% subsort(height,integer).
subsort(height,integer).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3828).
% agent Nathan
% From E: 
% 
% t(agent,nathan).
isa(nathan,agent).

% object Apple
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3828).
% From E: 
% 
% t(object,apple).
isa(apple,object).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3831).
% fluent Falling(object)
% From E: 
% 
% fluent(falling(object)).
mpred_prop(falling(object),fluent).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3831).
fluents([falling/1]).

% fluent Height(object,height)
% From E: 
% 
% fluent(height(object,height)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3831).
mpred_prop(height(object,height),fluent).
fluents([height/2]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3834).
% event Drop(agent,object)
% From E: 
% 
% event(drop(agent,object)).
events([drop/2]).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3834).
mpred_prop(drop(agent,object),action).
actions([drop/2]).

% event HitGround(object)
% From E: 
% 
% event(hitGround(object)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3834).
mpred_prop(hitGround(object),event).
events([hitGround/1]).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3837).
%; Sigma
% [agent,object,time]
% Initiates(Drop(agent,object),Falling(object),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3839).
% From E: 
% 
% initiates_at(
%    drop(Agent,Object), 
%    falling(Object), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3839).
initiates(drop(Agent,Object),falling(Object)).


% [agent,object,height,time]
% Releases(Drop(agent,object),Height(object,height),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3843).
% From E: 
% 
% releases_at(
%    drop(Agent,Object), 
%    height(Object,Height), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3843).
releases(drop(Agent,Object),
	 height(Object,Height)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3845).
% [object,time]
% Terminates(HitGround(object),Falling(object),time).
% From E: 
% 
% terminates_at(
%    hitGround(Object), 
%    falling(Object), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3845).
terminates(hitGround(Object),falling(Object)).


% [object,height,time]
% HoldsAt(Height(object,height),time) ->
% Initiates(HitGround(object),Height(object,height),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3849).
% From E: 
% 
% '->'(
%    holds(
%       height(Object,Height), 
%       Time), 
%    initiates_at(
%       hitGround(Object), 
%       height(Object,Height), 
%       Time)).
if(initiates(hitGround(Object),
	     at(height(Object,Height),Time)),
   at(height(Object,Height),Time)).


%; Delta

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3854).
% Delta: 
% From E: 
% 
% directive(delta).
directive(delta).
 


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3854).
% [object,time]
% HoldsAt(Falling(object),time) &
% HoldsAt(Height(object,0),time) ->
% Happens(HitGround(object),time).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          falling(Object), 
%          Time), 
%       holds(
%          height(Object,0), 
%          Time)), 
%    happens(
%       hitGround(Object), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3854).
if(happens(hitGround(Object), Time),  (at(falling(Object), Time), at(height(Object, 0), Time))).

% Delta: 
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3858).
% From E: 
% 
% directive(delta).
directive(delta).
 


% Happens(Drop(Nathan,Apple),0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3858).
% From E: 
% 
% happens(
%    drop(nathan,apple), 0).
observe(at(drop(nathan,apple),0)).


%; Psi
% [object,height1,height2,time]
% HoldsAt(Height(object,height1),time) &
% HoldsAt(Height(object,height2),time) ->
% height1=height2.
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3863).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          height(Object,Height1), 
%          Time), 
%       holds(
%          height(Object,Height2), 
%          Time)), 
%    Height1=Height2).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3863).
if(equals(Height1, Height2),  (at(height(Object, Height1), Time), at(height(Object, Height2), Time))).


%; Pi
% [object,height1,height2,offset,time]
% HoldsAt(Height(object,height1),time) &
% height2 = (height1 - offset) ->
% Trajectory(Falling(object),time,Height(object,height2),offset).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3870).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          height(Object,Height1), 
%          Time), 
%       Height2=Height1-Offset), 
%    trajectory(
%       falling(Object), 
%       Time, 
%       height(Object,Height2), 
%       Offset)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3870).
if(trajectory(falling(Object), Time, height(Object, Height2), Offset),  (at(height(Object, Height1), Time), equals(Height2, Height1-Offset))).


%; Gamma


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3877).
% !HoldsAt(Falling(Apple),0).
% From E: 
% 
% holds(
%    not(falling(apple)), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3877).
initially(not(falling(apple))).


% HoldsAt(Height(Apple,3),0).
% From E: 
% 
% holds(
%    height(apple,3), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3877).
initially(height(apple,3)).

% completion Delta Happens
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3879).
% From E: 
% 
% ':-'(call_pel_directive(completion(delta))).
:- call_pel_directive(completion(delta)).
% From E: 
% 
% ':-'(call_pel_directive(completion(happens))).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3879).
:- call_pel_directive(completion(happens)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3882).
% range time 0 5
% From E: 
% 
% ':-'(call_pel_directive(range(time,0,5))).
:- call_pel_directive(range(time, 0, 5)).

% range height 0 3
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3882).
% From E: 
% 
% ':-'(call_pel_directive(range(height,0,3))).
:- call_pel_directive(range(height, 0, 3)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3884).
% range offset 1 3
% From E: 
% 
% ':-'(call_pel_directive(range(offset,1,3))).
:- call_pel_directive(range(offset, 1, 3)).
%; End of file.
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%; FILE: examples/Mueller2006/Chapter7/FallingObjectWithAntiTrajectory.e
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; @book{Mueller:2006,
%;   author = "Erik T. Mueller",
%;   year = "2006",
%;   title = "Commonsense Reasoning",
%;   address = "San Francisco",
%;   publisher = "Morgan Kaufmann/Elsevier",
%; }
%;

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3912).
% option encoding 3
% From E: 
% 
% ':-'(call_pel_directive(option(encoding,3))).
:- call_pel_directive(option(encoding, 3)).

% option trajectory on
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3912).
% From E: 
% 
% ':-'(call_pel_directive(option(trajectory,on))).
:- call_pel_directive(option(trajectory, on)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3915).
% load foundations/Root.e
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/Root.e'))).
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3915).
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/EC.e'))).
:- call_pel_directive(load('foundations/EC.e')).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3918).
% sort object
% From E: 
% 
% sort(object).
sort(object).

% sort agent
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3918).
% From E: 
% 
% sort(agent).
sort(agent).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3920).
% sort height: integer
% From E: 
% 
% subsort(height,integer).
subsort(height,integer).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3922).
% agent Nathan
% From E: 
% 
% t(agent,nathan).
isa(nathan,agent).

% object Apple
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3922).
% From E: 
% 
% t(object,apple).
isa(apple,object).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3925).
% fluent Falling(object)
% From E: 
% 
% fluent(falling(object)).
mpred_prop(falling(object),fluent).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3925).
fluents([falling/1]).

% fluent Height(object,height)
% From E: 
% 
% fluent(height(object,height)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3925).
mpred_prop(height(object,height),fluent).
fluents([height/2]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3927).
% noninertial Height
% From E: 
% 
% ':-'(call_pel_directive(noninertial(height))).
:- call_pel_directive(noninertial(height)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3929).
% event Drop(agent,object)
% From E: 
% 
% event(drop(agent,object)).
events([drop/2]).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3929).
mpred_prop(drop(agent,object),action).
actions([drop/2]).

% event HitGround(object)
% From E: 
% 
% event(hitGround(object)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3929).
mpred_prop(hitGround(object),event).
events([hitGround/1]).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3932).
%; Sigma
% [agent,object,time]
% Initiates(Drop(agent,object),Falling(object),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3934).
% From E: 
% 
% initiates_at(
%    drop(Agent,Object), 
%    falling(Object), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3934).
initiates(drop(Agent,Object),falling(Object)).


% [object,time]
% Terminates(HitGround(object),Falling(object),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3938).
% From E: 
% 
% terminates_at(
%    hitGround(Object), 
%    falling(Object), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3938).
terminates(hitGround(Object),falling(Object)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3940).
%; Delta

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3942).
% Delta: 
% From E: 
% 
% directive(delta).
directive(delta).
 


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3942).
% [object,time]
% HoldsAt(Falling(object),time) &
% HoldsAt(Height(object,0),time) ->
% Happens(HitGround(object),time).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          falling(Object), 
%          Time), 
%       holds(
%          height(Object,0), 
%          Time)), 
%    happens(
%       hitGround(Object), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3942).
if(happens(hitGround(Object), Time),  (at(falling(Object), Time), at(height(Object, 0), Time))).

% Delta: 
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3946).
% From E: 
% 
% directive(delta).
directive(delta).
 


% Happens(Drop(Nathan,Apple),0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3946).
% From E: 
% 
% happens(
%    drop(nathan,apple), 0).
observe(at(drop(nathan,apple),0)).


%; Psi
% [object,height1,height2,time]
% HoldsAt(Height(object,height1),time) &
% HoldsAt(Height(object,height2),time) ->
% height1=height2.
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3951).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          height(Object,Height1), 
%          Time), 
%       holds(
%          height(Object,Height2), 
%          Time)), 
%    Height1=Height2).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3951).
if(equals(Height1, Height2),  (at(height(Object, Height1), Time), at(height(Object, Height2), Time))).


%; Pi
% [object,height1,height2,offset,time]
% HoldsAt(Height(object,height1),time) &
% height2 = (height1 - offset) ->
% Trajectory(Falling(object),time,Height(object,height2),offset).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3958).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          height(Object,Height1), 
%          Time), 
%       Height2=Height1-Offset), 
%    trajectory(
%       falling(Object), 
%       Time, 
%       height(Object,Height2), 
%       Offset)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3958).
if(trajectory(falling(Object), Time, height(Object, Height2), Offset),  (at(height(Object, Height1), Time), equals(Height2, Height1-Offset))).


% [object,height,offset,time]
% HoldsAt(Height(object,height),time) ->
% AntiTrajectory(Falling(object),time,Height(object,height),offset).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3964).
% From E: 
% 
% '->'(
%    holds(
%       height(Object,Height), 
%       Time), 
%    antiTrajectory(
%       falling(Object), 
%       Time, 
%       height(Object,Height), 
%       Offset)).
if(antiTrajectory(falling(Object),
		  Time,
		  height(Object,Height),
		  Offset),
   at(height(Object,Height),Time)).


%; Gamma


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3969).
% !HoldsAt(Falling(Apple),0).
% From E: 
% 
% holds(
%    not(falling(apple)), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3969).
initially(not(falling(apple))).


% HoldsAt(Height(Apple,3),0).
% From E: 
% 
% holds(
%    height(apple,3), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3969).
initially(height(apple,3)).

% completion Delta Happens
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3971).
% From E: 
% 
% ':-'(call_pel_directive(completion(delta))).
:- call_pel_directive(completion(delta)).
% From E: 
% 
% ':-'(call_pel_directive(completion(happens))).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3971).
:- call_pel_directive(completion(happens)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3974).
% range time 0 5
% From E: 
% 
% ':-'(call_pel_directive(range(time,0,5))).
:- call_pel_directive(range(time, 0, 5)).

% range height 0 3
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3974).
% From E: 
% 
% ':-'(call_pel_directive(range(height,0,3))).
:- call_pel_directive(range(height, 0, 3)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',3976).
% range offset 1 3
% From E: 
% 
% ':-'(call_pel_directive(range(offset,1,3))).
:- call_pel_directive(range(offset, 1, 3)).
%; End of file.
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%; FILE: examples/Mueller2006/Chapter3/Telephone2.e
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; @book{Mueller:2006,
%;   author = "Erik T. Mueller",
%;   year = "2006",
%;   title = "Commonsense Reasoning",
%;   address = "San Francisco",
%;   publisher = "Morgan Kaufmann/Elsevier",
%; }
%;

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4004).
% load foundations/Root.e
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/Root.e'))).
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4004).
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/EC.e'))).
:- call_pel_directive(load('foundations/EC.e')).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4007).
% sort agent
% From E: 
% 
% sort(agent).
sort(agent).

% sort phone
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4007).
% From E: 
% 
% sort(phone).
sort(phone).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4010).
% agent Agent1, Agent2
% From E: 
% 
% t(agent,agent1).
isa(agent1,agent).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4010).
% From E: 
% 
% t(agent,agent2).
isa(agent2,agent).

% phone Phone1, Phone2
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4010).
% From E: 
% 
% t(phone,phone1).
isa(phone1,phone).
% From E: 
% 
% t(phone,phone2).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4010).
isa(phone2,phone).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4013).
% fluent Ringing(phone,phone)
% From E: 
% 
% fluent(ringing(phone,phone)).
mpred_prop(ringing(phone,phone),fluent).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4013).
fluents([ringing/2]).

% fluent DialTone(phone)
% From E: 
% 
% fluent(dialTone(phone)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4013).
mpred_prop(dialTone(phone),fluent).
fluents([dialTone/1]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4015).
% fluent BusySignal(phone)
% From E: 
% 
% fluent(busySignal(phone)).
mpred_prop(busySignal(phone),fluent).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4015).
fluents([busySignal/1]).

% fluent Idle(phone)
% From E: 
% 
% fluent(idle(phone)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4015).
mpred_prop(idle(phone),fluent).
fluents([idle/1]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4017).
% fluent Connected(phone,phone)
% From E: 
% 
% fluent(connected(phone,phone)).
mpred_prop(connected(phone,phone),fluent).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4017).
fluents([connected/2]).

% fluent Disconnected(phone)
% From E: 
% 
% fluent(disconnected(phone)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4017).
mpred_prop(disconnected(phone),fluent).
fluents([disconnected/1]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4020).
% event PickUp(agent,phone)
% From E: 
% 
% event(pickUp(agent,phone)).
events([pickUp/2]).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4020).
mpred_prop(pickUp(agent,phone),action).
actions([pickUp/2]).

% event SetDown(agent,phone)
% From E: 
% 
% event(setDown(agent,phone)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4020).
events([setDown/2]).
mpred_prop(setDown(agent,phone),action).
actions([setDown/2]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4022).
% event Dial(agent,phone,phone)
% From E: 
% 
% event(dial(agent,phone,phone)).
events([dial/3]).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4022).
mpred_prop(dial(agent,phone,phone),action).
actions([dial/3]).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4024).
%; Sigma
% [agent,phone,time]
% HoldsAt(Idle(phone),time) ->
% Initiates(PickUp(agent,phone),DialTone(phone),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4026).
% From E: 
% 
% '->'(
%    holds(
%       idle(Phone), 
%       Time), 
%    initiates_at(
%       pickUp(Agent,Phone), 
%       dialTone(Phone), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4026).
if(initiates(pickUp(Agent,Phone),
	     at(dialTone(Phone),Time)),
   at(idle(Phone),Time)).


% [agent,phone,time]
% HoldsAt(Idle(phone),time) ->
% Terminates(PickUp(agent,phone),Idle(phone),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4031).
% From E: 
% 
% '->'(
%    holds(
%       idle(Phone), 
%       Time), 
%    terminates_at(
%       pickUp(Agent,Phone), 
%       idle(Phone), 
%       Time)).
if(terminates(pickUp(Agent,Phone),
	      at(idle(Phone),Time)),
   at(idle(Phone),Time)).


% [agent,phone,time]
% HoldsAt(DialTone(phone),time) ->
% Initiates(SetDown(agent,phone),Idle(phone),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4035).
% From E: 
% 
% '->'(
%    holds(
%       dialTone(Phone), 
%       Time), 
%    initiates_at(
%       setDown(Agent,Phone), 
%       idle(Phone), 
%       Time)).
if(initiates(setDown(Agent,Phone),
	     at(idle(Phone),Time)),
   at(dialTone(Phone),Time)).


% [agent,phone,time]
% HoldsAt(DialTone(phone),time) ->
% Terminates(SetDown(agent,phone),DialTone(phone),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4039).
% From E: 
% 
% '->'(
%    holds(
%       dialTone(Phone), 
%       Time), 
%    terminates_at(
%       setDown(Agent,Phone), 
%       dialTone(Phone), 
%       Time)).
if(terminates(setDown(Agent,Phone),
	      at(dialTone(Phone),Time)),
   at(dialTone(Phone),Time)).


% [agent,phone1,phone2,time]
% HoldsAt(DialTone(phone1),time) &
% HoldsAt(Idle(phone2),time) ->
% Initiates(Dial(agent,phone1,phone2),Ringing(phone1,phone2),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4043).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          dialTone(Phone1), 
%          Time), 
%       holds(
%          idle(Phone2), 
%          Time)), 
%    initiates_at(
%       dial(Agent,Phone1,Phone2), 
%       ringing(Phone1,Phone2), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4043).
if(initiates(dial(Agent, Phone1, Phone2), at(ringing(Phone1, Phone2), Time)),  (at(dialTone(Phone1), Time), at(idle(Phone2), Time))).


% [agent,phone1,phone2,time]
% HoldsAt(DialTone(phone1),time) &
% HoldsAt(Idle(phone2),time) ->
% Terminates(Dial(agent,phone1,phone2),DialTone(phone1),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4048).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          dialTone(Phone1), 
%          Time), 
%       holds(
%          idle(Phone2), 
%          Time)), 
%    terminates_at(
%       dial(Agent,Phone1,Phone2), 
%       dialTone(Phone1), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4048).
if(terminates(dial(Agent, Phone1, Phone2), at(dialTone(Phone1), Time)),  (at(dialTone(Phone1), Time), at(idle(Phone2), Time))).


% [agent,phone1,phone2,time]
% HoldsAt(DialTone(phone1),time) &
% HoldsAt(Idle(phone2),time) ->
% Terminates(Dial(agent,phone1,phone2),Idle(phone2),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4053).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          dialTone(Phone1), 
%          Time), 
%       holds(
%          idle(Phone2), 
%          Time)), 
%    terminates_at(
%       dial(Agent,Phone1,Phone2), 
%       idle(Phone2), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4053).
if(terminates(dial(Agent, Phone1, Phone2), at(idle(Phone2), Time)),  (at(dialTone(Phone1), Time), at(idle(Phone2), Time))).


% [agent,phone1,phone2,time]
% HoldsAt(DialTone(phone1),time) &
% !HoldsAt(Idle(phone2),time) ->
% Initiates(Dial(agent,phone1,phone2),BusySignal(phone1),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4058).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          dialTone(Phone1), 
%          Time), 
%       holds(
%          not(idle(Phone2)), 
%          Time)), 
%    initiates_at(
%       dial(Agent,Phone1,Phone2), 
%       busySignal(Phone1), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4058).
if(initiates(dial(Agent, Phone1, Phone2), at(busySignal(Phone1), Time)),  (at(dialTone(Phone1), Time), at(not(idle(Phone2)), Time))).


% [agent,phone1,phone2,time]
% HoldsAt(DialTone(phone1),time) &
% !HoldsAt(Idle(phone2),time) ->
% Terminates(Dial(agent,phone1,phone2),DialTone(phone1),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4063).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          dialTone(Phone1), 
%          Time), 
%       holds(
%          not(idle(Phone2)), 
%          Time)), 
%    terminates_at(
%       dial(Agent,Phone1,Phone2), 
%       dialTone(Phone1), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4063).
if(terminates(dial(Agent, Phone1, Phone2), at(dialTone(Phone1), Time)),  (at(dialTone(Phone1), Time), at(not(idle(Phone2)), Time))).


% [agent,phone,time]
% HoldsAt(BusySignal(phone),time) ->
% Initiates(SetDown(agent,phone),Idle(phone),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4068).
% From E: 
% 
% '->'(
%    holds(
%       busySignal(Phone), 
%       Time), 
%    initiates_at(
%       setDown(Agent,Phone), 
%       idle(Phone), 
%       Time)).
if(initiates(setDown(Agent,Phone),
	     at(idle(Phone),Time)),
   at(busySignal(Phone),Time)).


% [agent,phone,time]
% HoldsAt(BusySignal(phone),time) ->
% Terminates(SetDown(agent,phone),BusySignal(phone),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4072).
% From E: 
% 
% '->'(
%    holds(
%       busySignal(Phone), 
%       Time), 
%    terminates_at(
%       setDown(Agent,Phone), 
%       busySignal(Phone), 
%       Time)).
if(terminates(setDown(Agent,Phone),
	      at(busySignal(Phone),Time)),
   at(busySignal(Phone),Time)).


% [agent,phone1,phone2,time]
% HoldsAt(Ringing(phone1,phone2),time) ->
% Initiates(SetDown(agent,phone1),Idle(phone1),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4076).
% From E: 
% 
% '->'(
%    holds(
%       ringing(Phone1,Phone2), 
%       Time), 
%    initiates_at(
%       setDown(Agent,Phone1), 
%       idle(Phone1), 
%       Time)).
if(initiates(setDown(Agent,Phone1),
	     at(idle(Phone1),Time)),
   at(ringing(Phone1,Phone2),Time)).


% [agent,phone1,phone2,time]
% HoldsAt(Ringing(phone1,phone2),time) ->
% Initiates(SetDown(agent,phone1),Idle(phone2),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4080).
% From E: 
% 
% '->'(
%    holds(
%       ringing(Phone1,Phone2), 
%       Time), 
%    initiates_at(
%       setDown(Agent,Phone1), 
%       idle(Phone2), 
%       Time)).
if(initiates(setDown(Agent,Phone1),
	     at(idle(Phone2),Time)),
   at(ringing(Phone1,Phone2),Time)).


% [agent,phone1,phone2,time]
% HoldsAt(Ringing(phone1,phone2),time) ->
% Terminates(SetDown(agent,phone1),Ringing(phone1,phone2),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4084).
% From E: 
% 
% '->'(
%    holds(
%       ringing(Phone1,Phone2), 
%       Time), 
%    terminates_at(
%       setDown(Agent,Phone1), 
%       ringing(Phone1,Phone2), 
%       Time)).
if(terminates(setDown(Agent,Phone1),
	      at(ringing(Phone1,Phone2),Time)),
   at(ringing(Phone1,Phone2),Time)).


% [agent,phone1,phone2,time]
% HoldsAt(Ringing(phone1,phone2),time) ->
% Initiates(PickUp(agent,phone2),Connected(phone1,phone2),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4088).
% From E: 
% 
% '->'(
%    holds(
%       ringing(Phone1,Phone2), 
%       Time), 
%    initiates_at(
%       pickUp(Agent,Phone2), 
%       connected(Phone1,Phone2), 
%       Time)).
if(initiates(pickUp(Agent,Phone2),
	     at(connected(Phone1,Phone2),Time)),
   at(ringing(Phone1,Phone2),Time)).


% [agent,phone1,phone2,time]
% HoldsAt(Ringing(phone1,phone2),time) ->
% Terminates(PickUp(agent,phone2),Ringing(phone1,phone2),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4092).
% From E: 
% 
% '->'(
%    holds(
%       ringing(Phone1,Phone2), 
%       Time), 
%    terminates_at(
%       pickUp(Agent,Phone2), 
%       ringing(Phone1,Phone2), 
%       Time)).
if(terminates(pickUp(Agent,Phone2),
	      at(ringing(Phone1,Phone2),Time)),
   at(ringing(Phone1,Phone2),Time)).


% [agent,phone1,phone2,time]
% HoldsAt(Connected(phone1,phone2),time) ->
% Initiates(SetDown(agent,phone1),Idle(phone1),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4096).
% From E: 
% 
% '->'(
%    holds(
%       connected(Phone1,Phone2), 
%       Time), 
%    initiates_at(
%       setDown(Agent,Phone1), 
%       idle(Phone1), 
%       Time)).
if(initiates(setDown(Agent,Phone1),
	     at(idle(Phone1),Time)),
   at(connected(Phone1,Phone2),Time)).


% [agent,phone1,phone2,time]
% HoldsAt(Connected(phone1,phone2),time) ->
% Initiates(SetDown(agent,phone1),Disconnected(phone2),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4100).
% From E: 
% 
% '->'(
%    holds(
%       connected(Phone1,Phone2), 
%       Time), 
%    initiates_at(
%       setDown(Agent,Phone1), 
%       disconnected(Phone2), 
%       Time)).
if(initiates(setDown(Agent,Phone1),
	     at(disconnected(Phone2),Time)),
   at(connected(Phone1,Phone2),Time)).


% [agent,phone1,phone2,time]
% HoldsAt(Connected(phone1,phone2),time) ->
% Terminates(SetDown(agent,phone1),Connected(phone1,phone2),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4104).
% From E: 
% 
% '->'(
%    holds(
%       connected(Phone1,Phone2), 
%       Time), 
%    terminates_at(
%       setDown(Agent,Phone1), 
%       connected(Phone1,Phone2), 
%       Time)).
if(terminates(setDown(Agent,Phone1),
	      at(connected(Phone1,Phone2),Time)),
   at(connected(Phone1,Phone2),Time)).


% [agent,phone1,phone2,time]
% HoldsAt(Connected(phone1,phone2),time) ->
% Initiates(SetDown(agent,phone2),Idle(phone2),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4108).
% From E: 
% 
% '->'(
%    holds(
%       connected(Phone1,Phone2), 
%       Time), 
%    initiates_at(
%       setDown(Agent,Phone2), 
%       idle(Phone2), 
%       Time)).
if(initiates(setDown(Agent,Phone2),
	     at(idle(Phone2),Time)),
   at(connected(Phone1,Phone2),Time)).


% [agent,phone1,phone2,time]
% HoldsAt(Connected(phone1,phone2),time) ->
% Initiates(SetDown(agent,phone2),Disconnected(phone1),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4112).
% From E: 
% 
% '->'(
%    holds(
%       connected(Phone1,Phone2), 
%       Time), 
%    initiates_at(
%       setDown(Agent,Phone2), 
%       disconnected(Phone1), 
%       Time)).
if(initiates(setDown(Agent,Phone2),
	     at(disconnected(Phone1),Time)),
   at(connected(Phone1,Phone2),Time)).


% [agent,phone1,phone2,time]
% HoldsAt(Connected(phone1,phone2),time) ->
% Terminates(SetDown(agent,phone2),Connected(phone1,phone2),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4116).
% From E: 
% 
% '->'(
%    holds(
%       connected(Phone1,Phone2), 
%       Time), 
%    terminates_at(
%       setDown(Agent,Phone2), 
%       connected(Phone1,Phone2), 
%       Time)).
if(terminates(setDown(Agent,Phone2),
	      at(connected(Phone1,Phone2),Time)),
   at(connected(Phone1,Phone2),Time)).


% [agent,phone,time]
% HoldsAt(Disconnected(phone),time) ->
% Initiates(SetDown(agent,phone),Idle(phone),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4120).
% From E: 
% 
% '->'(
%    holds(
%       disconnected(Phone), 
%       Time), 
%    initiates_at(
%       setDown(Agent,Phone), 
%       idle(Phone), 
%       Time)).
if(initiates(setDown(Agent,Phone),
	     at(idle(Phone),Time)),
   at(disconnected(Phone),Time)).


% [agent,phone,time]
% HoldsAt(Disconnected(phone),time) ->
% Terminates(SetDown(agent,phone),Disconnected(phone),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4124).
% From E: 
% 
% '->'(
%    holds(
%       disconnected(Phone), 
%       Time), 
%    terminates_at(
%       setDown(Agent,Phone), 
%       disconnected(Phone), 
%       Time)).
if(terminates(setDown(Agent,Phone),
	      at(disconnected(Phone),Time)),
   at(disconnected(Phone),Time)).


%; Delta


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4129).
% Happens(PickUp(Agent1,Phone1),0).
% From E: 
% 
% happens(
%    pickUp(agent1,phone1), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4129).
observe(at(pickUp(agent1,phone1),0)).


% Happens(Dial(Agent1,Phone1,Phone2),1).
% From E: 
% 
% happens(
%    dial(agent1,phone1,phone2), 1).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4129).
observe(at(dial(agent1,phone1,phone2),1)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4131).
% Happens(PickUp(Agent2,Phone2),2).
% From E: 
% 
% happens(
%    pickUp(agent2,phone2), 2).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4131).
observe(at(pickUp(agent2,phone2),2)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4133).
%; Psi
% [phone,time]
% !HoldsAt(Ringing(phone,phone),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4135).
% From E: 
% 
% holds(
%    not(ringing(Phone,Phone)), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4135).
at(not(ringing(Phone,Phone)),Time).


% [phone1,phone2,time]
% HoldsAt(Ringing(phone1,phone2),time) &
% phone1!=phone2 ->
% !HoldsAt(Ringing(phone2,phone1),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4139).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          ringing(Phone1,Phone2), 
%          Time), 
%       Phone1\=Phone2), 
%    holds(
%       not(ringing(Phone2,Phone1)), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4139).
if(at(not(ringing(Phone2, Phone1)), Time),  (at(ringing(Phone1, Phone2), Time), {dif(Phone1, Phone2)})).


% [phone,time]
% !HoldsAt(Connected(phone,phone),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4144).
% From E: 
% 
% holds(
%    not(connected(Phone,Phone)), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4144).
at(not(connected(Phone,Phone)),Time).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4146).
% [phone1,phone2,time]
% HoldsAt(Connected(phone1,phone2),time) &
% phone1!=phone2 ->
% !HoldsAt(Connected(phone2,phone1),time).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          connected(Phone1,Phone2), 
%          Time), 
%       Phone1\=Phone2), 
%    holds(
%       not(connected(Phone2,Phone1)), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4146).
if(at(not(connected(Phone2, Phone1)), Time),  (at(connected(Phone1, Phone2), Time), {dif(Phone1, Phone2)})).

% mutex Idle, DialTone, BusySignal, Disconnected
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4150).
% From E: 
% 
% ':-'(call_pel_directive(mutex(idle))).
:- call_pel_directive(mutex(idle)).
% From E: 
% 
% ':-'(call_pel_directive(mutex(dialTone))).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4150).
:- call_pel_directive(mutex(dialTone)).
% From E: 
% 
% ':-'(call_pel_directive(mutex(busySignal))).
:- call_pel_directive(mutex(busySignal)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4150).
% From E: 
% 
% ':-'(call_pel_directive(mutex(disconnected))).
:- call_pel_directive(mutex(disconnected)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4153).
% [phone1,phone2,time]
% HoldsAt(Idle(phone1),time) ->
% !HoldsAt(Ringing(phone1,phone2),time) &
% !HoldsAt(Connected(phone1,phone2),time).
% From E: 
% 
% '->'(
%    holds(
%       idle(Phone1), 
%       Time), 
%    ','(
%       holds(
%          not(ringing(Phone1,Phone2)), 
%          Time), 
%       holds(
%          not(connected(Phone1,Phone2)), 
%          Time))).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4153).
if((at(not(ringing(Phone1, Phone2)), Time), at(not(connected(Phone1, Phone2)), Time)), at(idle(Phone1), Time)).


%; etc.
%; Gamma
% [phone]
 
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4162).
% HoldsAt(Idle(phone),0).
% From E: 
% 
% holds(
%    idle(Phone), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4162).
initially(idle(Phone)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4164).
% completion Happens
% From E: 
% 
% ':-'(call_pel_directive(completion(happens))).
:- call_pel_directive(completion(happens)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4166).
% range time 0 3
% From E: 
% 
% ':-'(call_pel_directive(range(time,0,3))).
:- call_pel_directive(range(time, 0, 3)).

% range offset 1 1
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4166).
% From E: 
% 
% ':-'(call_pel_directive(range(offset,1,1))).
:- call_pel_directive(range(offset, 1, 1)).
%; End of file.
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%; FILE: examples/Mueller2006/Chapter3/Telephone1.e
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; @book{Mueller:2006,
%;   author = "Erik T. Mueller",
%;   year = "2006",
%;   title = "Commonsense Reasoning",
%;   address = "San Francisco",
%;   publisher = "Morgan Kaufmann/Elsevier",
%; }
%;

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4195).
% load foundations/Root.e
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/Root.e'))).
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4195).
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/EC.e'))).
:- call_pel_directive(load('foundations/EC.e')).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4198).
% sort agent
% From E: 
% 
% sort(agent).
sort(agent).

% sort phone
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4198).
% From E: 
% 
% sort(phone).
sort(phone).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4201).
% agent Agent1, Agent2
% From E: 
% 
% t(agent,agent1).
isa(agent1,agent).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4201).
% From E: 
% 
% t(agent,agent2).
isa(agent2,agent).

% phone Phone1, Phone2
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4201).
% From E: 
% 
% t(phone,phone1).
isa(phone1,phone).
% From E: 
% 
% t(phone,phone2).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4201).
isa(phone2,phone).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4204).
% fluent Ringing(phone,phone)
% From E: 
% 
% fluent(ringing(phone,phone)).
mpred_prop(ringing(phone,phone),fluent).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4204).
fluents([ringing/2]).

% fluent DialTone(phone)
% From E: 
% 
% fluent(dialTone(phone)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4204).
mpred_prop(dialTone(phone),fluent).
fluents([dialTone/1]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4206).
% fluent BusySignal(phone)
% From E: 
% 
% fluent(busySignal(phone)).
mpred_prop(busySignal(phone),fluent).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4206).
fluents([busySignal/1]).

% fluent Idle(phone)
% From E: 
% 
% fluent(idle(phone)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4206).
mpred_prop(idle(phone),fluent).
fluents([idle/1]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4208).
% fluent Connected(phone,phone)
% From E: 
% 
% fluent(connected(phone,phone)).
mpred_prop(connected(phone,phone),fluent).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4208).
fluents([connected/2]).

% fluent Disconnected(phone)
% From E: 
% 
% fluent(disconnected(phone)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4208).
mpred_prop(disconnected(phone),fluent).
fluents([disconnected/1]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4211).
% event PickUp(agent,phone)
% From E: 
% 
% event(pickUp(agent,phone)).
events([pickUp/2]).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4211).
mpred_prop(pickUp(agent,phone),action).
actions([pickUp/2]).

% event SetDown(agent,phone)
% From E: 
% 
% event(setDown(agent,phone)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4211).
events([setDown/2]).
mpred_prop(setDown(agent,phone),action).
actions([setDown/2]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4213).
% event Dial(agent,phone,phone)
% From E: 
% 
% event(dial(agent,phone,phone)).
events([dial/3]).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4213).
mpred_prop(dial(agent,phone,phone),action).
actions([dial/3]).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4215).
%; Sigma
% [agent,phone,time]
% HoldsAt(Idle(phone),time) ->
% Initiates(PickUp(agent,phone),DialTone(phone),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4217).
% From E: 
% 
% '->'(
%    holds(
%       idle(Phone), 
%       Time), 
%    initiates_at(
%       pickUp(Agent,Phone), 
%       dialTone(Phone), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4217).
if(initiates(pickUp(Agent,Phone),
	     at(dialTone(Phone),Time)),
   at(idle(Phone),Time)).


% [agent,phone,time]
% HoldsAt(Idle(phone),time) ->
% Terminates(PickUp(agent,phone),Idle(phone),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4222).
% From E: 
% 
% '->'(
%    holds(
%       idle(Phone), 
%       Time), 
%    terminates_at(
%       pickUp(Agent,Phone), 
%       idle(Phone), 
%       Time)).
if(terminates(pickUp(Agent,Phone),
	      at(idle(Phone),Time)),
   at(idle(Phone),Time)).


% [agent,phone,time]
% HoldsAt(DialTone(phone),time) ->
% Initiates(SetDown(agent,phone),Idle(phone),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4226).
% From E: 
% 
% '->'(
%    holds(
%       dialTone(Phone), 
%       Time), 
%    initiates_at(
%       setDown(Agent,Phone), 
%       idle(Phone), 
%       Time)).
if(initiates(setDown(Agent,Phone),
	     at(idle(Phone),Time)),
   at(dialTone(Phone),Time)).


% [agent,phone,time]
% HoldsAt(DialTone(phone),time) ->
% Terminates(SetDown(agent,phone),DialTone(phone),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4230).
% From E: 
% 
% '->'(
%    holds(
%       dialTone(Phone), 
%       Time), 
%    terminates_at(
%       setDown(Agent,Phone), 
%       dialTone(Phone), 
%       Time)).
if(terminates(setDown(Agent,Phone),
	      at(dialTone(Phone),Time)),
   at(dialTone(Phone),Time)).


% [agent,phone1,phone2,time]
% HoldsAt(DialTone(phone1),time) &
% HoldsAt(Idle(phone2),time) ->
% Initiates(Dial(agent,phone1,phone2),Ringing(phone1,phone2),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4234).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          dialTone(Phone1), 
%          Time), 
%       holds(
%          idle(Phone2), 
%          Time)), 
%    initiates_at(
%       dial(Agent,Phone1,Phone2), 
%       ringing(Phone1,Phone2), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4234).
if(initiates(dial(Agent, Phone1, Phone2), at(ringing(Phone1, Phone2), Time)),  (at(dialTone(Phone1), Time), at(idle(Phone2), Time))).


% [agent,phone1,phone2,time]
% HoldsAt(DialTone(phone1),time) &
% HoldsAt(Idle(phone2),time) ->
% Terminates(Dial(agent,phone1,phone2),DialTone(phone1),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4239).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          dialTone(Phone1), 
%          Time), 
%       holds(
%          idle(Phone2), 
%          Time)), 
%    terminates_at(
%       dial(Agent,Phone1,Phone2), 
%       dialTone(Phone1), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4239).
if(terminates(dial(Agent, Phone1, Phone2), at(dialTone(Phone1), Time)),  (at(dialTone(Phone1), Time), at(idle(Phone2), Time))).


% [agent,phone1,phone2,time]
% HoldsAt(DialTone(phone1),time) &
% HoldsAt(Idle(phone2),time) ->
% Terminates(Dial(agent,phone1,phone2),Idle(phone2),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4244).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          dialTone(Phone1), 
%          Time), 
%       holds(
%          idle(Phone2), 
%          Time)), 
%    terminates_at(
%       dial(Agent,Phone1,Phone2), 
%       idle(Phone2), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4244).
if(terminates(dial(Agent, Phone1, Phone2), at(idle(Phone2), Time)),  (at(dialTone(Phone1), Time), at(idle(Phone2), Time))).


% [agent,phone1,phone2,time]
% HoldsAt(DialTone(phone1),time) &
% !HoldsAt(Idle(phone2),time) ->
% Initiates(Dial(agent,phone1,phone2),BusySignal(phone1),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4249).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          dialTone(Phone1), 
%          Time), 
%       holds(
%          not(idle(Phone2)), 
%          Time)), 
%    initiates_at(
%       dial(Agent,Phone1,Phone2), 
%       busySignal(Phone1), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4249).
if(initiates(dial(Agent, Phone1, Phone2), at(busySignal(Phone1), Time)),  (at(dialTone(Phone1), Time), at(not(idle(Phone2)), Time))).


% [agent,phone1,phone2,time]
% HoldsAt(DialTone(phone1),time) &
% !HoldsAt(Idle(phone2),time) ->
% Terminates(Dial(agent,phone1,phone2),DialTone(phone1),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4254).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          dialTone(Phone1), 
%          Time), 
%       holds(
%          not(idle(Phone2)), 
%          Time)), 
%    terminates_at(
%       dial(Agent,Phone1,Phone2), 
%       dialTone(Phone1), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4254).
if(terminates(dial(Agent, Phone1, Phone2), at(dialTone(Phone1), Time)),  (at(dialTone(Phone1), Time), at(not(idle(Phone2)), Time))).


% [agent,phone,time]
% HoldsAt(BusySignal(phone),time) ->
% Initiates(SetDown(agent,phone),Idle(phone),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4259).
% From E: 
% 
% '->'(
%    holds(
%       busySignal(Phone), 
%       Time), 
%    initiates_at(
%       setDown(Agent,Phone), 
%       idle(Phone), 
%       Time)).
if(initiates(setDown(Agent,Phone),
	     at(idle(Phone),Time)),
   at(busySignal(Phone),Time)).


% [agent,phone,time]
% HoldsAt(BusySignal(phone),time) ->
% Terminates(SetDown(agent,phone),BusySignal(phone),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4263).
% From E: 
% 
% '->'(
%    holds(
%       busySignal(Phone), 
%       Time), 
%    terminates_at(
%       setDown(Agent,Phone), 
%       busySignal(Phone), 
%       Time)).
if(terminates(setDown(Agent,Phone),
	      at(busySignal(Phone),Time)),
   at(busySignal(Phone),Time)).


% [agent,phone1,phone2,time]
% HoldsAt(Ringing(phone1,phone2),time) ->
% Initiates(SetDown(agent,phone1),Idle(phone1),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4267).
% From E: 
% 
% '->'(
%    holds(
%       ringing(Phone1,Phone2), 
%       Time), 
%    initiates_at(
%       setDown(Agent,Phone1), 
%       idle(Phone1), 
%       Time)).
if(initiates(setDown(Agent,Phone1),
	     at(idle(Phone1),Time)),
   at(ringing(Phone1,Phone2),Time)).


% [agent,phone1,phone2,time]
% HoldsAt(Ringing(phone1,phone2),time) ->
% Initiates(SetDown(agent,phone1),Idle(phone2),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4271).
% From E: 
% 
% '->'(
%    holds(
%       ringing(Phone1,Phone2), 
%       Time), 
%    initiates_at(
%       setDown(Agent,Phone1), 
%       idle(Phone2), 
%       Time)).
if(initiates(setDown(Agent,Phone1),
	     at(idle(Phone2),Time)),
   at(ringing(Phone1,Phone2),Time)).


% [agent,phone1,phone2,time]
% HoldsAt(Ringing(phone1,phone2),time) ->
% Terminates(SetDown(agent,phone1),Ringing(phone1,phone2),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4275).
% From E: 
% 
% '->'(
%    holds(
%       ringing(Phone1,Phone2), 
%       Time), 
%    terminates_at(
%       setDown(Agent,Phone1), 
%       ringing(Phone1,Phone2), 
%       Time)).
if(terminates(setDown(Agent,Phone1),
	      at(ringing(Phone1,Phone2),Time)),
   at(ringing(Phone1,Phone2),Time)).


% [agent,phone1,phone2,time]
% HoldsAt(Ringing(phone1,phone2),time) ->
% Initiates(PickUp(agent,phone2),Connected(phone1,phone2),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4279).
% From E: 
% 
% '->'(
%    holds(
%       ringing(Phone1,Phone2), 
%       Time), 
%    initiates_at(
%       pickUp(Agent,Phone2), 
%       connected(Phone1,Phone2), 
%       Time)).
if(initiates(pickUp(Agent,Phone2),
	     at(connected(Phone1,Phone2),Time)),
   at(ringing(Phone1,Phone2),Time)).


% [agent,phone1,phone2,time]
% HoldsAt(Ringing(phone1,phone2),time) ->
% Terminates(PickUp(agent,phone2),Ringing(phone1,phone2),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4283).
% From E: 
% 
% '->'(
%    holds(
%       ringing(Phone1,Phone2), 
%       Time), 
%    terminates_at(
%       pickUp(Agent,Phone2), 
%       ringing(Phone1,Phone2), 
%       Time)).
if(terminates(pickUp(Agent,Phone2),
	      at(ringing(Phone1,Phone2),Time)),
   at(ringing(Phone1,Phone2),Time)).


% [agent,phone1,phone2,time]
% HoldsAt(Connected(phone1,phone2),time) ->
% Initiates(SetDown(agent,phone1),Idle(phone1),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4287).
% From E: 
% 
% '->'(
%    holds(
%       connected(Phone1,Phone2), 
%       Time), 
%    initiates_at(
%       setDown(Agent,Phone1), 
%       idle(Phone1), 
%       Time)).
if(initiates(setDown(Agent,Phone1),
	     at(idle(Phone1),Time)),
   at(connected(Phone1,Phone2),Time)).


% [agent,phone1,phone2,time]
% HoldsAt(Connected(phone1,phone2),time) ->
% Initiates(SetDown(agent,phone1),Disconnected(phone2),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4291).
% From E: 
% 
% '->'(
%    holds(
%       connected(Phone1,Phone2), 
%       Time), 
%    initiates_at(
%       setDown(Agent,Phone1), 
%       disconnected(Phone2), 
%       Time)).
if(initiates(setDown(Agent,Phone1),
	     at(disconnected(Phone2),Time)),
   at(connected(Phone1,Phone2),Time)).


% [agent,phone1,phone2,time]
% HoldsAt(Connected(phone1,phone2),time) ->
% Terminates(SetDown(agent,phone1),Connected(phone1,phone2),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4295).
% From E: 
% 
% '->'(
%    holds(
%       connected(Phone1,Phone2), 
%       Time), 
%    terminates_at(
%       setDown(Agent,Phone1), 
%       connected(Phone1,Phone2), 
%       Time)).
if(terminates(setDown(Agent,Phone1),
	      at(connected(Phone1,Phone2),Time)),
   at(connected(Phone1,Phone2),Time)).


% [agent,phone1,phone2,time]
% HoldsAt(Connected(phone1,phone2),time) ->
% Initiates(SetDown(agent,phone2),Idle(phone2),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4299).
% From E: 
% 
% '->'(
%    holds(
%       connected(Phone1,Phone2), 
%       Time), 
%    initiates_at(
%       setDown(Agent,Phone2), 
%       idle(Phone2), 
%       Time)).
if(initiates(setDown(Agent,Phone2),
	     at(idle(Phone2),Time)),
   at(connected(Phone1,Phone2),Time)).


% [agent,phone1,phone2,time]
% HoldsAt(Connected(phone1,phone2),time) ->
% Initiates(SetDown(agent,phone2),Disconnected(phone1),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4303).
% From E: 
% 
% '->'(
%    holds(
%       connected(Phone1,Phone2), 
%       Time), 
%    initiates_at(
%       setDown(Agent,Phone2), 
%       disconnected(Phone1), 
%       Time)).
if(initiates(setDown(Agent,Phone2),
	     at(disconnected(Phone1),Time)),
   at(connected(Phone1,Phone2),Time)).


% [agent,phone1,phone2,time]
% HoldsAt(Connected(phone1,phone2),time) ->
% Terminates(SetDown(agent,phone2),Connected(phone1,phone2),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4307).
% From E: 
% 
% '->'(
%    holds(
%       connected(Phone1,Phone2), 
%       Time), 
%    terminates_at(
%       setDown(Agent,Phone2), 
%       connected(Phone1,Phone2), 
%       Time)).
if(terminates(setDown(Agent,Phone2),
	      at(connected(Phone1,Phone2),Time)),
   at(connected(Phone1,Phone2),Time)).


% [agent,phone,time]
% HoldsAt(Disconnected(phone),time) ->
% Initiates(SetDown(agent,phone),Idle(phone),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4311).
% From E: 
% 
% '->'(
%    holds(
%       disconnected(Phone), 
%       Time), 
%    initiates_at(
%       setDown(Agent,Phone), 
%       idle(Phone), 
%       Time)).
if(initiates(setDown(Agent,Phone),
	     at(idle(Phone),Time)),
   at(disconnected(Phone),Time)).


% [agent,phone,time]
% HoldsAt(Disconnected(phone),time) ->
% Terminates(SetDown(agent,phone),Disconnected(phone),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4315).
% From E: 
% 
% '->'(
%    holds(
%       disconnected(Phone), 
%       Time), 
%    terminates_at(
%       setDown(Agent,Phone), 
%       disconnected(Phone), 
%       Time)).
if(terminates(setDown(Agent,Phone),
	      at(disconnected(Phone),Time)),
   at(disconnected(Phone),Time)).


%; Delta

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4320).
% Delta: 
% From E: 
% 
% directive(delta).
directive(delta).
 


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4320).
% Happens(PickUp(Agent1,Phone1),0).
% From E: 
% 
% happens(
%    pickUp(agent1,phone1), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4320).
observe(at(pickUp(agent1,phone1),0)).

% Delta: 
% From E: 
% 
% directive(delta).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4320).
directive(delta).
 


% Happens(Dial(Agent1,Phone1,Phone2),1).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4320).
% From E: 
% 
% happens(
%    dial(agent1,phone1,phone2), 1).
observe(at(dial(agent1,phone1,phone2),1)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4322).
% Delta: 
% From E: 
% 
% directive(delta).
directive(delta).
 


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4322).
% Happens(PickUp(Agent2,Phone2),2).
% From E: 
% 
% happens(
%    pickUp(agent2,phone2), 2).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4322).
observe(at(pickUp(agent2,phone2),2)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4324).
%; Gamma
% [phone]
 % HoldsAt(Idle(phone),0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4326).
% From E: 
% 
% holds(
%    idle(Phone), 0).
initially(idle(Phone)).


% [phone]
 % !HoldsAt(DialTone(phone),0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4326).
% From E: 
% 
% holds(
%    not(dialTone(Phone)), 0).
initially(not(dialTone(Phone))).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4328).
% [phone]
 % !HoldsAt(BusySignal(phone),0).
% From E: 
% 
% holds(
%    not(busySignal(Phone)), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4328).
initially(not(busySignal(Phone))).


% [phone1,phone2]
 % !HoldsAt(Ringing(phone1,phone2),0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4328).
% From E: 
% 
% holds(
%    not(ringing(Phone1,Phone2)), 0).
initially(not(ringing(Phone1,Phone2))).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4330).
% [phone1,phone2]
 % !HoldsAt(Connected(phone1,phone2),0).
% From E: 
% 
% holds(
%    not(connected(Phone1,Phone2)), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4330).
initially(not(connected(Phone1,Phone2))).


% [phone]
 % !HoldsAt(Disconnected(phone),0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4330).
% From E: 
% 
% holds(
%    not(disconnected(Phone)), 0).
initially(not(disconnected(Phone))).

% completion Delta Happens
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4332).
% From E: 
% 
% ':-'(call_pel_directive(completion(delta))).
:- call_pel_directive(completion(delta)).
% From E: 
% 
% ':-'(call_pel_directive(completion(happens))).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4332).
:- call_pel_directive(completion(happens)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4335).
% range time 0 3
% From E: 
% 
% ':-'(call_pel_directive(range(time,0,3))).
:- call_pel_directive(range(time, 0, 3)).

% range offset 1 1
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4335).
% From E: 
% 
% ':-'(call_pel_directive(range(offset,1,1))).
:- call_pel_directive(range(offset, 1, 1)).
%; End of file.
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%; FILE: examples/Mueller2006/Chapter12/DefaultLocation.e
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; @book{Mueller:2006,
%;   author = "Erik T. Mueller",
%;   year = "2006",
%;   title = "Commonsense Reasoning",
%;   address = "San Francisco",
%;   publisher = "Morgan Kaufmann/Elsevier",
%; }
%;

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4364).
% load foundations/Root.e
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/Root.e'))).
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4364).
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/EC.e'))).
:- call_pel_directive(load('foundations/EC.e')).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4367).
% sort object
% From E: 
% 
% sort(object).
sort(object).

% sort agent: object
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4367).
% From E: 
% 
% subsort(agent,object).
subsort(agent,object).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4369).
% sort device: object
% From E: 
% 
% subsort(device,object).
subsort(device,object).

% sort tv: device
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4369).
% From E: 
% 
% subsort(tv,device).
subsort(tv,device).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4371).
% sort room
% From E: 
% 
% sort(room).
sort(room).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4373).
% agent Nathan
% From E: 
% 
% t(agent,nathan).
isa(nathan,agent).

% tv TV
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4373).
% From E: 
% 
% t(tv,tv).
isa(tv,tv).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4375).
% room LivingRoom, Kitchen
% From E: 
% 
% t(room,livingRoom).
isa(livingRoom,room).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4375).
% From E: 
% 
% t(room,kitchen).
isa(kitchen,room).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4377).
% event TurnOn(agent,device)
% From E: 
% 
% event(turnOn(agent,device)).
events([turnOn/2]).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4377).
mpred_prop(turnOn(agent,device),action).
actions([turnOn/2]).

% event Walk(agent,room,room)
% From E: 
% 
% event(walk(agent,room,room)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4377).
events([walk/3]).
mpred_prop(walk(agent,room,room),action).
actions([walk/3]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4380).
% fluent InRoom(object,room)
% From E: 
% 
% fluent(inRoom(object,room)).
mpred_prop(inRoom(object,room),fluent).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4380).
fluents([inRoom/2]).

% fluent On(device)
% From E: 
% 
% fluent(on(device)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4380).
mpred_prop(on(device),fluent).
fluents([on/1]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4382).
% fluent PluggedIn(device)
% From E: 
% 
% fluent(pluggedIn(device)).
mpred_prop(pluggedIn(device),fluent).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4382).
fluents([pluggedIn/1]).

% fluent BrokenSwitch(device)
% From E: 
% 
% fluent(brokenSwitch(device)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4382).
mpred_prop(brokenSwitch(device),fluent).
fluents([brokenSwitch/1]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4385).
% predicate Ab1(device,time)
% From E: 
% 
% predicate(ab1(device,time)).
mpred_prop(ab1(device,time),predicate).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4385).
predicates([ab1/2]).

% predicate Ab2(room,time)
% From E: 
% 
% predicate(ab2(room,time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4385).
mpred_prop(ab2(room,time),predicate).
predicates([ab2/2]).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4388).
%; Sigma
% [agent,room1,room2,time]
% Initiates(Walk(agent,room1,room2),InRoom(agent,room2),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4390).
% From E: 
% 
% initiates_at(
%    walk(Agent,Room1,Room2), 
%    inRoom(Agent,Room2), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4390).
initiates(walk(Agent,Room1,Room2),
	  inRoom(Agent,Room2)).


% [agent,room1,room2,time]
% room1!=% room2 ->
% Terminates(Walk(agent,room1,room2),InRoom(agent,room1),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4394).
% From E: 
% 
% '->'(
%    Room1\=Room2, 
%    terminates_at(
%       walk(Agent,Room1,Room2), 
%       inRoom(Agent,Room1), 
%       Time)).
if(terminates(walk(Agent,Room1,Room2),
	      at(inRoom(Agent,Room1),Time)),
   {dif(Room1,Room2)}).


% [agent,device,time]
% !Ab1(device,time) ->
% Initiates(TurnOn(agent,device),On(device),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4398).
% From E: 
% 
% '->'(
%    not(ab1(Device,Time)), 
%    initiates_at(
%       turnOn(Agent,Device), 
%       on(Device), 
%       Time)).
if(initiates(turnOn(Agent,Device),
	     at(on(Device),Time)),
   not(ab1(Device,Time))).


%; Delta
% [agent,room1,room2,time]
% Happens(Walk(agent,room1,room2),time) ->
% room1!=room2 &
% HoldsAt(InRoom(agent,room1),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4403).
% From E: 
% 
% '->'(
%    happens(
%       walk(Agent,Room1,Room2), 
%       Time), 
%    ','(
%       Room1\=Room2, 
%       holds(
%          inRoom(Agent,Room1), 
%          Time))).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4403).
if(({dif(Room1, Room2)}, at(inRoom(Agent, Room1), Time)), happens(walk(Agent, Room1, Room2), Time)).


% [agent,device,time]
% Happens(TurnOn(agent,device),time) ->
% {room}%  HoldsAt(InRoom(agent,room),time) &
%        HoldsAt(InRoom(device,room),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4409).
% From E: 
% 
% exists(Room, 
%    '->'(
%       happens(
%          turnOn(Agent,Device), 
%          Time), 
%       ','(
%          holds(
%             inRoom(Agent,Room), 
%             Time), 
%          holds(
%             inRoom(Device,Room), 
%             Time)))).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4409).
exists(Room, if((at(inRoom(Agent, Room), Time), at(inRoom(Device, Room), Time)), happens(turnOn(Agent, Device), Time))).


% [event1,event2,time]
% Happens(event1,time) &
% Happens(event2,time) ->
% event1=event2.
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4414).
% From E: 
% 
% '->'(
%    ','(
%       happens(Event1,Time), 
%       happens(Event2,Time)), 
%    Event1=Event2).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4414).
if(equals(Event1, Event2),  (happens(Event1, Time), happens(Event2, Time))).


%; Theta

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4420).
% Theta: 
% From E: 
% 
% directive(theta).
directive(theta).
 


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4420).
% [device,time]
 % HoldsAt(BrokenSwitch(device),time) -> Ab1(device,time).
% From E: 
% 
% '->'(
%    holds(
%       brokenSwitch(Device), 
%       Time), 
%    ab1(Device,Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4420).
if(ab1(Device,Time),
   at(brokenSwitch(Device),Time)).

% Theta: 
% From E: 
% 
% directive(theta).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4420).
directive(theta).
 


% [device,time]
 % !HoldsAt(PluggedIn(device),time) -> Ab1(device,time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4420).
% From E: 
% 
% '->'(
%    holds(
%       not(pluggedIn(Device)), 
%       Time), 
%    ab1(Device,Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4420).
if(ab1(Device,Time),
   at(not(pluggedIn(Device)),Time)).


%; Psi
% [object,room1,room2,time]
% HoldsAt(InRoom(object,room1),time) &
% HoldsAt(InRoom(object,room2),time) ->
% room1=room2.
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4425).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          inRoom(Object,Room1), 
%          Time), 
%       holds(
%          inRoom(Object,Room2), 
%          Time)), 
%    Room1=Room2).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4425).
if(equals(Room1, Room2),  (at(inRoom(Object, Room1), Time), at(inRoom(Object, Room2), Time))).


%; Gamma
% [tv]
 % !HoldsAt(On(tv),0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4432).
% From E: 
% 
% holds(
%    not(on(Tv)), 0).
initially(not(on(Tv))).


% [tv]
 % !HoldsAt(BrokenSwitch(tv),0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4432).
% From E: 
% 
% holds(
%    not(brokenSwitch(Tv)), 0).
initially(not(brokenSwitch(Tv))).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4434).
% [tv]
 % HoldsAt(PluggedIn(tv),0).
% From E: 
% 
% holds(
%    pluggedIn(Tv), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4434).
initially(pluggedIn(Tv)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4436).
% HoldsAt(InRoom(Nathan,Kitchen),0).
% From E: 
% 
% holds(
%    inRoom(nathan,kitchen), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4436).
initially(inRoom(nathan,kitchen)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4438).
% [time]
% !Ab2(LivingRoom,time) ->
% {tv}%  HoldsAt(InRoom(tv,LivingRoom),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4440).
% From E: 
% 
% exists(Tv, 
%    '->'(
%       not(ab2(livingRoom,Time)), 
%       holds(
%          inRoom(Tv,livingRoom), 
%          Time))).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4440).
exists(Tv,
 if(at(inRoom(Tv,livingRoom),Time),
   not(ab2(livingRoom,Time)))).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4442).
%; goal
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4444).
% {tv} 


% Happens(TurnOn(Nathan,tv),1).
% From E: 
% 
% exists(Tv, 
%    happens(
%       turnOn(nathan,Tv), 1)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4444).
exists(Tv,
 happens(turnOn(nathan,Tv),1)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4446).
%; for two TVs:
%;[tv,time] !HoldsAt(InRoom(tv,Kitchen),time).
%;[tv,time] {room} HoldsAt(InRoom(tv,room),time).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4450).
% completion Theta Ab1
% From E: 
% 
% ':-'(call_pel_directive(completion(theta))).
:- call_pel_directive(completion(theta)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4450).
% From E: 
% 
% ':-'(call_pel_directive(completion(ab1))).
:- call_pel_directive(completion(ab1)).

% completion Theta Ab2
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4450).
% From E: 
% 
% ':-'(call_pel_directive(completion(theta))).
:- call_pel_directive(completion(theta)).
% From E: 
% 
% ':-'(call_pel_directive(completion(ab2))).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4450).
:- call_pel_directive(completion(ab2)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4453).
% range time 0 2
% From E: 
% 
% ':-'(call_pel_directive(range(time,0,2))).
:- call_pel_directive(range(time, 0, 2)).

% range offset 1 1
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4453).
% From E: 
% 
% ':-'(call_pel_directive(range(offset,1,1))).
:- call_pel_directive(range(offset, 1, 1)).
%; End of file.
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%; FILE: examples/Mueller2006/Chapter12/Device.e
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; @book{Mueller:2006,
%;   author = "Erik T. Mueller",
%;   year = "2006",
%;   title = "Commonsense Reasoning",
%;   address = "San Francisco",
%;   publisher = "Morgan Kaufmann/Elsevier",
%; }
%;

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4482).
% load foundations/Root.e
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/Root.e'))).
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4482).
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/EC.e'))).
:- call_pel_directive(load('foundations/EC.e')).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4485).
% sort agent
% From E: 
% 
% sort(agent).
sort(agent).

% sort device
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4485).
% From E: 
% 
% sort(device).
sort(device).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4488).
% agent Nathan
% From E: 
% 
% t(agent,nathan).
isa(nathan,agent).

% device Device1, AntiqueDevice1
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4488).
% From E: 
% 
% t(device,device1).
isa(device1,device).
% From E: 
% 
% t(device,antiqueDevice1).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4488).
isa(antiqueDevice1,device).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4491).
% predicate Ab1(device,time)
% From E: 
% 
% predicate(ab1(device,time)).
mpred_prop(ab1(device,time),predicate).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4491).
predicates([ab1/2]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4493).
% fluent On(device)
% From E: 
% 
% fluent(on(device)).
mpred_prop(on(device),fluent).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4493).
fluents([on/1]).

% fluent PluggedIn(device)
% From E: 
% 
% fluent(pluggedIn(device)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4493).
mpred_prop(pluggedIn(device),fluent).
fluents([pluggedIn/1]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4495).
% fluent BrokenSwitch(device)
% From E: 
% 
% fluent(brokenSwitch(device)).
mpred_prop(brokenSwitch(device),fluent).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4495).
fluents([brokenSwitch/1]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4497).
% event TurnOn(agent,device)
% From E: 
% 
% event(turnOn(agent,device)).
events([turnOn/2]).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4497).
mpred_prop(turnOn(agent,device),action).
actions([turnOn/2]).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4499).
%; Sigma
% [agent,device,time]
% !Ab1(device,time) ->
% Initiates(TurnOn(agent,device),On(device),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4501).
% From E: 
% 
% '->'(
%    not(ab1(Device,Time)), 
%    initiates_at(
%       turnOn(Agent,Device), 
%       on(Device), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4501).
if(initiates(turnOn(Agent,Device),
	     at(on(Device),Time)),
   not(ab1(Device,Time))).


%; Delta


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4507).
% Happens(TurnOn(Nathan,Device1),0).
% From E: 
% 
% happens(
%    turnOn(nathan,device1), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4507).
observe(at(turnOn(nathan,device1),0)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4509).
%; Theta

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4511).
% Theta: 
% From E: 
% 
% directive(theta).
directive(theta).
 


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4511).
% [device,time]
 % HoldsAt(BrokenSwitch(device),time) -> Ab1(device,time).
% From E: 
% 
% '->'(
%    holds(
%       brokenSwitch(Device), 
%       Time), 
%    ab1(Device,Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4511).
if(ab1(Device,Time),
   at(brokenSwitch(Device),Time)).

% Theta: 
% From E: 
% 
% directive(theta).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4511).
directive(theta).
 


% [device,time]
 % !HoldsAt(PluggedIn(device),time) -> Ab1(device,time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4511).
% From E: 
% 
% '->'(
%    holds(
%       not(pluggedIn(Device)), 
%       Time), 
%    ab1(Device,Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4511).
if(ab1(Device,Time),
   at(not(pluggedIn(Device)),Time)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4513).
% Theta: 
% From E: 
% 
% directive(theta).
directive(theta).
 


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4513).
% [time]
 % Ab1(AntiqueDevice1,time).
% From E: 
% 
% ab1(antiqueDevice1,Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4513).
ab1(antiqueDevice1,Time).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4515).
%; Gamma


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4517).
% !HoldsAt(On(Device1),0).
% From E: 
% 
% holds(
%    not(on(device1)), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4517).
initially(not(on(device1))).


% !HoldsAt(BrokenSwitch(Device1),0).
% From E: 
% 
% holds(
%    not(brokenSwitch(device1)), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4517).
initially(not(brokenSwitch(device1))).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4519).
% HoldsAt(PluggedIn(Device1),0).
% From E: 
% 
% holds(
%    pluggedIn(device1), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4519).
initially(pluggedIn(device1)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4521).
%; added:
% [time]
 % !HoldsAt(On(AntiqueDevice1),time).
% From E: 
% 
% holds(
%    not(on(antiqueDevice1)), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4521).
at(not(on(antiqueDevice1)),Time).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4523).
% [time]
 % HoldsAt(PluggedIn(AntiqueDevice1),time).
% From E: 
% 
% holds(
%    pluggedIn(antiqueDevice1), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4523).
at(pluggedIn(antiqueDevice1),Time).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4525).
%; entailed:
%; HoldsAt(On(Device1),1).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4528).
% completion Theta Ab1
% From E: 
% 
% ':-'(call_pel_directive(completion(theta))).
:- call_pel_directive(completion(theta)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4528).
% From E: 
% 
% ':-'(call_pel_directive(completion(ab1))).
:- call_pel_directive(completion(ab1)).

% completion Happens
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4528).
% From E: 
% 
% ':-'(call_pel_directive(completion(happens))).
:- call_pel_directive(completion(happens)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4531).
% range time 0 1
% From E: 
% 
% ':-'(call_pel_directive(range(time,0,1))).
:- call_pel_directive(range(time, 0, 1)).

% range offset 1 1
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4531).
% From E: 
% 
% ':-'(call_pel_directive(range(offset,1,1))).
:- call_pel_directive(range(offset, 1, 1)).
%; End of file.
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%; FILE: examples/Mueller2006/Chapter12/ErraticDevice.e
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; @book{Mueller:2006,
%;   author = "Erik T. Mueller",
%;   year = "2006",
%;   title = "Commonsense Reasoning",
%;   address = "San Francisco",
%;   publisher = "Morgan Kaufmann/Elsevier",
%; }
%;

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4560).
% load foundations/Root.e
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/Root.e'))).
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4560).
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/EC.e'))).
:- call_pel_directive(load('foundations/EC.e')).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4563).
% sort agent
% From E: 
% 
% sort(agent).
sort(agent).

% sort device
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4563).
% From E: 
% 
% sort(device).
sort(device).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4566).
% agent Nathan
% From E: 
% 
% t(agent,nathan).
isa(nathan,agent).

% device Device1
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4566).
% From E: 
% 
% t(device,device1).
isa(device1,device).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4569).
% predicate Ab1(device,time)
% From E: 
% 
% predicate(ab1(device,time)).
mpred_prop(ab1(device,time),predicate).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4569).
predicates([ab1/2]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4571).
% fluent On(device)
% From E: 
% 
% fluent(on(device)).
mpred_prop(on(device),fluent).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4571).
fluents([on/1]).

% fluent PluggedIn(device)
% From E: 
% 
% fluent(pluggedIn(device)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4571).
mpred_prop(pluggedIn(device),fluent).
fluents([pluggedIn/1]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4573).
% fluent BrokenSwitch(device)
% From E: 
% 
% fluent(brokenSwitch(device)).
mpred_prop(brokenSwitch(device),fluent).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4573).
fluents([brokenSwitch/1]).

% fluent Erratic(device)
% From E: 
% 
% fluent(erratic(device)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4573).
mpred_prop(erratic(device),fluent).
fluents([erratic/1]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4576).
% fluent DeterminingFluent(device)
% From E: 
% 
% fluent(determiningFluent(device)).
mpred_prop(determiningFluent(device),fluent).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4576).
fluents([determiningFluent/1]).

% noninertial DeterminingFluent
% From E: 
% 
% ':-'(call_pel_directive(noninertial(determiningFluent))).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4576).
:- call_pel_directive(noninertial(determiningFluent)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4579).
% event TurnOn(agent,device)
% From E: 
% 
% event(turnOn(agent,device)).
events([turnOn/2]).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4579).
mpred_prop(turnOn(agent,device),action).
actions([turnOn/2]).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4581).
%; Sigma
% [agent,device,time]
% !Ab1(device,time) ->
% Initiates(TurnOn(agent,device),On(device),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4583).
% From E: 
% 
% '->'(
%    not(ab1(Device,Time)), 
%    initiates_at(
%       turnOn(Agent,Device), 
%       on(Device), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4583).
if(initiates(turnOn(Agent,Device),
	     at(on(Device),Time)),
   not(ab1(Device,Time))).


%; Delta


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4589).
% Happens(TurnOn(Nathan,Device1),0).
% From E: 
% 
% happens(
%    turnOn(nathan,device1), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4589).
observe(at(turnOn(nathan,device1),0)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4591).
%; Theta

% Theta: 
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4593).
% From E: 
% 
% directive(theta).
directive(theta).
 


% [device,time]
 % HoldsAt(BrokenSwitch(device),time) -> Ab1(device,time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4593).
% From E: 
% 
% '->'(
%    holds(
%       brokenSwitch(Device), 
%       Time), 
%    ab1(Device,Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4593).
if(ab1(Device,Time),
   at(brokenSwitch(Device),Time)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4595).
% Theta: 
% From E: 
% 
% directive(theta).
directive(theta).
 


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4595).
% [device,time]
% HoldsAt(Erratic(device),time) & HoldsAt(DeterminingFluent(device),time) ->
% Ab1(device,time).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          erratic(Device), 
%          Time), 
%       holds(
%          determiningFluent(Device), 
%          Time)), 
%    ab1(Device,Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4595).
if(ab1(Device, Time),  (at(erratic(Device), Time), at(determiningFluent(Device), Time))).

% Theta: 
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4598).
% From E: 
% 
% directive(theta).
directive(theta).
 


% [device,time]
 % !HoldsAt(PluggedIn(device),time) -> Ab1(device,time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4598).
% From E: 
% 
% '->'(
%    holds(
%       not(pluggedIn(Device)), 
%       Time), 
%    ab1(Device,Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4598).
if(ab1(Device,Time),
   at(not(pluggedIn(Device)),Time)).


%; Gamma


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4603).
% !HoldsAt(On(Device1),0).
% From E: 
% 
% holds(
%    not(on(device1)), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4603).
initially(not(on(device1))).


% !HoldsAt(BrokenSwitch(Device1),0).
% From E: 
% 
% holds(
%    not(brokenSwitch(device1)), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4603).
initially(not(brokenSwitch(device1))).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4605).
% HoldsAt(Erratic(Device1),0).
% From E: 
% 
% holds(
%    erratic(device1), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4605).
initially(erratic(device1)).


% HoldsAt(PluggedIn(Device1),0).
% From E: 
% 
% holds(
%    pluggedIn(device1), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4605).
initially(pluggedIn(device1)).


%; added:


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4609).
% HoldsAt(DeterminingFluent(Device1),1).
% From E: 
% 
% holds(
%    determiningFluent(device1), 1).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4609).
at(determiningFluent(device1),1).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4611).
% completion Theta Ab1
% From E: 
% 
% ':-'(call_pel_directive(completion(theta))).
:- call_pel_directive(completion(theta)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4611).
% From E: 
% 
% ':-'(call_pel_directive(completion(ab1))).
:- call_pel_directive(completion(ab1)).

% completion Happens
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4611).
% From E: 
% 
% ':-'(call_pel_directive(completion(happens))).
:- call_pel_directive(completion(happens)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4614).
% range time 0 1
% From E: 
% 
% ':-'(call_pel_directive(range(time,0,1))).
:- call_pel_directive(range(time, 0, 1)).

% range offset 1 1
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4614).
% From E: 
% 
% ':-'(call_pel_directive(range(offset,1,1))).
:- call_pel_directive(range(offset, 1, 1)).
%; End of file.
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%; FILE: examples/Mueller2006/Chapter12/DefaultEvent.e
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; @book{Mueller:2006,
%;   author = "Erik T. Mueller",
%;   year = "2006",
%;   title = "Commonsense Reasoning",
%;   address = "San Francisco",
%;   publisher = "Morgan Kaufmann/Elsevier",
%; }
%;

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4643).
% option modeldiff on
% From E: 
% 
% ':-'(call_pel_directive(option(modeldiff,on))).
:- call_pel_directive(option(modeldiff, on)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4645).
% load foundations/Root.e
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/Root.e'))).
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4645).
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/EC.e'))).
:- call_pel_directive(load('foundations/EC.e')).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4648).
% sort agent
% From E: 
% 
% sort(agent).
sort(agent).

% sort clock
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4648).
% From E: 
% 
% sort(clock).
sort(clock).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4651).
% fluent Beeping(clock)
% From E: 
% 
% fluent(beeping(clock)).
mpred_prop(beeping(clock),fluent).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4651).
fluents([beeping/1]).

% fluent AlarmTime(clock,time)
% From E: 
% 
% fluent(alarmTime(clock,time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4651).
mpred_prop(alarmTime(clock,time),fluent).
fluents([alarmTime/2]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4653).
% fluent AlarmOn(clock)
% From E: 
% 
% fluent(alarmOn(clock)).
mpred_prop(alarmOn(clock),fluent).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4653).
fluents([alarmOn/1]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4655).
% event SetAlarmTime(agent,clock,time)
% From E: 
% 
% event(setAlarmTime(agent,clock,time)).
events([setAlarmTime/3]).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4655).
mpred_prop(setAlarmTime(agent,clock,time),action).
actions([setAlarmTime/3]).

% event StartBeeping(clock)
% From E: 
% 
% event(startBeeping(clock)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4655).
mpred_prop(startBeeping(clock),event).
events([startBeeping/1]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4657).
% event TurnOnAlarm(agent,clock)
% From E: 
% 
% event(turnOnAlarm(agent,clock)).
events([turnOnAlarm/2]).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4657).
mpred_prop(turnOnAlarm(agent,clock),action).
actions([turnOnAlarm/2]).

% event TurnOffAlarm(agent,clock)
% From E: 
% 
% event(turnOffAlarm(agent,clock)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4657).
events([turnOffAlarm/2]).
mpred_prop(turnOffAlarm(agent,clock),action).
actions([turnOffAlarm/2]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4660).
% predicate Ab1(clock,time)
% From E: 
% 
% predicate(ab1(clock,time)).
mpred_prop(ab1(clock,time),predicate).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4660).
predicates([ab1/2]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4662).
% agent Nathan
% From E: 
% 
% t(agent,nathan).
isa(nathan,agent).

% clock Clock
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4662).
% From E: 
% 
% t(clock,clock).
isa(clock,clock).
%; Sigma
% [agent,clock,time1,time2,time]
% HoldsAt(AlarmTime(clock,time1),time) &
% time1!=time2 ->
% Initiates(SetAlarmTime(agent,clock,time2),AlarmTime(clock,time2),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4667).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          alarmTime(Clock,Time1), 
%          Time), 
%       Time1\=Time2), 
%    initiates_at(
%       setAlarmTime(Agent,Clock,Time2), 
%       alarmTime(Clock,Time2), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4667).
if(initiates(setAlarmTime(Agent, Clock, Time2), at(alarmTime(Clock, Time2), Time)),  (at(alarmTime(Clock, Time1), Time), {dif(Time1, Time2)})).


% [agent,clock,time1,time2,time]
% HoldsAt(AlarmTime(clock,time1),time) &
% time1!=time2 ->
% Terminates(SetAlarmTime(agent,clock,time2),AlarmTime(clock,time1),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4673).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          alarmTime(Clock,Time1), 
%          Time), 
%       Time1\=Time2), 
%    terminates_at(
%       setAlarmTime(Agent,Clock,Time2), 
%       alarmTime(Clock,Time1), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4673).
if(terminates(setAlarmTime(Agent, Clock, Time2), at(alarmTime(Clock, Time1), Time)),  (at(alarmTime(Clock, Time1), Time), {dif(Time1, Time2)})).


% [agent,clock,time]
% Initiates(TurnOnAlarm(agent,clock),AlarmOn(clock),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4678).
% From E: 
% 
% initiates_at(
%    turnOnAlarm(Agent,Clock), 
%    alarmOn(Clock), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4678).
initiates(turnOnAlarm(Agent,Clock),alarmOn(Clock)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4680).
% [agent,clock,time]
% Terminates(TurnOffAlarm(agent,clock),AlarmOn(clock),time).
% From E: 
% 
% terminates_at(
%    turnOffAlarm(Agent,Clock), 
%    alarmOn(Clock), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4680).
terminates(turnOffAlarm(Agent,Clock),alarmOn(Clock)).


% [clock,time]
% Initiates(StartBeeping(clock),Beeping(clock),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4684).
% From E: 
% 
% initiates_at(
%    startBeeping(Clock), 
%    beeping(Clock), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4684).
initiates(startBeeping(Clock),beeping(Clock)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4686).
% [agent,clock,time]
% Terminates(TurnOffAlarm(agent,clock),Beeping(clock),time).
% From E: 
% 
% terminates_at(
%    turnOffAlarm(Agent,Clock), 
%    beeping(Clock), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4686).
terminates(turnOffAlarm(Agent,Clock),beeping(Clock)).


%; Delta
% [clock,time]
% HoldsAt(AlarmTime(clock,time),time) &
% HoldsAt(AlarmOn(clock),time) &
% !Ab1(clock,time) ->
% Happens(StartBeeping(clock),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4691).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          alarmTime(Clock,Time), 
%          Time), 
%       ','(
%          holds(
%             alarmOn(Clock), 
%             Time), 
%          not(ab1(Clock,Time)))), 
%    happens(
%       startBeeping(Clock), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4691).
if(happens(startBeeping(Clock), Time),  (at(alarmTime(Clock, Time), Time), at(alarmOn(Clock), Time), not(ab1(Clock, Time)))).


% Happens(SetAlarmTime(Nathan,Clock,2),0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4696).
% From E: 
% 
% happens(
%    setAlarmTime(nathan,clock,2), 0).
observe(at(setAlarmTime(nathan,clock,2),0)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4698).
% Happens(TurnOnAlarm(Nathan,Clock),1).
% From E: 
% 
% happens(
%    turnOnAlarm(nathan,clock), 1).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4698).
observe(at(turnOnAlarm(nathan,clock),1)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4700).
%; Psi
% [clock,time1,time2,time]
% HoldsAt(AlarmTime(clock,time1),time) &
% HoldsAt(AlarmTime(clock,time2),time) ->
% time1=time2.
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4702).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          alarmTime(Clock,Time1), 
%          Time), 
%       holds(
%          alarmTime(Clock,Time2), 
%          Time)), 
%    Time1=Time2).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4702).
if(equals(Time1, Time2),  (at(alarmTime(Clock, Time1), Time), at(alarmTime(Clock, Time2), Time))).


%; Gamma


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4709).
% !HoldsAt(AlarmOn(Clock),0).
% From E: 
% 
% holds(
%    not(alarmOn(clock)), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4709).
initially(not(alarmOn(clock))).


% !HoldsAt(Beeping(Clock),0).
% From E: 
% 
% holds(
%    not(beeping(clock)), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4709).
initially(not(beeping(clock))).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4711).
% HoldsAt(AlarmTime(Clock,3),0).
% From E: 
% 
% holds(
%    alarmTime(clock,3), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4711).
initially(alarmTime(clock,3)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4713).
% completion Happens
% From E: 
% 
% ':-'(call_pel_directive(completion(happens))).
:- call_pel_directive(completion(happens)).

% completion Theta Ab1
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4713).
% From E: 
% 
% ':-'(call_pel_directive(completion(theta))).
:- call_pel_directive(completion(theta)).
% From E: 
% 
% ':-'(call_pel_directive(completion(ab1))).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4713).
:- call_pel_directive(completion(ab1)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4716).
% range time 0 3
% From E: 
% 
% ':-'(call_pel_directive(range(time,0,3))).
:- call_pel_directive(range(time, 0, 3)).

% range offset 1 1
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4716).
% From E: 
% 
% ':-'(call_pel_directive(range(offset,1,1))).
:- call_pel_directive(range(offset, 1, 1)).
%; End of file.
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%; FILE: examples/Mueller2006/Chapter12/MethodD.e
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; Method (D)
%;
%; @book{Mueller:2006,
%;   author = "Erik T. Mueller",
%;   year = "2006",
%;   title = "Commonsense Reasoning",
%;   address = "San Francisco",
%;   publisher = "Morgan Kaufmann/Elsevier",
%; }
%;

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4747).
% load foundations/Root.e
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/Root.e'))).
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4747).
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/EC.e'))).
:- call_pel_directive(load('foundations/EC.e')).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4750).
% sort object
% From E: 
% 
% sort(object).
sort(object).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4752).
% object A,B
% From E: 
% 
% t(object,a).
isa(a,object).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4752).
% From E: 
% 
% t(object,b).
isa(b,object).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4754).
% fluent P(object)
% From E: 
% 
% fluent(p(object)).
mpred_prop(p(object),fluent).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4754).
fluents([p/1]).

% fluent Q(object)
% From E: 
% 
% fluent(q(object)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4754).
mpred_prop(q(object),fluent).
fluents([q/1]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4756).
% fluent R(object)
% From E: 
% 
% fluent(r(object)).
mpred_prop(r(object),fluent).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4756).
fluents([r/1]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4758).
% predicate Ab1(object,time)
% From E: 
% 
% predicate(ab1(object,time)).
mpred_prop(ab1(object,time),predicate).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4758).
predicates([ab1/2]).

% predicate Ab2(object,time)
% From E: 
% 
% predicate(ab2(object,time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4758).
mpred_prop(ab2(object,time),predicate).
predicates([ab2/2]).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4761).
% [object,time]
% HoldsAt(P(object),time) & !Ab1(object,time) ->
% HoldsAt(Q(object),time).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          p(Object), 
%          Time), 
%       not(ab1(Object,Time))), 
%    holds(
%       q(Object), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4761).
if(at(q(Object), Time),  (at(p(Object), Time), not(ab1(Object, Time)))).


% [object,time]
% HoldsAt(R(object),time) & !Ab2(object,time) ->
% !HoldsAt(Q(object),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4766).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          r(Object), 
%          Time), 
%       not(ab2(Object,Time))), 
%    holds(
%       not(q(Object)), 
%       Time)).
if(at(not(q(Object)), Time),  (at(r(Object), Time), not(ab2(Object, Time)))).


% [object,time]
% HoldsAt(R(object),time) -> HoldsAt(P(object),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4770).
% From E: 
% 
% '->'(
%    holds(
%       r(Object), 
%       Time), 
%    holds(
%       p(Object), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4770).
if(at(p(Object),Time),at(r(Object),Time)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4772).
% HoldsAt(R(A),0).
% From E: 
% 
% holds(
%    r(a), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4772).
initially(r(a)).


% HoldsAt(P(B),0).
% From E: 
% 
% holds(
%    p(b), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4772).
initially(p(b)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4774).
% !HoldsAt(R(B),0).
% From E: 
% 
% holds(
%    not(r(b)), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4774).
initially(not(r(b))).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4776).
% Theta: 
% From E: 
% 
% directive(theta).
directive(theta).
 


% [object,time]
% HoldsAt(R(object),time) -> Ab1(object,time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4778).
% From E: 
% 
% '->'(
%    holds(
%       r(Object), 
%       Time), 
%    ab1(Object,Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4778).
if(ab1(Object,Time),at(r(Object),Time)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4780).
% range time 0 0
% From E: 
% 
% ':-'(call_pel_directive(range(time,0,0))).
:- call_pel_directive(range(time, 0, 0)).

% range offset 1 1
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4780).
% From E: 
% 
% ':-'(call_pel_directive(range(offset,1,1))).
:- call_pel_directive(range(offset, 1, 1)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4783).
% completion Theta Ab1
% From E: 
% 
% ':-'(call_pel_directive(completion(theta))).
:- call_pel_directive(completion(theta)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4783).
% From E: 
% 
% ':-'(call_pel_directive(completion(ab1))).
:- call_pel_directive(completion(ab1)).

% completion Theta Ab2
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4783).
% From E: 
% 
% ':-'(call_pel_directive(completion(theta))).
:- call_pel_directive(completion(theta)).
% From E: 
% 
% ':-'(call_pel_directive(completion(ab2))).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4783).
:- call_pel_directive(completion(ab2)).
%; End of file.
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%; FILE: examples/Mueller2006/Chapter12/BrokenDevice.e
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; @book{Mueller:2006,
%;   author = "Erik T. Mueller",
%;   year = "2006",
%;   title = "Commonsense Reasoning",
%;   address = "San Francisco",
%;   publisher = "Morgan Kaufmann/Elsevier",
%; }
%;

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4812).
% load foundations/Root.e
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/Root.e'))).
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4812).
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/EC.e'))).
:- call_pel_directive(load('foundations/EC.e')).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4815).
% sort agent
% From E: 
% 
% sort(agent).
sort(agent).

% sort device
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4815).
% From E: 
% 
% sort(device).
sort(device).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4818).
% agent Nathan
% From E: 
% 
% t(agent,nathan).
isa(nathan,agent).

% device Device1
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4818).
% From E: 
% 
% t(device,device1).
isa(device1,device).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4821).
% predicate Ab1(device,time)
% From E: 
% 
% predicate(ab1(device,time)).
mpred_prop(ab1(device,time),predicate).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4821).
predicates([ab1/2]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4823).
% fluent On(device)
% From E: 
% 
% fluent(on(device)).
mpred_prop(on(device),fluent).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4823).
fluents([on/1]).

% fluent PluggedIn(device)
% From E: 
% 
% fluent(pluggedIn(device)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4823).
mpred_prop(pluggedIn(device),fluent).
fluents([pluggedIn/1]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4825).
% fluent BrokenSwitch(device)
% From E: 
% 
% fluent(brokenSwitch(device)).
mpred_prop(brokenSwitch(device),fluent).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4825).
fluents([brokenSwitch/1]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4827).
% event TurnOn(agent,device)
% From E: 
% 
% event(turnOn(agent,device)).
events([turnOn/2]).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4827).
mpred_prop(turnOn(agent,device),action).
actions([turnOn/2]).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4829).
%; Sigma
% [agent,device,time]
% !Ab1(device,time) ->
% Initiates(TurnOn(agent,device),On(device),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4831).
% From E: 
% 
% '->'(
%    not(ab1(Device,Time)), 
%    initiates_at(
%       turnOn(Agent,Device), 
%       on(Device), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4831).
if(initiates(turnOn(Agent,Device),
	     at(on(Device),Time)),
   not(ab1(Device,Time))).


%; Delta


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4837).
% Happens(TurnOn(Nathan,Device1),0).
% From E: 
% 
% happens(
%    turnOn(nathan,device1), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4837).
observe(at(turnOn(nathan,device1),0)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4839).
%; Theta

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4841).
% Theta: 
% From E: 
% 
% directive(theta).
directive(theta).
 


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4841).
% [device,time]
 % HoldsAt(BrokenSwitch(device),time) -> Ab1(device,time).
% From E: 
% 
% '->'(
%    holds(
%       brokenSwitch(Device), 
%       Time), 
%    ab1(Device,Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4841).
if(ab1(Device,Time),
   at(brokenSwitch(Device),Time)).

% Theta: 
% From E: 
% 
% directive(theta).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4841).
directive(theta).
 


% [device,time]
 % !HoldsAt(PluggedIn(device),time) -> Ab1(device,time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4841).
% From E: 
% 
% '->'(
%    holds(
%       not(pluggedIn(Device)), 
%       Time), 
%    ab1(Device,Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4841).
if(ab1(Device,Time),
   at(not(pluggedIn(Device)),Time)).


%; Gamma


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4846).
% !HoldsAt(On(Device1),0).
% From E: 
% 
% holds(
%    not(on(device1)), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4846).
initially(not(on(device1))).


% HoldsAt(BrokenSwitch(Device1),0).
% From E: 
% 
% holds(
%    brokenSwitch(device1), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4846).
initially(brokenSwitch(device1)).


%; added:


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4850).
% HoldsAt(PluggedIn(Device1),0).
% From E: 
% 
% holds(
%    pluggedIn(device1), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4850).
initially(pluggedIn(device1)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4852).
%; entailed:
%; !HoldsAt(On(Device1),1).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4855).
% completion Theta Ab1
% From E: 
% 
% ':-'(call_pel_directive(completion(theta))).
:- call_pel_directive(completion(theta)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4855).
% From E: 
% 
% ':-'(call_pel_directive(completion(ab1))).
:- call_pel_directive(completion(ab1)).

% completion Happens
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4855).
% From E: 
% 
% ':-'(call_pel_directive(completion(happens))).
:- call_pel_directive(completion(happens)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4858).
% range time 0 1
% From E: 
% 
% ':-'(call_pel_directive(range(time,0,1))).
:- call_pel_directive(range(time, 0, 1)).

% range offset 1 1
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4858).
% From E: 
% 
% ':-'(call_pel_directive(range(offset,1,1))).
:- call_pel_directive(range(offset, 1, 1)).
%; End of file.
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%; FILE: examples/Mueller2006/Chapter12/MethodB.e
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; Method (D)
%;
%; @book{Mueller:2006,
%;   author = "Erik T. Mueller",
%;   year = "2006",
%;   title = "Commonsense Reasoning",
%;   address = "San Francisco",
%;   publisher = "Morgan Kaufmann/Elsevier",
%; }
%;

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4889).
% load foundations/Root.e
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/Root.e'))).
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4889).
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/EC.e'))).
:- call_pel_directive(load('foundations/EC.e')).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4892).
% sort object
% From E: 
% 
% sort(object).
sort(object).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4894).
% object A,B
% From E: 
% 
% t(object,a).
isa(a,object).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4894).
% From E: 
% 
% t(object,b).
isa(b,object).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4896).
% fluent P(object)
% From E: 
% 
% fluent(p(object)).
mpred_prop(p(object),fluent).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4896).
fluents([p/1]).

% fluent Q(object)
% From E: 
% 
% fluent(q(object)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4896).
mpred_prop(q(object),fluent).
fluents([q/1]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4898).
% predicate Ab(object,time)
% From E: 
% 
% predicate(ab(object,time)).
mpred_prop(ab(object,time),predicate).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4898).
predicates([ab/2]).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4900).
% [object,time]
% HoldsAt(P(object),time) & !Ab(object,time) ->
% HoldsAt(Q(object),time).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          p(Object), 
%          Time), 
%       not(ab(Object,Time))), 
%    holds(
%       q(Object), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4900).
if(at(q(Object), Time),  (at(p(Object), Time), not(ab(Object, Time)))).


% HoldsAt(P(A),0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4903).
% From E: 
% 
% holds(
%    p(a), 0).
initially(p(a)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4905).
% HoldsAt(P(B),0).
% From E: 
% 
% holds(
%    p(b), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4905).
initially(p(b)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4907).
% Theta: 
% From E: 
% 
% directive(theta).
directive(theta).
 


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4907).
% Ab(A,0).
% From E: 
% 
% ab(a,0).
ab(a,0).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4909).
% range time 0 0
% From E: 
% 
% ':-'(call_pel_directive(range(time,0,0))).
:- call_pel_directive(range(time, 0, 0)).

% range offset 1 1
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4909).
% From E: 
% 
% ':-'(call_pel_directive(range(offset,1,1))).
:- call_pel_directive(range(offset, 1, 1)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4912).
% completion Theta Ab
% From E: 
% 
% ':-'(call_pel_directive(completion(theta))).
:- call_pel_directive(completion(theta)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4912).
% From E: 
% 
% ':-'(call_pel_directive(completion(ab))).
:- call_pel_directive(completion(ab)).
%; End of file.
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%; FILE: examples/Mueller2006/Chapter13/ModelFinding.e
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; @book{Mueller:2006,
%;   author = "Erik T. Mueller",
%;   year = "2006",
%;   title = "Commonsense Reasoning",
%;   address = "San Francisco",
%;   publisher = "Morgan Kaufmann/Elsevier",
%; }
%;

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4940).
% load foundations/Root.e
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/Root.e'))).
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4940).
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/EC.e'))).
:- call_pel_directive(load('foundations/EC.e')).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4943).
% sort agent
% From E: 
% 
% sort(agent).
sort(agent).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4945).
% fluent Awake(agent)
% From E: 
% 
% fluent(awake(agent)).
mpred_prop(awake(agent),fluent).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4945).
fluents([awake/1]).

% event WakeUp(agent)
% From E: 
% 
% event(wakeUp(agent)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4945).
events([wakeUp/1]).
mpred_prop(wakeUp(agent),action).
actions([wakeUp/1]).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4948).
% [agent,time]
 % Initiates(WakeUp(agent),Awake(agent),time).
% From E: 
% 
% initiates_at(
%    wakeUp(Agent), 
%    awake(Agent), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4948).
initiates(wakeUp(Agent),awake(Agent)).


% [agent,time]
 % Happens(WakeUp(agent),time) -> !HoldsAt(Awake(agent),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4948).
% From E: 
% 
% '->'(
%    happens(
%       wakeUp(Agent), 
%       Time), 
%    holds(
%       not(awake(Agent)), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4948).
if(at(not(awake(Agent)),Time),
   happens(wakeUp(Agent),Time)).

% agent James
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4950).
% From E: 
% 
% t(agent,james).
isa(james,agent).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4953).
% range time 0 1
% From E: 
% 
% ':-'(call_pel_directive(range(time,0,1))).
:- call_pel_directive(range(time, 0, 1)).

% range offset 1 1
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4953).
% From E: 
% 
% ':-'(call_pel_directive(range(offset,1,1))).
:- call_pel_directive(range(offset, 1, 1)).
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%; FILE: examples/Mueller2006/Chapter13/Postdiction.e
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; @book{Mueller:2006,
%;   author = "Erik T. Mueller",
%;   year = "2006",
%;   title = "Commonsense Reasoning",
%;   address = "San Francisco",
%;   publisher = "Morgan Kaufmann/Elsevier",
%; }
%;

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4980).
% load foundations/Root.e
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/Root.e'))).
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4980).
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/EC.e'))).
:- call_pel_directive(load('foundations/EC.e')).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4983).
% sort agent
% From E: 
% 
% sort(agent).
sort(agent).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4985).
% fluent Awake(agent)
% From E: 
% 
% fluent(awake(agent)).
mpred_prop(awake(agent),fluent).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4985).
fluents([awake/1]).

% event WakeUp(agent)
% From E: 
% 
% event(wakeUp(agent)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4985).
events([wakeUp/1]).
mpred_prop(wakeUp(agent),action).
actions([wakeUp/1]).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4988).
% [agent,time]
 % Initiates(WakeUp(agent),Awake(agent),time).
% From E: 
% 
% initiates_at(
%    wakeUp(Agent), 
%    awake(Agent), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4988).
initiates(wakeUp(Agent),awake(Agent)).


% [agent,time]
 % Happens(WakeUp(agent),time) -> !HoldsAt(Awake(agent),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4988).
% From E: 
% 
% '->'(
%    happens(
%       wakeUp(Agent), 
%       Time), 
%    holds(
%       not(awake(Agent)), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4988).
if(at(not(awake(Agent)),Time),
   happens(wakeUp(Agent),Time)).

% agent James
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4990).
% From E: 
% 
% t(agent,james).
isa(james,agent).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4992).
% Delta: 
% From E: 
% 
% directive(delta).
directive(delta).
 


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4992).
% Happens(WakeUp(James),0).
% From E: 
% 
% happens(
%    wakeUp(james), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4992).
observe(at(wakeUp(james),0)).


% HoldsAt(Awake(James),1).
% From E: 
% 
% holds(
%    awake(james), 1).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4992).
at(awake(james),1).

% completion Delta Happens
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4994).
% From E: 
% 
% ':-'(call_pel_directive(completion(delta))).
:- call_pel_directive(completion(delta)).
% From E: 
% 
% ':-'(call_pel_directive(completion(happens))).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4994).
:- call_pel_directive(completion(happens)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4997).
% range time 0 1
% From E: 
% 
% ':-'(call_pel_directive(range(time,0,1))).
:- call_pel_directive(range(time, 0, 1)).

% range offset 1 1
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',4997).
% From E: 
% 
% ':-'(call_pel_directive(range(offset,1,1))).
:- call_pel_directive(range(offset, 1, 1)).
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%; FILE: examples/Mueller2006/Chapter13/Deduction2.e
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; @book{Mueller:2006,
%;   author = "Erik T. Mueller",
%;   year = "2006",
%;   title = "Commonsense Reasoning",
%;   address = "San Francisco",
%;   publisher = "Morgan Kaufmann/Elsevier",
%; }
%;

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5024).
% option timediff off
% From E: 
% 
% ':-'(call_pel_directive(option(timediff,off))).
:- call_pel_directive(option(timediff, off)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5026).
% load foundations/Root.e
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/Root.e'))).
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5026).
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/EC.e'))).
:- call_pel_directive(load('foundations/EC.e')).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5029).
% sort agent
% From E: 
% 
% sort(agent).
sort(agent).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5031).
% fluent Awake(agent)
% From E: 
% 
% fluent(awake(agent)).
mpred_prop(awake(agent),fluent).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5031).
fluents([awake/1]).

% event WakeUp(agent)
% From E: 
% 
% event(wakeUp(agent)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5031).
events([wakeUp/1]).
mpred_prop(wakeUp(agent),action).
actions([wakeUp/1]).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5034).
% [agent,time]
 % Initiates(WakeUp(agent),Awake(agent),time).
% From E: 
% 
% initiates_at(
%    wakeUp(Agent), 
%    awake(Agent), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5034).
initiates(wakeUp(Agent),awake(Agent)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5036).
% agent James
% From E: 
% 
% t(agent,james).
isa(james,agent).


% !HoldsAt(Awake(James),0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5036).
% From E: 
% 
% holds(
%    not(awake(james)), 0).
initially(not(awake(james))).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5038).
% Delta: 
% From E: 
% 
% directive(delta).
directive(delta).
 


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5038).
% Happens(WakeUp(James),0).
% From E: 
% 
% happens(
%    wakeUp(james), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5038).
observe(at(wakeUp(james),0)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5040).
% completion Delta Happens
% From E: 
% 
% ':-'(call_pel_directive(completion(delta))).
:- call_pel_directive(completion(delta)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5040).
% From E: 
% 
% ':-'(call_pel_directive(completion(happens))).
:- call_pel_directive(completion(happens)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5042).
% range time 0 1
% From E: 
% 
% ':-'(call_pel_directive(range(time,0,1))).
:- call_pel_directive(range(time, 0, 1)).

% range offset 1 1
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5042).
% From E: 
% 
% ':-'(call_pel_directive(range(offset,1,1))).
:- call_pel_directive(range(offset, 1, 1)).
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%; FILE: examples/Mueller2006/Chapter13/Deduction1.e
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; @book{Mueller:2006,
%;   author = "Erik T. Mueller",
%;   year = "2006",
%;   title = "Commonsense Reasoning",
%;   address = "San Francisco",
%;   publisher = "Morgan Kaufmann/Elsevier",
%; }
%;

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5069).
% load foundations/Root.e
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/Root.e'))).
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5069).
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/EC.e'))).
:- call_pel_directive(load('foundations/EC.e')).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5072).
% sort agent
% From E: 
% 
% sort(agent).
sort(agent).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5074).
% fluent Awake(agent)
% From E: 
% 
% fluent(awake(agent)).
mpred_prop(awake(agent),fluent).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5074).
fluents([awake/1]).

% event WakeUp(agent)
% From E: 
% 
% event(wakeUp(agent)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5074).
events([wakeUp/1]).
mpred_prop(wakeUp(agent),action).
actions([wakeUp/1]).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5077).
% [agent,time]
 % Initiates(WakeUp(agent),Awake(agent),time).
% From E: 
% 
% initiates_at(
%    wakeUp(Agent), 
%    awake(Agent), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5077).
initiates(wakeUp(Agent),awake(Agent)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5079).
% agent James
% From E: 
% 
% t(agent,james).
isa(james,agent).


% !HoldsAt(Awake(James),0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5079).
% From E: 
% 
% holds(
%    not(awake(james)), 0).
initially(not(awake(james))).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5081).
% Delta: 
% From E: 
% 
% directive(delta).
directive(delta).
 


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5081).
% Happens(WakeUp(James),0).
% From E: 
% 
% happens(
%    wakeUp(james), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5081).
observe(at(wakeUp(james),0)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5083).
% completion Delta Happens
% From E: 
% 
% ':-'(call_pel_directive(completion(delta))).
:- call_pel_directive(completion(delta)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5083).
% From E: 
% 
% ':-'(call_pel_directive(completion(happens))).
:- call_pel_directive(completion(happens)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5085).
% range time 0 1
% From E: 
% 
% ':-'(call_pel_directive(range(time,0,1))).
:- call_pel_directive(range(time, 0, 1)).

% range offset 1 1
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5085).
% From E: 
% 
% ':-'(call_pel_directive(range(offset,1,1))).
:- call_pel_directive(range(offset, 1, 1)).
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%; FILE: examples/Mueller2006/Chapter13/Abduction.e
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; @book{Mueller:2006,
%;   author = "Erik T. Mueller",
%;   year = "2006",
%;   title = "Commonsense Reasoning",
%;   address = "San Francisco",
%;   publisher = "Morgan Kaufmann/Elsevier",
%; }
%;

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5112).
% load foundations/Root.e
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/Root.e'))).
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5112).
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/EC.e'))).
:- call_pel_directive(load('foundations/EC.e')).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5115).
% sort agent
% From E: 
% 
% sort(agent).
sort(agent).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5117).
% fluent Awake(agent)
% From E: 
% 
% fluent(awake(agent)).
mpred_prop(awake(agent),fluent).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5117).
fluents([awake/1]).

% event WakeUp(agent)
% From E: 
% 
% event(wakeUp(agent)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5117).
events([wakeUp/1]).
mpred_prop(wakeUp(agent),action).
actions([wakeUp/1]).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5120).
% [agent,time]
 % Initiates(WakeUp(agent),Awake(agent),time).
% From E: 
% 
% initiates_at(
%    wakeUp(Agent), 
%    awake(Agent), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5120).
initiates(wakeUp(Agent),awake(Agent)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5122).
% agent James
% From E: 
% 
% t(agent,james).
isa(james,agent).


% !HoldsAt(Awake(James),0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5122).
% From E: 
% 
% holds(
%    not(awake(james)), 0).
initially(not(awake(james))).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5124).
% HoldsAt(Awake(James),1).
% From E: 
% 
% holds(
%    awake(james), 1).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5124).
at(awake(james),1).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5126).
% range time 0 1
% From E: 
% 
% ':-'(call_pel_directive(range(time,0,1))).
:- call_pel_directive(range(time, 0, 1)).

% range offset 1 1
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5126).
% From E: 
% 
% ':-'(call_pel_directive(range(offset,1,1))).
:- call_pel_directive(range(offset, 1, 1)).
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%; FILE: examples/Mueller2006/Chapter4/AlarmClock.e
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; @book{Mueller:2006,
%;   author = "Erik T. Mueller",
%;   year = "2006",
%;   title = "Commonsense Reasoning",
%;   address = "San Francisco",
%;   publisher = "Morgan Kaufmann/Elsevier",
%; }
%;

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5153).
% load foundations/Root.e
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/Root.e'))).
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5153).
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/EC.e'))).
:- call_pel_directive(load('foundations/EC.e')).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5156).
% sort agent
% From E: 
% 
% sort(agent).
sort(agent).

% sort clock
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5156).
% From E: 
% 
% sort(clock).
sort(clock).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5159).
% fluent Beeping(clock)
% From E: 
% 
% fluent(beeping(clock)).
mpred_prop(beeping(clock),fluent).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5159).
fluents([beeping/1]).

% fluent AlarmTime(clock,time)
% From E: 
% 
% fluent(alarmTime(clock,time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5159).
mpred_prop(alarmTime(clock,time),fluent).
fluents([alarmTime/2]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5161).
% fluent AlarmOn(clock)
% From E: 
% 
% fluent(alarmOn(clock)).
mpred_prop(alarmOn(clock),fluent).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5161).
fluents([alarmOn/1]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5163).
% event SetAlarmTime(agent,clock,time)
% From E: 
% 
% event(setAlarmTime(agent,clock,time)).
events([setAlarmTime/3]).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5163).
mpred_prop(setAlarmTime(agent,clock,time),action).
actions([setAlarmTime/3]).

% event StartBeeping(clock)
% From E: 
% 
% event(startBeeping(clock)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5163).
mpred_prop(startBeeping(clock),event).
events([startBeeping/1]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5165).
% event TurnOnAlarm(agent,clock)
% From E: 
% 
% event(turnOnAlarm(agent,clock)).
events([turnOnAlarm/2]).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5165).
mpred_prop(turnOnAlarm(agent,clock),action).
actions([turnOnAlarm/2]).

% event TurnOffAlarm(agent,clock)
% From E: 
% 
% event(turnOffAlarm(agent,clock)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5165).
events([turnOffAlarm/2]).
mpred_prop(turnOffAlarm(agent,clock),action).
actions([turnOffAlarm/2]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5168).
% agent Nathan
% From E: 
% 
% t(agent,nathan).
isa(nathan,agent).

% clock Clock
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5168).
% From E: 
% 
% t(clock,clock).
isa(clock,clock).
%; Sigma
% [agent,clock,time1,time2,time]
% HoldsAt(AlarmTime(clock,time1),time) &
% time1!=time2 ->
% Initiates(SetAlarmTime(agent,clock,time2),AlarmTime(clock,time2),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5173).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          alarmTime(Clock,Time1), 
%          Time), 
%       Time1\=Time2), 
%    initiates_at(
%       setAlarmTime(Agent,Clock,Time2), 
%       alarmTime(Clock,Time2), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5173).
if(initiates(setAlarmTime(Agent, Clock, Time2), at(alarmTime(Clock, Time2), Time)),  (at(alarmTime(Clock, Time1), Time), {dif(Time1, Time2)})).


% [agent,clock,time1,time2,time]
% HoldsAt(AlarmTime(clock,time1),time) &
% time1!=time2 ->
% Terminates(SetAlarmTime(agent,clock,time2),AlarmTime(clock,time1),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5179).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          alarmTime(Clock,Time1), 
%          Time), 
%       Time1\=Time2), 
%    terminates_at(
%       setAlarmTime(Agent,Clock,Time2), 
%       alarmTime(Clock,Time1), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5179).
if(terminates(setAlarmTime(Agent, Clock, Time2), at(alarmTime(Clock, Time1), Time)),  (at(alarmTime(Clock, Time1), Time), {dif(Time1, Time2)})).


% [agent,clock,time]
% Initiates(TurnOnAlarm(agent,clock),AlarmOn(clock),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5184).
% From E: 
% 
% initiates_at(
%    turnOnAlarm(Agent,Clock), 
%    alarmOn(Clock), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5184).
initiates(turnOnAlarm(Agent,Clock),alarmOn(Clock)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5186).
% [agent,clock,time]
% Terminates(TurnOffAlarm(agent,clock),AlarmOn(clock),time).
% From E: 
% 
% terminates_at(
%    turnOffAlarm(Agent,Clock), 
%    alarmOn(Clock), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5186).
terminates(turnOffAlarm(Agent,Clock),alarmOn(Clock)).


% [clock,time]
% Initiates(StartBeeping(clock),Beeping(clock),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5190).
% From E: 
% 
% initiates_at(
%    startBeeping(Clock), 
%    beeping(Clock), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5190).
initiates(startBeeping(Clock),beeping(Clock)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5192).
% [agent,clock,time]
% Terminates(TurnOffAlarm(agent,clock),Beeping(clock),time).
% From E: 
% 
% terminates_at(
%    turnOffAlarm(Agent,Clock), 
%    beeping(Clock), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5192).
terminates(turnOffAlarm(Agent,Clock),beeping(Clock)).


%; Delta
% [clock,time]
% HoldsAt(AlarmTime(clock,time),time) &
% HoldsAt(AlarmOn(clock),time) ->
% Happens(StartBeeping(clock),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5197).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          alarmTime(Clock,Time), 
%          Time), 
%       holds(
%          alarmOn(Clock), 
%          Time)), 
%    happens(
%       startBeeping(Clock), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5197).
if(happens(startBeeping(Clock), Time),  (at(alarmTime(Clock, Time), Time), at(alarmOn(Clock), Time))).


% Happens(SetAlarmTime(Nathan,Clock,2),0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5201).
% From E: 
% 
% happens(
%    setAlarmTime(nathan,clock,2), 0).
observe(at(setAlarmTime(nathan,clock,2),0)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5203).
% Happens(TurnOnAlarm(Nathan,Clock),1).
% From E: 
% 
% happens(
%    turnOnAlarm(nathan,clock), 1).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5203).
observe(at(turnOnAlarm(nathan,clock),1)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5205).
%; Psi
% [clock,time1,time2,time]
% HoldsAt(AlarmTime(clock,time1),time) &
% HoldsAt(AlarmTime(clock,time2),time) ->
% time1=time2.
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5207).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          alarmTime(Clock,Time1), 
%          Time), 
%       holds(
%          alarmTime(Clock,Time2), 
%          Time)), 
%    Time1=Time2).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5207).
if(equals(Time1, Time2),  (at(alarmTime(Clock, Time1), Time), at(alarmTime(Clock, Time2), Time))).


%; Gamma


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5214).
% !HoldsAt(AlarmOn(Clock),0).
% From E: 
% 
% holds(
%    not(alarmOn(clock)), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5214).
initially(not(alarmOn(clock))).


% !HoldsAt(Beeping(Clock),0).
% From E: 
% 
% holds(
%    not(beeping(clock)), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5214).
initially(not(beeping(clock))).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5216).
% HoldsAt(AlarmTime(Clock,3),0).
% From E: 
% 
% holds(
%    alarmTime(clock,3), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5216).
initially(alarmTime(clock,3)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5218).
% completion Happens
% From E: 
% 
% ':-'(call_pel_directive(completion(happens))).
:- call_pel_directive(completion(happens)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5220).
% range time 0 3
% From E: 
% 
% ':-'(call_pel_directive(range(time,0,3))).
:- call_pel_directive(range(time, 0, 3)).

% range offset 1 1
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5220).
% From E: 
% 
% ':-'(call_pel_directive(range(offset,1,1))).
:- call_pel_directive(range(offset, 1, 1)).
%; End of file.
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%; FILE: examples/Mueller2006/Chapter4/BankAccountServiceFee.e
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; @book{Mueller:2006,
%;   author = "Erik T. Mueller",
%;   year = "2006",
%;   title = "Commonsense Reasoning",
%;   address = "San Francisco",
%;   publisher = "Morgan Kaufmann/Elsevier",
%; }
%;

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5249).
% option modeldiff on
% From E: 
% 
% ':-'(call_pel_directive(option(modeldiff,on))).
:- call_pel_directive(option(modeldiff, on)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5251).
% load foundations/Root.e
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/Root.e'))).
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5251).
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/EC.e'))).
:- call_pel_directive(load('foundations/EC.e')).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5254).
% sort account
% From E: 
% 
% sort(account).
sort(account).

% sort value: integer
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5254).
% From E: 
% 
% subsort(value,integer).
subsort(value,integer).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5257).
% account Account1, Account2
% From E: 
% 
% t(account,account1).
isa(account1,account).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5257).
% From E: 
% 
% t(account,account2).
isa(account2,account).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5259).
% predicate EndOfMonth(time)
% From E: 
% 
% predicate(endOfMonth(time)).
mpred_prop(endOfMonth(time),predicate).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5259).
predicates([endOfMonth/1]).

% function ServiceFee(account): value
% From E: 
% 
% function(
%    serviceFee(account), 
%    value).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5259).
function(serviceFee(account),value).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5261).
% function MinimumBalance(account): value
% From E: 
% 
% function(
%    minimumBalance(account), 
%    value).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5261).
function(minimumBalance(account),value).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5263).
% fluent ServiceFeeCharged(account)
% From E: 
% 
% fluent(serviceFeeCharged(account)).
mpred_prop(serviceFeeCharged(account),fluent).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5263).
fluents([serviceFeeCharged/1]).

% fluent Balance(account,value)
% From E: 
% 
% fluent(balance(account,value)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5263).
mpred_prop(balance(account,value),fluent).
fluents([balance/2]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5266).
% event Transfer(account,account,value)
% From E: 
% 
% event(transfer(account,account,value)).
mpred_prop(transfer(account,account,value),event).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5266).
events([transfer/3]).

% event MonthlyReset(account)
% From E: 
% 
% event(monthlyReset(account)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5266).
mpred_prop(monthlyReset(account),event).
events([monthlyReset/1]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5268).
% event ChargeServiceFee(account)
% From E: 
% 
% event(chargeServiceFee(account)).
mpred_prop(chargeServiceFee(account),event).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5268).
events([chargeServiceFee/1]).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5270).
%; Sigma
% [account1,account2,value1,value2,value3,value4,time]
% HoldsAt(Balance(account1,value1),time) &
% HoldsAt(Balance(account2,value2),time) &
% value3>0 &
% value1>=value3 &
% value4=(value2+value3) ->
% Initiates(Transfer(account1,account2,value3),Balance(account2,value4),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5272).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          balance(Account1,Value1), 
%          Time), 
%       ','(
%          holds(
%             balance(Account2,Value2), 
%             Time), 
%          ','(
%             Value3>0, 
%             ','(
%                Value1>=Value3, 
%                Value4=Value2+Value3)))), 
%    initiates_at(
%       transfer(Account1,Account2,Value3), 
%       balance(Account2,Value4), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5272).
if(initiates(transfer(Account1, Account2, Value3), at(balance(Account2, Value4), Time)),  (at(balance(Account1, Value1), Time), at(balance(Account2, Value2), Time), comparison(Value3, 0, >), comparison(Value1, Value3, >=), equals(Value4, Value2+Value3))).


% [account1,account2,value1,value2,value3,time]
% HoldsAt(Balance(account1,value1),time) &
% HoldsAt(Balance(account2,value2),time) &
% value3>0 &
% value1>=value3 ->
% Terminates(Transfer(account1,account2,value3),Balance(account2,value2),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5281).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          balance(Account1,Value1), 
%          Time), 
%       ','(
%          holds(
%             balance(Account2,Value2), 
%             Time), 
%          ','(
%             Value3>0, 
%             Value1>=Value3))), 
%    terminates_at(
%       transfer(Account1,Account2,Value3), 
%       balance(Account2,Value2), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5281).
if(terminates(transfer(Account1, Account2, Value3), at(balance(Account2, Value2), Time)),  (at(balance(Account1, Value1), Time), at(balance(Account2, Value2), Time), comparison(Value3, 0, >), comparison(Value1, Value3, >=))).


% [account1,account2,value1,value2,value3,value4,time]
% HoldsAt(Balance(account1,value1),time) &
% HoldsAt(Balance(account2,value2),time) &
% value3>0 &
% value1>=value3 &
% value4=(value1-value3) ->
% Initiates(Transfer(account1,account2,value3),Balance(account1,value4),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5288).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          balance(Account1,Value1), 
%          Time), 
%       ','(
%          holds(
%             balance(Account2,Value2), 
%             Time), 
%          ','(
%             Value3>0, 
%             ','(
%                Value1>=Value3, 
%                Value4=Value1-Value3)))), 
%    initiates_at(
%       transfer(Account1,Account2,Value3), 
%       balance(Account1,Value4), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5288).
if(initiates(transfer(Account1, Account2, Value3), at(balance(Account1, Value4), Time)),  (at(balance(Account1, Value1), Time), at(balance(Account2, Value2), Time), comparison(Value3, 0, >), comparison(Value1, Value3, >=), equals(Value4, Value1-Value3))).


% [account1,account2,value1,value2,value3,time]
% HoldsAt(Balance(account1,value1),time) &
% HoldsAt(Balance(account2,value2),time) &
% value3>0 &
% value1>=value3 ->
% Terminates(Transfer(account1,account2,value3),Balance(account1,value1),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5296).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          balance(Account1,Value1), 
%          Time), 
%       ','(
%          holds(
%             balance(Account2,Value2), 
%             Time), 
%          ','(
%             Value3>0, 
%             Value1>=Value3))), 
%    terminates_at(
%       transfer(Account1,Account2,Value3), 
%       balance(Account1,Value1), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5296).
if(terminates(transfer(Account1, Account2, Value3), at(balance(Account1, Value1), Time)),  (at(balance(Account1, Value1), Time), at(balance(Account2, Value2), Time), comparison(Value3, 0, >), comparison(Value1, Value3, >=))).


% [account,time]
% Initiates(ChargeServiceFee(account),ServiceFeeCharged(account),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5303).
% From E: 
% 
% initiates_at(
%    chargeServiceFee(Account), 
%    serviceFeeCharged(Account), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5303).
initiates(chargeServiceFee(Account),
	  serviceFeeCharged(Account)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5305).
% [account,time]
% Terminates(MonthlyReset(account),ServiceFeeCharged(account),time).
% From E: 
% 
% terminates_at(
%    monthlyReset(Account), 
%    serviceFeeCharged(Account), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5305).
terminates(monthlyReset(Account),
	   serviceFeeCharged(Account)).


% [account,value1,value2,time]
% HoldsAt(Balance(account,value1),time) &
% value2 = (value1-ServiceFee(account)) ->
% Initiates(ChargeServiceFee(account),
%           Balance(account,value2),
%           time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5309).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          balance(Account,Value1), 
%          Time), 
%       Value2=Value1-serviceFee(Account)), 
%    initiates_at(
%       chargeServiceFee(Account), 
%       balance(Account,Value2), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5309).
if(initiates(chargeServiceFee(Account), at(balance(Account, Value2), Time)),  (at(balance(Account, Value1), Time), equals(Value2, Value1-serviceFee(Account)))).


% [account,value,time]
% HoldsAt(Balance(account,value),time) ->
% Terminates(ChargeServiceFee(account),Balance(account,value),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5316).
% From E: 
% 
% '->'(
%    holds(
%       balance(Account,Value), 
%       Time), 
%    terminates_at(
%       chargeServiceFee(Account), 
%       balance(Account,Value), 
%       Time)).
if(terminates(chargeServiceFee(Account),
	      at(balance(Account,Value),Time)),
   at(balance(Account,Value),Time)).


%; Delta
% [account,value,time]
% HoldsAt(Balance(account,value),time) &
% value<MinimumBalance(account) &
% !HoldsAt(ServiceFeeCharged(account),time) ->
% Happens(ChargeServiceFee(account),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5321).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          balance(Account,Value), 
%          Time), 
%       ','(
%          '<'(Value, 
%             minimumBalance(Account)), 
%          holds(
%             not(serviceFeeCharged(Account)), 
%             Time))), 
%    happens(
%       chargeServiceFee(Account), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5321).
if(happens(chargeServiceFee(Account), Time),  (at(balance(Account, Value), Time), comparison(Value, minimumBalance(Account), <), at(not(serviceFeeCharged(Account)), Time))).


% [account,time]
% EndOfMonth(time) ->
% Happens(MonthlyReset(account),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5328).
% From E: 
% 
% '->'(
%    endOfMonth(Time), 
%    happens(
%       monthlyReset(Account), 
%       Time)).
if(happens(monthlyReset(Account),Time),
   endOfMonth(Time)).


% Happens(Transfer(Account1,Account2,1),0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5330).
% From E: 
% 
% happens(
%    transfer(account1,account2,1), 0).
observe(at(transfer(account1,account2,1),0)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5332).
% Happens(Transfer(Account1,Account2,1),0).
% From E: 
% 
% happens(
%    transfer(account1,account2,1), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5332).
observe(at(transfer(account1,account2,1),0)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5334).
%; Psi
% [account,value1,value2,time]
% HoldsAt(Balance(account,value1),time) &
% HoldsAt(Balance(account,value2),time) ->
% value1=value2.
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5336).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          balance(Account,Value1), 
%          Time), 
%       holds(
%          balance(Account,Value2), 
%          Time)), 
%    Value1=Value2).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5336).
if(equals(Value1, Value2),  (at(balance(Account, Value1), Time), at(balance(Account, Value2), Time))).


%; Gamma


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5343).
% !HoldsAt(ServiceFeeCharged(Account1),0).
% From E: 
% 
% holds(
%    not(serviceFeeCharged(account1)), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5343).
initially(not(serviceFeeCharged(account1))).


% !HoldsAt(ServiceFeeCharged(Account2),0).
% From E: 
% 
% holds(
%    not(serviceFeeCharged(account2)), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5343).
initially(not(serviceFeeCharged(account2))).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5345).
% HoldsAt(Balance(Account1,3),0).
% From E: 
% 
% holds(
%    balance(account1,3), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5345).
initially(balance(account1,3)).


% HoldsAt(Balance(Account2,1),0).
% From E: 
% 
% holds(
%    balance(account2,1), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5345).
initially(balance(account2,1)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5347).
% MinimumBalance(Account1)=3.
% From E: 
% 
% '='(
%    minimumBalance(account1), 3).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5347).
minimumBalance(account1,3).


% MinimumBalance(Account2)=1.
% From E: 
% 
% '='(
%    minimumBalance(account2), 1).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5347).
minimumBalance(account2,1).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5349).
% ServiceFee(Account1)=1.
% From E: 
% 
% '='(
%    serviceFee(account1), 1).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5349).
serviceFee(account1,1).


% ServiceFee(Account2)=1.
% From E: 
% 
% '='(
%    serviceFee(account2), 1).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5349).
serviceFee(account2,1).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5351).
% [time]
 % !EndOfMonth(time).
% From E: 
% 
% not(endOfMonth(Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5351).
not(endOfMonth(Time)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5353).
% completion Happens
% From E: 
% 
% ':-'(call_pel_directive(completion(happens))).
:- call_pel_directive(completion(happens)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5355).
% range time 0 3
% From E: 
% 
% ':-'(call_pel_directive(range(time,0,3))).
:- call_pel_directive(range(time, 0, 3)).

% range value 1 3
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5355).
% From E: 
% 
% ':-'(call_pel_directive(range(value,1,3))).
:- call_pel_directive(range(value, 1, 3)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5357).
% range offset 1 1
% From E: 
% 
% ':-'(call_pel_directive(range(offset,1,1))).
:- call_pel_directive(range(offset, 1, 1)).
%; End of file.
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%; FILE: examples/Mueller2006/Exercises/Counter.e
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; @article{DeneckerDupreBelleghem:1998,
%;   author = "Marc Denecker and Daniele Theseider Dupr\'{e} and Kristof Van Belleghem",
%;   year = "1998",
%;   title = "An inductive definition approach to ramifications",
%;   journal = "Link{\"{o}}ping Electronic Articles in Computer and Information Science",
%;   volume = "3",
%;   number = "007",
%; }
%;
%; @book{Mueller:2006,
%;   author = "Erik T. Mueller",
%;   year = "2006",
%;   title = "Commonsense Reasoning",
%;   address = "San Francisco",
%;   publisher = "Morgan Kaufmann/Elsevier",
%; }
%;

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5394).
% load foundations/Root.e
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/Root.e'))).
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5394).
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/EC.e'))).
:- call_pel_directive(load('foundations/EC.e')).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5397).
% sort counter
% From E: 
% 
% sort(counter).
sort(counter).

% counter Counter1
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5397).
% From E: 
% 
% t(counter,counter1).
isa(counter1,counter).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5400).
% event FalseToTrue(counter)
% From E: 
% 
% event(falseToTrue(counter)).
mpred_prop(falseToTrue(counter),event).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5400).
events([falseToTrue/1]).

% event TrueToFalse(counter)
% From E: 
% 
% event(trueToFalse(counter)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5400).
mpred_prop(trueToFalse(counter),event).
events([trueToFalse/1]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5403).
% fluent Count(counter,integer)
% From E: 
% 
% fluent(count(counter,integer)).
mpred_prop(count(counter,integer),fluent).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5403).
fluents([count/2]).

% fluent True(counter)
% From E: 
% 
% fluent(true(counter)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5403).
mpred_prop(true(counter),fluent).
fluents([true/1]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5405).
% fluent InputLine(counter)
% From E: 
% 
% fluent(inputLine(counter)).
mpred_prop(inputLine(counter),fluent).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5405).
fluents([inputLine/1]).

% noninertial InputLine
% From E: 
% 
% ':-'(call_pel_directive(noninertial(inputLine))).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5405).
:- call_pel_directive(noninertial(inputLine)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5408).
% Delta: 
% From E: 
% 
% directive(delta).
directive(delta).
 


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5408).
% [counter,time]
% !HoldsAt(True(counter),time) &
% HoldsAt(InputLine(counter),time) ->
% Happens(FalseToTrue(counter),time).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          not(true(Counter)), 
%          Time), 
%       holds(
%          inputLine(Counter), 
%          Time)), 
%    happens(
%       falseToTrue(Counter), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5408).
if(happens(falseToTrue(Counter), Time),  (at(not(true(Counter)), Time), at(inputLine(Counter), Time))).

% Delta: 
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5412).
% From E: 
% 
% directive(delta).
directive(delta).
 


% [counter,time]
% HoldsAt(True(counter),time) &
% !HoldsAt(InputLine(counter),time) ->
% Happens(TrueToFalse(counter),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5414).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          true(Counter), 
%          Time), 
%       holds(
%          not(inputLine(Counter)), 
%          Time)), 
%    happens(
%       trueToFalse(Counter), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5414).
if(happens(trueToFalse(Counter), Time),  (at(true(Counter), Time), at(not(inputLine(Counter)), Time))).


% [counter,time]
 % Initiates(FalseToTrue(counter),True(counter),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5417).
% From E: 
% 
% initiates_at(
%    falseToTrue(Counter), 
%    true(Counter), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5417).
initiates(falseToTrue(Counter),true(Counter)).


% [counter,time]
 % Terminates(TrueToFalse(counter),True(counter),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5419).
% From E: 
% 
% terminates_at(
%    trueToFalse(Counter), 
%    true(Counter), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5419).
terminates(trueToFalse(Counter),true(Counter)).


% [counter,integer1,integer2,time]
% HoldsAt(Count(counter,integer1),time) &
% (integer2 = (integer1 + 1)) ->
% Initiates(FalseToTrue(counter),Count(counter,integer2),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5423).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          count(Counter,Integer1), 
%          Time), 
%       Integer2=Integer1+1), 
%    initiates_at(
%       falseToTrue(Counter), 
%       count(Counter,Integer2), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5423).
if(initiates(falseToTrue(Counter), at(count(Counter, Integer2), Time)),  (at(count(Counter, Integer1), Time), equals(Integer2, Integer1+1))).


% [counter,integer,time]
% HoldsAt(Count(counter,integer),time) ->
% Terminates(FalseToTrue(counter),Count(counter,integer),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5428).
% From E: 
% 
% '->'(
%    holds(
%       count(Counter,Integer), 
%       Time), 
%    terminates_at(
%       falseToTrue(Counter), 
%       count(Counter,Integer), 
%       Time)).
if(terminates(falseToTrue(Counter),
	      at(count(Counter,Integer),Time)),
   at(count(Counter,Integer),Time)).


% [counter,integer1,integer2,time]
% HoldsAt(Count(counter,integer1),time) &
% HoldsAt(Count(counter,integer2),time) ->
% integer1 = integer2.
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5432).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          count(Counter,Integer1), 
%          Time), 
%       holds(
%          count(Counter,Integer2), 
%          Time)), 
%    Integer1=Integer2).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5432).
if(equals(Integer1, Integer2),  (at(count(Counter, Integer1), Time), at(count(Counter, Integer2), Time))).


% !HoldsAt(True(Counter1),0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5435).
% From E: 
% 
% holds(
%    not(true(counter1)), 0).
initially(not(true(counter1))).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5437).
% !HoldsAt(InputLine(Counter1),0).
% From E: 
% 
% holds(
%    not(inputLine(counter1)), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5437).
initially(not(inputLine(counter1))).


% HoldsAt(InputLine(Counter1),1).
% From E: 
% 
% holds(
%    inputLine(counter1), 1).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5437).
at(inputLine(counter1),1).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5439).
% HoldsAt(InputLine(Counter1),2).
% From E: 
% 
% holds(
%    inputLine(counter1), 2).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5439).
at(inputLine(counter1),2).


% HoldsAt(InputLine(Counter1),3).
% From E: 
% 
% holds(
%    inputLine(counter1), 3).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5439).
at(inputLine(counter1),3).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5441).
% !HoldsAt(InputLine(Counter1),4).
% From E: 
% 
% holds(
%    not(inputLine(counter1)), 4).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5441).
at(not(inputLine(counter1)),4).


% !HoldsAt(InputLine(Counter1),5).
% From E: 
% 
% holds(
%    not(inputLine(counter1)), 5).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5441).
at(not(inputLine(counter1)),5).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5443).
% !HoldsAt(InputLine(Counter1),6).
% From E: 
% 
% holds(
%    not(inputLine(counter1)), 6).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5443).
at(not(inputLine(counter1)),6).


% HoldsAt(InputLine(Counter1),7).
% From E: 
% 
% holds(
%    inputLine(counter1), 7).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5443).
at(inputLine(counter1),7).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5445).
% HoldsAt(InputLine(Counter1),8).
% From E: 
% 
% holds(
%    inputLine(counter1), 8).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5445).
at(inputLine(counter1),8).


% HoldsAt(InputLine(Counter1),9).
% From E: 
% 
% holds(
%    inputLine(counter1), 9).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5445).
at(inputLine(counter1),9).


% HoldsAt(Count(Counter1,0),0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5447).
% From E: 
% 
% holds(
%    count(counter1,0), 0).
initially(count(counter1,0)).

% completion Happens
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5449).
% From E: 
% 
% ':-'(call_pel_directive(completion(happens))).
:- call_pel_directive(completion(happens)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5452).
% range integer 0 6
% From E: 
% 
% ':-'(call_pel_directive(range(integer,0,6))).
:- call_pel_directive(range(integer, 0, 6)).

% range time 0 10
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5452).
% From E: 
% 
% ':-'(call_pel_directive(range(time,0,10))).
:- call_pel_directive(range(time, 0, 10)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5454).
% range offset 1 1
% From E: 
% 
% ':-'(call_pel_directive(range(offset,1,1))).
:- call_pel_directive(range(offset, 1, 1)).
%; End of file.
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%; FILE: examples/Mueller2006/Exercises/TeacherTells.e
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; @book{Mueller:2006,
%;   author = "Erik T. Mueller",
%;   year = "2006",
%;   title = "Commonsense Reasoning",
%;   address = "San Francisco",
%;   publisher = "Morgan Kaufmann/Elsevier",
%; }
%;

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5482).
% option modeldiff on
% From E: 
% 
% ':-'(call_pel_directive(option(modeldiff,on))).
:- call_pel_directive(option(modeldiff, on)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5484).
% load foundations/Root.e
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/Root.e'))).
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5484).
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/EC.e'))).
:- call_pel_directive(load('foundations/EC.e')).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5487).
% sort agent
% From E: 
% 
% sort(agent).
sort(agent).

% sort room
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5487).
% From E: 
% 
% sort(room).
sort(room).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5489).
% sort fact
% From E: 
% 
% sort(fact).
sort(fact).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5491).
% agent Teacher, Student
% From E: 
% 
% t(agent,teacher).
isa(teacher,agent).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5491).
% From E: 
% 
% t(agent,student).
isa(student,agent).

% room Kitchen, Classroom
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5491).
% From E: 
% 
% t(room,kitchen).
isa(kitchen,room).
% From E: 
% 
% t(room,classroom).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5491).
isa(classroom,room).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5493).
% fact Fact1, Fact2
% From E: 
% 
% t(fact,fact1).
isa(fact1,fact).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5493).
% From E: 
% 
% t(fact,fact2).
isa(fact2,fact).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5495).
% fluent InRoom(agent,room)
% From E: 
% 
% fluent(inRoom(agent,room)).
mpred_prop(inRoom(agent,room),fluent).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5495).
fluents([inRoom/2]).

% fluent ListeningTo(agent,agent)
% From E: 
% 
% fluent(listeningTo(agent,agent)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5495).
mpred_prop(listeningTo(agent,agent),fluent).
fluents([listeningTo/2]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5497).
% fluent Know(agent,fact)
% From E: 
% 
% fluent(know(agent,fact)).
mpred_prop(know(agent,fact),fluent).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5497).
fluents([know/2]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5499).
% event Tell(agent,agent,fact)
% From E: 
% 
% event(tell(agent,agent,fact)).
events([tell/3]).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5499).
mpred_prop(tell(agent,agent,fact),action).
actions([tell/3]).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5501).
%; Sigma
% [agent1,agent2,fact,time]
% (% {room} HoldsAt(InRoom(agent1,room),time) &
%         HoldsAt(InRoom(agent2,room),time)) &
% HoldsAt(ListeningTo(agent2,agent1),time) ->
% Initiates(Tell(agent1,agent2,fact),Know(agent2,fact),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5503).
% From E: 
% 
% exists(Room, 
%    '->'(
%       ','(
%          ','(
%             holds(
%                inRoom(Agent1,Room), 
%                Time), 
%             holds(
%                inRoom(Agent2,Room), 
%                Time)), 
%          holds(
%             listeningTo(Agent2,Agent1), 
%             Time)), 
%       initiates_at(
%          tell(Agent1,Agent2,Fact), 
%          know(Agent2,Fact), 
%          Time))).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5503).
exists(Room, if(initiates(tell(Agent1, Agent2, Fact), at(know(Agent2, Fact), Time)),  ((at(inRoom(Agent1, Room), Time), at(inRoom(Agent2, Room), Time)), at(listeningTo(Agent2, Agent1), Time)))).


%; Delta


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5511).
% Happens(Tell(Teacher,Student,Fact1),0).
% From E: 
% 
% happens(
%    tell(teacher,student,fact1), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5511).
observe(at(tell(teacher,student,fact1),0)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5513).
%; Psi
% [agent,room1,room2,time]
% HoldsAt(InRoom(agent,room1),time) &
% HoldsAt(InRoom(agent,room2),time) ->
% room1 = room2.
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5515).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          inRoom(Agent,Room1), 
%          Time), 
%       holds(
%          inRoom(Agent,Room2), 
%          Time)), 
%    Room1=Room2).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5515).
if(equals(Room1, Room2),  (at(inRoom(Agent, Room1), Time), at(inRoom(Agent, Room2), Time))).


%; Gamma
% [agent,fact]
 % !HoldsAt(Know(agent,fact),0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5522).
% From E: 
% 
% holds(
%    not(know(Agent,Fact)), 0).
initially(not(know(Agent,Fact))).


% [agent1,agent2]
 % HoldsAt(ListeningTo(agent1,agent2),0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5522).
% From E: 
% 
% holds(
%    listeningTo(Agent1,Agent2), 0).
initially(listeningTo(Agent1,Agent2)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5524).
% [agent]
 % HoldsAt(InRoom(agent,Classroom),0).
% From E: 
% 
% holds(
%    inRoom(Agent,classroom), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5524).
initially(inRoom(Agent,classroom)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5526).
% completion Happens
% From E: 
% 
% ':-'(call_pel_directive(completion(happens))).
:- call_pel_directive(completion(happens)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5528).
% range time 0 1
% From E: 
% 
% ':-'(call_pel_directive(range(time,0,1))).
:- call_pel_directive(range(time, 0, 1)).

% range offset 1 1
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5528).
% From E: 
% 
% ':-'(call_pel_directive(range(offset,1,1))).
:- call_pel_directive(range(offset, 1, 1)).
%; End of file.
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%; FILE: examples/Mueller2006/Exercises/MixingPaints.e
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; @book{Mueller:2006,
%;   author = "Erik T. Mueller",
%;   year = "2006",
%;   title = "Commonsense Reasoning",
%;   address = "San Francisco",
%;   publisher = "Morgan Kaufmann/Elsevier",
%; }
%;

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5557).
% load foundations/Root.e
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/Root.e'))).
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5557).
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/EC.e'))).
:- call_pel_directive(load('foundations/EC.e')).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5560).
% sort palette
% From E: 
% 
% sort(palette).
sort(palette).

% sort color
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5560).
% From E: 
% 
% sort(color).
sort(color).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5563).
% palette Palette1
% From E: 
% 
% t(palette,palette1).
isa(palette1,palette).

% color Red, Yellow, Blue, Green
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5563).
% From E: 
% 
% t(color,red).
isa(red,color).
% From E: 
% 
% t(color,yellow).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5563).
isa(yellow,color).
% From E: 
% 
% t(color,blue).
isa(blue,color).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5563).
% From E: 
% 
% t(color,green).
isa(green,color).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5566).
% event PlaceOnPalette(palette,color)
% From E: 
% 
% event(placeOnPalette(palette,color)).
mpred_prop(placeOnPalette(palette,color),event).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5566).
events([placeOnPalette/2]).

% fluent OnPalette(palette,color)
% From E: 
% 
% fluent(onPalette(palette,color)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5566).
mpred_prop(onPalette(palette,color),fluent).
fluents([onPalette/2]).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5569).
% [palette,color,time]
% !Happens(PlaceOnPalette(palette,Yellow),time) |
% !Happens(PlaceOnPalette(palette,Blue),time) ->
% Initiates(PlaceOnPalette(palette,color),OnPalette(palette,color),time).
% From E: 
% 
% '->'(
%    ';'(
%       not(happens(
%              placeOnPalette(Palette,yellow), 
%              Time)), 
%       not(happens(
%              placeOnPalette(Palette,blue), 
%              Time))), 
%    initiates_at(
%       placeOnPalette(Palette,Color), 
%       onPalette(Palette,Color), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5569).
 if(initiates(placeOnPalette(Palette, Color),
                at(onPalette(Palette, Color), Time)),
       (not(happens(placeOnPalette(Palette, yellow), Time));not(happens(placeOnPalette(Palette, blue), Time)))).


% [palette,color1,color2,time]
% Happens(PlaceOnPalette(palette,Yellow),time) &
% color1 = Blue &
% color2 = Green ->
% Initiates(PlaceOnPalette(palette,color1),OnPalette(palette,color2),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5575).
% From E: 
% 
% '->'(
%    ','(
%       happens(
%          placeOnPalette(Palette,yellow), 
%          Time), 
%       ','(
%          Color1=blue, 
%          Color2=green)), 
%    initiates_at(
%       placeOnPalette(Palette,Color1), 
%       onPalette(Palette,Color2), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5575).
if(initiates(placeOnPalette(Palette, Color1), at(onPalette(Palette, Color2), Time)),  (happens(placeOnPalette(Palette, yellow), Time), equals(Color1, blue), equals(Color2, green))).


% [palette,color1,color2,time]
% !(Happens(PlaceOnPalette(palette,Yellow),time) &
%   Happens(PlaceOnPalette(palette,Blue),time)) &
% HoldsAt(OnPalette(palette,color1),time) &
% color1 != color2 ->
% Terminates(PlaceOnPalette(palette,color2),OnPalette(palette,color1),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5581).
% From E: 
% 
% '->'(
%    ','(
%       not(','(
%              happens(
%                 placeOnPalette(Palette,yellow), 
%                 Time), 
%              happens(
%                 placeOnPalette(Palette,blue), 
%                 Time))), 
%       ','(
%          holds(
%             onPalette(Palette,Color1), 
%             Time), 
%          Color1\=Color2)), 
%    terminates_at(
%       placeOnPalette(Palette,Color2), 
%       onPalette(Palette,Color1), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5581).
if(terminates(placeOnPalette(Palette, Color2), at(onPalette(Palette, Color1), Time)),  (not((happens(placeOnPalette(Palette, yellow), Time), happens(placeOnPalette(Palette, blue), Time))), at(onPalette(Palette, Color1), Time), {dif(Color1, Color2)})).


% [palette,color1,color2,time]
% Happens(PlaceOnPalette(palette,Yellow),time) &
% HoldsAt(OnPalette(palette,color2),time) &
% color1 = Blue &
% color2 != Green ->
% Terminates(PlaceOnPalette(palette,color1),OnPalette(palette,color2),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5588).
% From E: 
% 
% '->'(
%    ','(
%       happens(
%          placeOnPalette(Palette,yellow), 
%          Time), 
%       ','(
%          holds(
%             onPalette(Palette,Color2), 
%             Time), 
%          ','(
%             Color1=blue, 
%             Color2\=green))), 
%    terminates_at(
%       placeOnPalette(Palette,Color1), 
%       onPalette(Palette,Color2), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5588).
if(terminates(placeOnPalette(Palette, Color1), at(onPalette(Palette, Color2), Time)),  (happens(placeOnPalette(Palette, yellow), Time), at(onPalette(Palette, Color2), Time), equals(Color1, blue), {dif(Color2, green)})).


%; state constraint
% [palette,color1,color2,time]
% HoldsAt(OnPalette(palette,color1),time) &
% HoldsAt(OnPalette(palette,color2),time) ->
% color1 = color2.
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5596).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          onPalette(Palette,Color1), 
%          Time), 
%       holds(
%          onPalette(Palette,Color2), 
%          Time)), 
%    Color1=Color2).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5596).
if(equals(Color1, Color2),  (at(onPalette(Palette, Color1), Time), at(onPalette(Palette, Color2), Time))).


%; (1) place green over red


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5602).
% HoldsAt(OnPalette(Palette1,Red),0).
% From E: 
% 
% holds(
%    onPalette(palette1,red), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5602).
initially(onPalette(palette1,red)).

% Delta: 
% From E: 
% 
% directive(delta).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5602).
directive(delta).
 


% Happens(PlaceOnPalette(Palette1,Green),0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5602).
% From E: 
% 
% happens(
%    placeOnPalette(palette1,green), 0).
observe(at(placeOnPalette(palette1,green),0)).


%; (2) place yellow+blue over green

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5606).
% Delta: 
% From E: 
% 
% directive(delta).
directive(delta).
 


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5606).
% Happens(PlaceOnPalette(Palette1,Yellow),1).
% From E: 
% 
% happens(
%    placeOnPalette(palette1,yellow), 1).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5606).
observe(at(placeOnPalette(palette1,yellow),1)).

% Delta: 
% From E: 
% 
% directive(delta).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5606).
directive(delta).
 


% Happens(PlaceOnPalette(Palette1,Blue),1).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5606).
% From E: 
% 
% happens(
%    placeOnPalette(palette1,blue), 1).
observe(at(placeOnPalette(palette1,blue),1)).


%; (3) place yellow

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5610).
% Delta: 
% From E: 
% 
% directive(delta).
directive(delta).
 


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5610).
% Happens(PlaceOnPalette(Palette1,Yellow),2).
% From E: 
% 
% happens(
%    placeOnPalette(palette1,yellow), 2).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5610).
observe(at(placeOnPalette(palette1,yellow),2)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5612).
%; (4) place blue

% Delta: 
% From E: 
% 
% directive(delta).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5612).
directive(delta).
 


% Happens(PlaceOnPalette(Palette1,Blue),3).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5612).
% From E: 
% 
% happens(
%    placeOnPalette(palette1,blue), 3).
observe(at(placeOnPalette(palette1,blue),3)).


%; (5) place green

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5616).
% Delta: 
% From E: 
% 
% directive(delta).
directive(delta).
 


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5616).
% Happens(PlaceOnPalette(Palette1,Yellow),4).
% From E: 
% 
% happens(
%    placeOnPalette(palette1,yellow), 4).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5616).
observe(at(placeOnPalette(palette1,yellow),4)).

% Delta: 
% From E: 
% 
% directive(delta).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5616).
directive(delta).
 


% Happens(PlaceOnPalette(Palette1,Blue),4).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5616).
% From E: 
% 
% happens(
%    placeOnPalette(palette1,blue), 4).
observe(at(placeOnPalette(palette1,blue),4)).

% completion Delta Happens
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5618).
% From E: 
% 
% ':-'(call_pel_directive(completion(delta))).
:- call_pel_directive(completion(delta)).
% From E: 
% 
% ':-'(call_pel_directive(completion(happens))).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5618).
:- call_pel_directive(completion(happens)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5621).
% range time 0 5
% From E: 
% 
% ':-'(call_pel_directive(range(time,0,5))).
:- call_pel_directive(range(time, 0, 5)).

% range offset 1 1
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5621).
% From E: 
% 
% ':-'(call_pel_directive(range(offset,1,1))).
:- call_pel_directive(range(offset, 1, 1)).
%; End of file.
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%; FILE: examples/Mueller2006/Exercises/SnoozeAlarm.e
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; Example: Alarm Clock with snooze alarm added
%;
%; @book{Mueller:2006,
%;   author = "Erik T. Mueller",
%;   year = "2006",
%;   title = "Commonsense Reasoning",
%;   address = "San Francisco",
%;   publisher = "Morgan Kaufmann/Elsevier",
%; }
%;

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5652).
% load foundations/Root.e
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/Root.e'))).
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5652).
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/EC.e'))).
:- call_pel_directive(load('foundations/EC.e')).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5655).
% sort agent
% From E: 
% 
% sort(agent).
sort(agent).

% sort clock
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5655).
% From E: 
% 
% sort(clock).
sort(clock).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5658).
% fluent Beeping(clock)
% From E: 
% 
% fluent(beeping(clock)).
mpred_prop(beeping(clock),fluent).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5658).
fluents([beeping/1]).

% fluent AlarmTime(clock,time)
% From E: 
% 
% fluent(alarmTime(clock,time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5658).
mpred_prop(alarmTime(clock,time),fluent).
fluents([alarmTime/2]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5660).
% fluent AlarmOn(clock)
% From E: 
% 
% fluent(alarmOn(clock)).
mpred_prop(alarmOn(clock),fluent).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5660).
fluents([alarmOn/1]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5662).
% event SetAlarmTime(agent,clock,time)
% From E: 
% 
% event(setAlarmTime(agent,clock,time)).
events([setAlarmTime/3]).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5662).
mpred_prop(setAlarmTime(agent,clock,time),action).
actions([setAlarmTime/3]).

% event StartBeeping(clock)
% From E: 
% 
% event(startBeeping(clock)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5662).
mpred_prop(startBeeping(clock),event).
events([startBeeping/1]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5664).
% event TurnOnAlarm(agent,clock)
% From E: 
% 
% event(turnOnAlarm(agent,clock)).
events([turnOnAlarm/2]).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5664).
mpred_prop(turnOnAlarm(agent,clock),action).
actions([turnOnAlarm/2]).

% event TurnOffAlarm(agent,clock)
% From E: 
% 
% event(turnOffAlarm(agent,clock)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5664).
events([turnOffAlarm/2]).
mpred_prop(turnOffAlarm(agent,clock),action).
actions([turnOffAlarm/2]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5667).
% event PressSnooze(agent,clock)
% From E: 
% 
% event(pressSnooze(agent,clock)).
events([pressSnooze/2]).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5667).
mpred_prop(pressSnooze(agent,clock),action).
actions([pressSnooze/2]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5669).
% agent Nathan
% From E: 
% 
% t(agent,nathan).
isa(nathan,agent).

% clock Clock
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5669).
% From E: 
% 
% t(clock,clock).
isa(clock,clock).
%; Sigma
% [agent,clock,time1,time2,time]
% HoldsAt(AlarmTime(clock,time1),time) &
% time1!=time2 ->
% Initiates(SetAlarmTime(agent,clock,time2),AlarmTime(clock,time2),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5674).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          alarmTime(Clock,Time1), 
%          Time), 
%       Time1\=Time2), 
%    initiates_at(
%       setAlarmTime(Agent,Clock,Time2), 
%       alarmTime(Clock,Time2), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5674).
if(initiates(setAlarmTime(Agent, Clock, Time2), at(alarmTime(Clock, Time2), Time)),  (at(alarmTime(Clock, Time1), Time), {dif(Time1, Time2)})).


% [agent,clock,time1,time2,time]
% HoldsAt(AlarmTime(clock,time1),time) &
% time1!=time2 ->
% Terminates(SetAlarmTime(agent,clock,time2),AlarmTime(clock,time1),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5680).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          alarmTime(Clock,Time1), 
%          Time), 
%       Time1\=Time2), 
%    terminates_at(
%       setAlarmTime(Agent,Clock,Time2), 
%       alarmTime(Clock,Time1), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5680).
if(terminates(setAlarmTime(Agent, Clock, Time2), at(alarmTime(Clock, Time1), Time)),  (at(alarmTime(Clock, Time1), Time), {dif(Time1, Time2)})).


% [agent,clock,time]
% Initiates(TurnOnAlarm(agent,clock),AlarmOn(clock),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5685).
% From E: 
% 
% initiates_at(
%    turnOnAlarm(Agent,Clock), 
%    alarmOn(Clock), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5685).
initiates(turnOnAlarm(Agent,Clock),alarmOn(Clock)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5687).
% [agent,clock,time]
% Terminates(TurnOffAlarm(agent,clock),AlarmOn(clock),time).
% From E: 
% 
% terminates_at(
%    turnOffAlarm(Agent,Clock), 
%    alarmOn(Clock), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5687).
terminates(turnOffAlarm(Agent,Clock),alarmOn(Clock)).


% [clock,time]
% Initiates(StartBeeping(clock),Beeping(clock),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5691).
% From E: 
% 
% initiates_at(
%    startBeeping(Clock), 
%    beeping(Clock), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5691).
initiates(startBeeping(Clock),beeping(Clock)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5693).
% [agent,clock,time]
% Terminates(TurnOffAlarm(agent,clock),Beeping(clock),time).
% From E: 
% 
% terminates_at(
%    turnOffAlarm(Agent,Clock), 
%    beeping(Clock), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5693).
terminates(turnOffAlarm(Agent,Clock),beeping(Clock)).


%; added axioms:
% [agent,clock,time2,time]
% HoldsAt(Beeping(clock),time) &
% time2 = time+9 ->
% Initiates(PressSnooze(agent,clock),AlarmTime(clock,time2),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5698).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          beeping(Clock), 
%          Time), 
%       Time2=Time+9), 
%    initiates_at(
%       pressSnooze(Agent,Clock), 
%       alarmTime(Clock,Time2), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5698).
if(initiates(pressSnooze(Agent, Clock), at(alarmTime(Clock, Time2), Time)),  (at(beeping(Clock), Time), equals(Time2, Time+9))).


% [agent,clock,time1,time2,time]
% HoldsAt(Beeping(clock),time) &
% HoldsAt(AlarmTime(clock,time1),time) &
% time2 = time+9 &
% time1 != time2 ->
% Terminates(PressSnooze(agent,clock),AlarmTime(clock,time1),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5704).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          beeping(Clock), 
%          Time), 
%       ','(
%          holds(
%             alarmTime(Clock,Time1), 
%             Time), 
%          ','(
%             Time2=Time+9, 
%             Time1\=Time2))), 
%    terminates_at(
%       pressSnooze(Agent,Clock), 
%       alarmTime(Clock,Time1), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5704).
if(terminates(pressSnooze(Agent, Clock), at(alarmTime(Clock, Time1), Time)),  (at(beeping(Clock), Time), at(alarmTime(Clock, Time1), Time), equals(Time2, Time+9), {dif(Time1, Time2)})).


% [agent,clock,time]
% Terminates(PressSnooze(agent,clock),Beeping(clock),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5711).
% From E: 
% 
% terminates_at(
%    pressSnooze(Agent,Clock), 
%    beeping(Clock), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5711).
terminates(pressSnooze(Agent,Clock),beeping(Clock)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5713).
%; Delta
% [clock,time]
% HoldsAt(AlarmTime(clock,time),time) &
% HoldsAt(AlarmOn(clock),time) ->
% Happens(StartBeeping(clock),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5715).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          alarmTime(Clock,Time), 
%          Time), 
%       holds(
%          alarmOn(Clock), 
%          Time)), 
%    happens(
%       startBeeping(Clock), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5715).
if(happens(startBeeping(Clock), Time),  (at(alarmTime(Clock, Time), Time), at(alarmOn(Clock), Time))).


% Happens(SetAlarmTime(Nathan,Clock,2),0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5719).
% From E: 
% 
% happens(
%    setAlarmTime(nathan,clock,2), 0).
observe(at(setAlarmTime(nathan,clock,2),0)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5721).
% Happens(TurnOnAlarm(Nathan,Clock),1).
% From E: 
% 
% happens(
%    turnOnAlarm(nathan,clock), 1).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5721).
observe(at(turnOnAlarm(nathan,clock),1)).


% Happens(PressSnooze(Nathan,Clock),4).
% From E: 
% 
% happens(
%    pressSnooze(nathan,clock), 4).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5721).
observe(at(pressSnooze(nathan,clock),4)).


%; Psi
% [clock,time1,time2,time]
% HoldsAt(AlarmTime(clock,time1),time) &
% HoldsAt(AlarmTime(clock,time2),time) ->
% time1=time2.
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5726).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          alarmTime(Clock,Time1), 
%          Time), 
%       holds(
%          alarmTime(Clock,Time2), 
%          Time)), 
%    Time1=Time2).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5726).
if(equals(Time1, Time2),  (at(alarmTime(Clock, Time1), Time), at(alarmTime(Clock, Time2), Time))).


%; Gamma


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5733).
% !HoldsAt(AlarmOn(Clock),0).
% From E: 
% 
% holds(
%    not(alarmOn(clock)), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5733).
initially(not(alarmOn(clock))).


% !HoldsAt(Beeping(Clock),0).
% From E: 
% 
% holds(
%    not(beeping(clock)), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5733).
initially(not(beeping(clock))).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5735).
% HoldsAt(AlarmTime(Clock,3),0).
% From E: 
% 
% holds(
%    alarmTime(clock,3), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5735).
initially(alarmTime(clock,3)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5737).
% completion Happens
% From E: 
% 
% ':-'(call_pel_directive(completion(happens))).
:- call_pel_directive(completion(happens)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5739).
% range time 0 15
% From E: 
% 
% ':-'(call_pel_directive(range(time,0,15))).
:- call_pel_directive(range(time, 0, 15)).

% range offset 1 1
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5739).
% From E: 
% 
% ':-'(call_pel_directive(range(offset,1,1))).
:- call_pel_directive(range(offset, 1, 1)).
%; End of file.
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%; FILE: examples/Mueller2006/Exercises/TelephoneBugs.e
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; Example: Telephone
%;
%; @book{Mueller:2006,
%;   author = "Erik T. Mueller",
%;   year = "2006",
%;   title = "Commonsense Reasoning",
%;   address = "San Francisco",
%;   publisher = "Morgan Kaufmann/Elsevier",
%; }
%;

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5770).
% load foundations/Root.e
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/Root.e'))).
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5770).
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/EC.e'))).
:- call_pel_directive(load('foundations/EC.e')).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5773).
% sort agent
% From E: 
% 
% sort(agent).
sort(agent).

% sort phone
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5773).
% From E: 
% 
% sort(phone).
sort(phone).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5776).
% agent Agent1, Agent2
% From E: 
% 
% t(agent,agent1).
isa(agent1,agent).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5776).
% From E: 
% 
% t(agent,agent2).
isa(agent2,agent).

% phone Phone1, Phone2
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5776).
% From E: 
% 
% t(phone,phone1).
isa(phone1,phone).
% From E: 
% 
% t(phone,phone2).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5776).
isa(phone2,phone).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5779).
% fluent Ringing(phone,phone)
% From E: 
% 
% fluent(ringing(phone,phone)).
mpred_prop(ringing(phone,phone),fluent).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5779).
fluents([ringing/2]).

% fluent DialTone(phone)
% From E: 
% 
% fluent(dialTone(phone)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5779).
mpred_prop(dialTone(phone),fluent).
fluents([dialTone/1]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5781).
% fluent BusySignal(phone)
% From E: 
% 
% fluent(busySignal(phone)).
mpred_prop(busySignal(phone),fluent).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5781).
fluents([busySignal/1]).

% fluent Idle(phone)
% From E: 
% 
% fluent(idle(phone)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5781).
mpred_prop(idle(phone),fluent).
fluents([idle/1]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5783).
% fluent Connected(phone,phone)
% From E: 
% 
% fluent(connected(phone,phone)).
mpred_prop(connected(phone,phone),fluent).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5783).
fluents([connected/2]).

% fluent Disconnected(phone)
% From E: 
% 
% fluent(disconnected(phone)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5783).
mpred_prop(disconnected(phone),fluent).
fluents([disconnected/1]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5786).
% event PickUp(agent,phone)
% From E: 
% 
% event(pickUp(agent,phone)).
events([pickUp/2]).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5786).
mpred_prop(pickUp(agent,phone),action).
actions([pickUp/2]).

% event SetDown(agent,phone)
% From E: 
% 
% event(setDown(agent,phone)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5786).
events([setDown/2]).
mpred_prop(setDown(agent,phone),action).
actions([setDown/2]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5788).
% event Dial(agent,phone,phone)
% From E: 
% 
% event(dial(agent,phone,phone)).
events([dial/3]).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5788).
mpred_prop(dial(agent,phone,phone),action).
actions([dial/3]).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5790).
%; Sigma
% [agent,phone,time]
% HoldsAt(Idle(phone),time) ->
% Initiates(PickUp(agent,phone),DialTone(phone),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5792).
% From E: 
% 
% '->'(
%    holds(
%       idle(Phone), 
%       Time), 
%    initiates_at(
%       pickUp(Agent,Phone), 
%       dialTone(Phone), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5792).
if(initiates(pickUp(Agent,Phone),
	     at(dialTone(Phone),Time)),
   at(idle(Phone),Time)).


% [agent,phone,time]
% HoldsAt(Idle(phone),time) ->
% Terminates(PickUp(agent,phone),Idle(phone),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5797).
% From E: 
% 
% '->'(
%    holds(
%       idle(Phone), 
%       Time), 
%    terminates_at(
%       pickUp(Agent,Phone), 
%       idle(Phone), 
%       Time)).
if(terminates(pickUp(Agent,Phone),
	      at(idle(Phone),Time)),
   at(idle(Phone),Time)).


% [agent,phone,time]
% HoldsAt(DialTone(phone),time) ->
% Initiates(SetDown(agent,phone),Idle(phone),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5801).
% From E: 
% 
% '->'(
%    holds(
%       dialTone(Phone), 
%       Time), 
%    initiates_at(
%       setDown(Agent,Phone), 
%       idle(Phone), 
%       Time)).
if(initiates(setDown(Agent,Phone),
	     at(idle(Phone),Time)),
   at(dialTone(Phone),Time)).


% [agent,phone,time]
% HoldsAt(DialTone(phone),time) ->
% Terminates(SetDown(agent,phone),DialTone(phone),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5805).
% From E: 
% 
% '->'(
%    holds(
%       dialTone(Phone), 
%       Time), 
%    terminates_at(
%       setDown(Agent,Phone), 
%       dialTone(Phone), 
%       Time)).
if(terminates(setDown(Agent,Phone),
	      at(dialTone(Phone),Time)),
   at(dialTone(Phone),Time)).


% [agent,phone1,phone2,time]
% HoldsAt(DialTone(phone1),time) &
% HoldsAt(Idle(phone2),time) ->
% Initiates(Dial(agent,phone1,phone2),Ringing(phone1,phone2),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5809).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          dialTone(Phone1), 
%          Time), 
%       holds(
%          idle(Phone2), 
%          Time)), 
%    initiates_at(
%       dial(Agent,Phone1,Phone2), 
%       ringing(Phone1,Phone2), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5809).
if(initiates(dial(Agent, Phone1, Phone2), at(ringing(Phone1, Phone2), Time)),  (at(dialTone(Phone1), Time), at(idle(Phone2), Time))).


% [agent,phone1,phone2,time]
% HoldsAt(DialTone(phone1),time) &
% HoldsAt(Idle(phone2),time) ->
% Terminates(Dial(agent,phone1,phone2),DialTone(phone1),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5814).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          dialTone(Phone1), 
%          Time), 
%       holds(
%          idle(Phone2), 
%          Time)), 
%    terminates_at(
%       dial(Agent,Phone1,Phone2), 
%       dialTone(Phone1), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5814).
if(terminates(dial(Agent, Phone1, Phone2), at(dialTone(Phone1), Time)),  (at(dialTone(Phone1), Time), at(idle(Phone2), Time))).


% [agent,phone1,phone2,time]
% HoldsAt(DialTone(phone1),time) &
% HoldsAt(Idle(phone2),time) ->
% Terminates(Dial(agent,phone1,phone2),Idle(phone2),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5819).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          dialTone(Phone1), 
%          Time), 
%       holds(
%          idle(Phone2), 
%          Time)), 
%    terminates_at(
%       dial(Agent,Phone1,Phone2), 
%       idle(Phone2), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5819).
if(terminates(dial(Agent, Phone1, Phone2), at(idle(Phone2), Time)),  (at(dialTone(Phone1), Time), at(idle(Phone2), Time))).


% [agent,phone1,phone2,time]
% HoldsAt(DialTone(phone1),time) &
% !HoldsAt(Idle(phone2),time) ->
% Initiates(Dial(agent,phone1,phone2),BusySignal(phone1),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5824).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          dialTone(Phone1), 
%          Time), 
%       holds(
%          not(idle(Phone2)), 
%          Time)), 
%    initiates_at(
%       dial(Agent,Phone1,Phone2), 
%       busySignal(Phone1), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5824).
if(initiates(dial(Agent, Phone1, Phone2), at(busySignal(Phone1), Time)),  (at(dialTone(Phone1), Time), at(not(idle(Phone2)), Time))).


% [agent,phone1,phone2,time]
% HoldsAt(DialTone(phone1),time) &
% !HoldsAt(Idle(phone2),time) ->
% Terminates(Dial(agent,phone1,phone2),DialTone(phone1),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5829).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          dialTone(Phone1), 
%          Time), 
%       holds(
%          not(idle(Phone2)), 
%          Time)), 
%    terminates_at(
%       dial(Agent,Phone1,Phone2), 
%       dialTone(Phone1), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5829).
if(terminates(dial(Agent, Phone1, Phone2), at(dialTone(Phone1), Time)),  (at(dialTone(Phone1), Time), at(not(idle(Phone2)), Time))).


% [agent,phone,time]
% HoldsAt(BusySignal(phone),time) ->
% Initiates(SetDown(agent,phone),Idle(phone),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5834).
% From E: 
% 
% '->'(
%    holds(
%       busySignal(Phone), 
%       Time), 
%    initiates_at(
%       setDown(Agent,Phone), 
%       idle(Phone), 
%       Time)).
if(initiates(setDown(Agent,Phone),
	     at(idle(Phone),Time)),
   at(busySignal(Phone),Time)).


% [agent,phone,time]
% HoldsAt(BusySignal(phone),time) ->
% Terminates(SetDown(agent,phone),BusySignal(phone),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5838).
% From E: 
% 
% '->'(
%    holds(
%       busySignal(Phone), 
%       Time), 
%    terminates_at(
%       setDown(Agent,Phone), 
%       busySignal(Phone), 
%       Time)).
if(terminates(setDown(Agent,Phone),
	      at(busySignal(Phone),Time)),
   at(busySignal(Phone),Time)).


% [agent,phone1,phone2,time]
% HoldsAt(Ringing(phone1,phone2),time) ->
% Initiates(SetDown(agent,phone1),Idle(phone1),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5842).
% From E: 
% 
% '->'(
%    holds(
%       ringing(Phone1,Phone2), 
%       Time), 
%    initiates_at(
%       setDown(Agent,Phone1), 
%       idle(Phone1), 
%       Time)).
if(initiates(setDown(Agent,Phone1),
	     at(idle(Phone1),Time)),
   at(ringing(Phone1,Phone2),Time)).


% [agent,phone1,phone2,time]
% HoldsAt(Ringing(phone1,phone2),time) ->
% Initiates(SetDown(agent,phone1),Idle(phone2),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5846).
% From E: 
% 
% '->'(
%    holds(
%       ringing(Phone1,Phone2), 
%       Time), 
%    initiates_at(
%       setDown(Agent,Phone1), 
%       idle(Phone2), 
%       Time)).
if(initiates(setDown(Agent,Phone1),
	     at(idle(Phone2),Time)),
   at(ringing(Phone1,Phone2),Time)).


% [agent,phone1,phone2,time]
% HoldsAt(Ringing(phone1,phone2),time) ->
% Terminates(SetDown(agent,phone1),Ringing(phone1,phone2),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5850).
% From E: 
% 
% '->'(
%    holds(
%       ringing(Phone1,Phone2), 
%       Time), 
%    terminates_at(
%       setDown(Agent,Phone1), 
%       ringing(Phone1,Phone2), 
%       Time)).
if(terminates(setDown(Agent,Phone1),
	      at(ringing(Phone1,Phone2),Time)),
   at(ringing(Phone1,Phone2),Time)).


% [agent,phone1,phone2,time]
% HoldsAt(Ringing(phone1,phone2),time) ->
% Initiates(PickUp(agent,phone2),Connected(phone1,phone2),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5854).
% From E: 
% 
% '->'(
%    holds(
%       ringing(Phone1,Phone2), 
%       Time), 
%    initiates_at(
%       pickUp(Agent,Phone2), 
%       connected(Phone1,Phone2), 
%       Time)).
if(initiates(pickUp(Agent,Phone2),
	     at(connected(Phone1,Phone2),Time)),
   at(ringing(Phone1,Phone2),Time)).


% [agent,phone1,phone2,time]
% HoldsAt(Ringing(phone1,phone2),time) ->
% Terminates(PickUp(agent,phone2),Ringing(phone1,phone2),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5858).
% From E: 
% 
% '->'(
%    holds(
%       ringing(Phone1,Phone2), 
%       Time), 
%    terminates_at(
%       pickUp(Agent,Phone2), 
%       ringing(Phone1,Phone2), 
%       Time)).
if(terminates(pickUp(Agent,Phone2),
	      at(ringing(Phone1,Phone2),Time)),
   at(ringing(Phone1,Phone2),Time)).


% [agent,phone1,phone2,time]
% HoldsAt(Connected(phone1,phone2),time) ->
% Initiates(SetDown(agent,phone1),Idle(phone1),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5862).
% From E: 
% 
% '->'(
%    holds(
%       connected(Phone1,Phone2), 
%       Time), 
%    initiates_at(
%       setDown(Agent,Phone1), 
%       idle(Phone1), 
%       Time)).
if(initiates(setDown(Agent,Phone1),
	     at(idle(Phone1),Time)),
   at(connected(Phone1,Phone2),Time)).


% [agent,phone1,phone2,time]
% HoldsAt(Connected(phone1,phone2),time) ->
% Initiates(SetDown(agent,phone1),Disconnected(phone2),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5866).
% From E: 
% 
% '->'(
%    holds(
%       connected(Phone1,Phone2), 
%       Time), 
%    initiates_at(
%       setDown(Agent,Phone1), 
%       disconnected(Phone2), 
%       Time)).
if(initiates(setDown(Agent,Phone1),
	     at(disconnected(Phone2),Time)),
   at(connected(Phone1,Phone2),Time)).


% [agent,phone1,phone2,time]
% HoldsAt(Connected(phone1,phone2),time) ->
% Terminates(SetDown(agent,phone1),Connected(phone1,phone2),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5870).
% From E: 
% 
% '->'(
%    holds(
%       connected(Phone1,Phone2), 
%       Time), 
%    terminates_at(
%       setDown(Agent,Phone1), 
%       connected(Phone1,Phone2), 
%       Time)).
if(terminates(setDown(Agent,Phone1),
	      at(connected(Phone1,Phone2),Time)),
   at(connected(Phone1,Phone2),Time)).


% [agent,phone1,phone2,time]
% HoldsAt(Connected(phone1,phone2),time) ->
% Initiates(SetDown(agent,phone2),Idle(phone2),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5874).
% From E: 
% 
% '->'(
%    holds(
%       connected(Phone1,Phone2), 
%       Time), 
%    initiates_at(
%       setDown(Agent,Phone2), 
%       idle(Phone2), 
%       Time)).
if(initiates(setDown(Agent,Phone2),
	     at(idle(Phone2),Time)),
   at(connected(Phone1,Phone2),Time)).


% [agent,phone1,phone2,time]
% HoldsAt(Connected(phone1,phone2),time) ->
% Initiates(SetDown(agent,phone2),Disconnected(phone1),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5878).
% From E: 
% 
% '->'(
%    holds(
%       connected(Phone1,Phone2), 
%       Time), 
%    initiates_at(
%       setDown(Agent,Phone2), 
%       disconnected(Phone1), 
%       Time)).
if(initiates(setDown(Agent,Phone2),
	     at(disconnected(Phone1),Time)),
   at(connected(Phone1,Phone2),Time)).


% [agent,phone1,phone2,time]
% HoldsAt(Connected(phone1,phone2),time) ->
% Terminates(SetDown(agent,phone2),Connected(phone1,phone2),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5882).
% From E: 
% 
% '->'(
%    holds(
%       connected(Phone1,Phone2), 
%       Time), 
%    terminates_at(
%       setDown(Agent,Phone2), 
%       connected(Phone1,Phone2), 
%       Time)).
if(terminates(setDown(Agent,Phone2),
	      at(connected(Phone1,Phone2),Time)),
   at(connected(Phone1,Phone2),Time)).


% [agent,phone,time]
% HoldsAt(Disconnected(phone),time) ->
% Initiates(SetDown(agent,phone),Idle(phone),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5886).
% From E: 
% 
% '->'(
%    holds(
%       disconnected(Phone), 
%       Time), 
%    initiates_at(
%       setDown(Agent,Phone), 
%       idle(Phone), 
%       Time)).
if(initiates(setDown(Agent,Phone),
	     at(idle(Phone),Time)),
   at(disconnected(Phone),Time)).


% [agent,phone,time]
% HoldsAt(Disconnected(phone),time) ->
% Terminates(SetDown(agent,phone),Disconnected(phone),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5890).
% From E: 
% 
% '->'(
%    holds(
%       disconnected(Phone), 
%       Time), 
%    terminates_at(
%       setDown(Agent,Phone), 
%       disconnected(Phone), 
%       Time)).
if(terminates(setDown(Agent,Phone),
	      at(disconnected(Phone),Time)),
   at(disconnected(Phone),Time)).


%; Delta
%; (1) Two agents dial each other simultaneously without first
%; picking up phone.


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5897).
% Happens(Dial(Agent1,Phone1,Phone2),0).
% From E: 
% 
% happens(
%    dial(agent1,phone1,phone2), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5897).
observe(at(dial(agent1,phone1,phone2),0)).


% Happens(Dial(Agent2,Phone2,Phone1),0).
% From E: 
% 
% happens(
%    dial(agent2,phone2,phone1), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5897).
observe(at(dial(agent2,phone2,phone1),0)).


%; (2) Two agents dial each other simultaneously.


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5901).
% Happens(PickUp(Agent1,Phone1),1).
% From E: 
% 
% happens(
%    pickUp(agent1,phone1), 1).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5901).
observe(at(pickUp(agent1,phone1),1)).


% Happens(PickUp(Agent2,Phone2),1).
% From E: 
% 
% happens(
%    pickUp(agent2,phone2), 1).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5901).
observe(at(pickUp(agent2,phone2),1)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5903).
% Happens(Dial(Agent1,Phone1,Phone2),2).
% From E: 
% 
% happens(
%    dial(agent1,phone1,phone2), 2).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5903).
observe(at(dial(agent1,phone1,phone2),2)).


% Happens(Dial(Agent2,Phone2,Phone1),2).
% From E: 
% 
% happens(
%    dial(agent2,phone2,phone1), 2).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5903).
observe(at(dial(agent2,phone2,phone1),2)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5905).
% Happens(SetDown(Agent1,Phone1),3).
% From E: 
% 
% happens(
%    setDown(agent1,phone1), 3).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5905).
observe(at(setDown(agent1,phone1),3)).


% Happens(SetDown(Agent2,Phone2),3).
% From E: 
% 
% happens(
%    setDown(agent2,phone2), 3).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5905).
observe(at(setDown(agent2,phone2),3)).


%; (3) One agent dials another agent just as the other
%; agent picks up the phone.


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5910).
% Happens(PickUp(Agent1,Phone1),4).
% From E: 
% 
% happens(
%    pickUp(agent1,phone1), 4).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5910).
observe(at(pickUp(agent1,phone1),4)).


% Happens(Dial(Agent1,Phone1,Phone2),5).
% From E: 
% 
% happens(
%    dial(agent1,phone1,phone2), 5).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5910).
observe(at(dial(agent1,phone1,phone2),5)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5912).
% Happens(PickUp(Agent2,Phone2),5).
% From E: 
% 
% happens(
%    pickUp(agent2,phone2), 5).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5912).
observe(at(pickUp(agent2,phone2),5)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5914).
%; Psi
% [phone,time]
% !HoldsAt(Ringing(phone,phone),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5916).
% From E: 
% 
% holds(
%    not(ringing(Phone,Phone)), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5916).
at(not(ringing(Phone,Phone)),Time).


% [phone1,phone2,time]
% HoldsAt(Ringing(phone1,phone2),time) &
% phone1!=phone2 ->
% !HoldsAt(Ringing(phone2,phone1),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5920).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          ringing(Phone1,Phone2), 
%          Time), 
%       Phone1\=Phone2), 
%    holds(
%       not(ringing(Phone2,Phone1)), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5920).
if(at(not(ringing(Phone2, Phone1)), Time),  (at(ringing(Phone1, Phone2), Time), {dif(Phone1, Phone2)})).


% [phone,time]
% !HoldsAt(Connected(phone,phone),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5925).
% From E: 
% 
% holds(
%    not(connected(Phone,Phone)), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5925).
at(not(connected(Phone,Phone)),Time).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5927).
% [phone1,phone2,time]
% HoldsAt(Connected(phone1,phone2),time) &
% phone1!=phone2 ->
% !HoldsAt(Connected(phone2,phone1),time).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          connected(Phone1,Phone2), 
%          Time), 
%       Phone1\=Phone2), 
%    holds(
%       not(connected(Phone2,Phone1)), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5927).
if(at(not(connected(Phone2, Phone1)), Time),  (at(connected(Phone1, Phone2), Time), {dif(Phone1, Phone2)})).

% mutex Idle, DialTone, BusySignal, Disconnected
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5931).
% From E: 
% 
% ':-'(call_pel_directive(mutex(idle))).
:- call_pel_directive(mutex(idle)).
% From E: 
% 
% ':-'(call_pel_directive(mutex(dialTone))).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5931).
:- call_pel_directive(mutex(dialTone)).
% From E: 
% 
% ':-'(call_pel_directive(mutex(busySignal))).
:- call_pel_directive(mutex(busySignal)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5931).
% From E: 
% 
% ':-'(call_pel_directive(mutex(disconnected))).
:- call_pel_directive(mutex(disconnected)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5934).
% [phone1,phone2,time]
% HoldsAt(Idle(phone1),time) ->
% !HoldsAt(Ringing(phone1,phone2),time) &
% !HoldsAt(Connected(phone1,phone2),time).
% From E: 
% 
% '->'(
%    holds(
%       idle(Phone1), 
%       Time), 
%    ','(
%       holds(
%          not(ringing(Phone1,Phone2)), 
%          Time), 
%       holds(
%          not(connected(Phone1,Phone2)), 
%          Time))).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5934).
if((at(not(ringing(Phone1, Phone2)), Time), at(not(connected(Phone1, Phone2)), Time)), at(idle(Phone1), Time)).


%; contradicts (3) above:
%;[phone1,phone2,time]
%;HoldsAt(DialTone(phone2),time) ->
%;!HoldsAt(Ringing(phone1,phone2),time) &
%;!HoldsAt(Connected(phone1,phone2),time).
%; etc.
%; Gamma
% [phone]
 
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5949).
% HoldsAt(Idle(phone),0).
% From E: 
% 
% holds(
%    idle(Phone), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5949).
initially(idle(Phone)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5951).
% completion Happens
% From E: 
% 
% ':-'(call_pel_directive(completion(happens))).
:- call_pel_directive(completion(happens)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5953).
% range time 0 6
% From E: 
% 
% ':-'(call_pel_directive(range(time,0,6))).
:- call_pel_directive(range(time, 0, 6)).

% range offset 1 1
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5953).
% From E: 
% 
% ':-'(call_pel_directive(range(offset,1,1))).
:- call_pel_directive(range(offset, 1, 1)).
%; End of file.
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%; FILE: examples/Mueller2006/Chapter11/HungryCat.e
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; @inproceedings{WinikoffEtAl:2002,
%;   author = "Michael Winikoff and Lin Padgham and James Harland and John Thangarajah",
%;   year = "2002",
%;   title = "Declarative \& procedural goals in intelligent agent systems",
%;   editor = "Dieter Fensel and Fausto Giunchiglia and Deborah McGuinness and Mary-Anne Williams",
%;   booktitle = "\uppercase{P}roceedings of the \uppercase{E}ighth \uppercase{I}nternational \uppercase{C}onference on \uppercase{P}rinciples of \uppercase{K}nowledge \uppercase{R}epresentation and \uppercase{R}easoning",
%;   pages = "470--481",
%;   address = "San Francisco",
%;   publisher = "Morgan Kaufmann",
%; }
%;
%; @book{Mueller:2006,
%;   author = "Erik T. Mueller",
%;   year = "2006",
%;   title = "Commonsense Reasoning",
%;   address = "San Francisco",
%;   publisher = "Morgan Kaufmann/Elsevier",
%; }
%;

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5993).
% load foundations/Root.e
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/Root.e'))).
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5993).
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/EC.e'))).
:- call_pel_directive(load('foundations/EC.e')).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5996).
% sort object
% From E: 
% 
% sort(object).
sort(object).

% sort agent: object
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5996).
% From E: 
% 
% subsort(agent,object).
subsort(agent,object).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5998).
% sort food: object
% From E: 
% 
% subsort(food,object).
subsort(food,object).

% sort surface
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',5998).
% From E: 
% 
% sort(surface).
sort(surface).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6000).
% sort plan
% From E: 
% 
% sort(plan).
sort(plan).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6002).
% reified sort belief
% From E: 
% 
% reified_sort(belief).
reified_sorts([belief/0]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6004).
% agent Cat
% From E: 
% 
% t(agent,cat).
isa(cat,agent).

% surface Floor, Chair, Shelf, Table
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6004).
% From E: 
% 
% t(surface,floor).
isa(floor,surface).
% From E: 
% 
% t(surface,chair).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6004).
isa(chair,surface).
% From E: 
% 
% t(surface,shelf).
isa(shelf,surface).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6004).
% From E: 
% 
% t(surface,table).
isa(table,surface).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6006).
% food Food1, Food2
% From E: 
% 
% t(food,food1).
isa(food1,food).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6006).
% From E: 
% 
% t(food,food2).
isa(food2,food).

% plan P1, P1a, P1b, P2, P2a
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6006).
% From E: 
% 
% t(plan,p1).
isa(p1,plan).
% From E: 
% 
% t(plan,p1a).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6006).
isa(p1a,plan).
% From E: 
% 
% t(plan,p1b).
isa(p1b,plan).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6006).
% From E: 
% 
% t(plan,p2).
isa(p2,plan).
% From E: 
% 
% t(plan,p2a).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6006).
isa(p2a,plan).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6009).
% predicate SelectedPlan(agent,belief,plan,time)
% From E: 
% 
% predicate(selectedPlan(agent, belief, plan, 
%              time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6009).
mpred_prop(selectedPlan(agent,belief,plan,time),predicate).
predicates([selectedPlan/4]).

% predicate SoundPlan(agent,belief,plan,time)
% From E: 
% 
% predicate(soundPlan(agent, belief, plan, 
%              time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6009).
mpred_prop(soundPlan(agent,belief,plan,time),predicate).
predicates([soundPlan/4]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6012).
% fluent On(object,surface)
% From E: 
% 
% fluent(on(object,surface)).
mpred_prop(on(object,surface),fluent).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6012).
fluents([on/2]).

% fluent Goal(agent,belief)
% From E: 
% 
% fluent(goal(agent,belief)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6012).
mpred_prop(goal(agent,belief),fluent).
fluents([goal/2]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6014).
% fluent CanJump(surface,surface)
% From E: 
% 
% fluent(canJump(surface,surface)).
mpred_prop(canJump(surface,surface),fluent).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6014).
fluents([canJump/2]).

% fluent Plan(agent,belief,plan)
% From E: 
% 
% fluent(plan(agent,belief,plan)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6014).
mpred_prop(plan(agent,belief,plan),fluent).
fluents([plan/3]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6016).
% fluent Satiated(agent)
% From E: 
% 
% fluent(satiated(agent)).
mpred_prop(satiated(agent),fluent).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6016).
fluents([satiated/1]).

% fluent Believe(agent,belief)
% From E: 
% 
% fluent(believe(agent,belief)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6016).
mpred_prop(believe(agent,belief),fluent).
fluents([believe/2]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6019).
% event AddPlan(agent,belief,plan)
% From E: 
% 
% event(addPlan(agent,belief,plan)).
events([addPlan/3]).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6019).
mpred_prop(addPlan(agent,belief,plan),action).
actions([addPlan/3]).

% event DropPlan(agent,belief,plan)
% From E: 
% 
% event(dropPlan(agent,belief,plan)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6019).
events([dropPlan/3]).
mpred_prop(dropPlan(agent,belief,plan),action).
actions([dropPlan/3]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6021).
% event Jump(agent,surface,surface)
% From E: 
% 
% event(jump(agent,surface,surface)).
events([jump/3]).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6021).
mpred_prop(jump(agent,surface,surface),action).
actions([jump/3]).

% event Move(surface,surface,surface)
% From E: 
% 
% event(move(surface,surface,surface)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6021).
mpred_prop(move(surface,surface,surface),event).
events([move/3]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6023).
% event Eat(agent,food)
% From E: 
% 
% event(eat(agent,food)).
events([eat/2]).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6023).
mpred_prop(eat(agent,food),action).
actions([eat/2]).

% event Wait(agent)
% From E: 
% 
% event(wait(agent)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6023).
events([wait/1]).
mpred_prop(wait(agent),action).
actions([wait/1]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6026).
% belief BSatiated(agent)
% From E: 
% 
% t(belief, 
%    bSatiated(agent)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6026).
isa(bSatiated(agent),belief).

% belief BCanJump(surface,surface)
% From E: 
% 
% t(belief, 
%    bCanJump(surface,surface)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6026).
isa(bCanJump(surface,surface),belief).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6028).
% belief BOn(object,surface)
% From E: 
% 
% t(belief, 
%    bOn(object,surface)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6028).
isa(bOn(object,surface),belief).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6030).
%; Sigma
%; A5
% [agent,belief,plan,time]
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6034).
% Initiates(AddPlan(agent,belief,plan),Plan(agent,belief,plan),time).
% From E: 
% 
% initiates_at(
%    addPlan(Agent,Belief,Plan), 
%    plan(Agent,Belief,Plan), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6034).
initiates(addPlan(Agent,Belief,Plan),
	  plan(Agent,Belief,Plan)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6036).
%; A6
% [agent,belief,plan,time]
% Terminates(DropPlan(agent,belief,plan),Plan(agent,belief,plan),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6038).
% From E: 
% 
% terminates_at(
%    dropPlan(Agent,Belief,Plan), 
%    plan(Agent,Belief,Plan), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6038).
terminates(dropPlan(Agent,Belief,Plan),
	   plan(Agent,Belief,Plan)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6040).
% [agent,surface1,surface2,time]
% HoldsAt(On(agent,surface1),time) &
% HoldsAt(CanJump(surface1,surface2),time) ->
% Initiates(Jump(agent,surface1,surface2),On(agent,surface2),time).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          on(Agent,Surface1), 
%          Time), 
%       holds(
%          canJump(Surface1,Surface2), 
%          Time)), 
%    initiates_at(
%       jump(Agent,Surface1,Surface2), 
%       on(Agent,Surface2), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6040).
if(initiates(jump(Agent, Surface1, Surface2), at(on(Agent, Surface2), Time)),  (at(on(Agent, Surface1), Time), at(canJump(Surface1, Surface2), Time))).


% [agent,surface1,surface2,time]
% HoldsAt(On(agent,surface1),time) &
% HoldsAt(CanJump(surface1,surface2),time) ->
% Terminates(Jump(agent,surface1,surface2),On(agent,surface1),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6046).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          on(Agent,Surface1), 
%          Time), 
%       holds(
%          canJump(Surface1,Surface2), 
%          Time)), 
%    terminates_at(
%       jump(Agent,Surface1,Surface2), 
%       on(Agent,Surface1), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6046).
if(terminates(jump(Agent, Surface1, Surface2), at(on(Agent, Surface1), Time)),  (at(on(Agent, Surface1), Time), at(canJump(Surface1, Surface2), Time))).


% [surface1,surface2,surface3,time]
% Initiates(Move(surface1,surface2,surface3),CanJump(surface1,surface3),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6051).
% From E: 
% 
% initiates_at(
%    move(Surface1,Surface2,Surface3), 
%    canJump(Surface1,Surface3), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6051).
initiates(move(Surface1,Surface2,Surface3),
	  canJump(Surface1,Surface3)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6053).
% [surface1,surface2,surface3,time]
% Terminates(Move(surface1,surface2,surface3),CanJump(surface1,surface2),time).
% From E: 
% 
% terminates_at(
%    move(Surface1,Surface2,Surface3), 
%    canJump(Surface1,Surface2), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6053).
terminates(move(Surface1,Surface2,Surface3),
	   canJump(Surface1,Surface2)).


% [agent,food,surface,time]
% HoldsAt(On(agent,surface),time) &
% HoldsAt(On(food,surface),time) ->
% Initiates(Eat(agent,food),Satiated(agent),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6057).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          on(Agent,Surface), 
%          Time), 
%       holds(
%          on(Food,Surface), 
%          Time)), 
%    initiates_at(
%       eat(Agent,Food), 
%       satiated(Agent), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6057).
if(initiates(eat(Agent, Food), at(satiated(Agent), Time)),  (at(on(Agent, Surface), Time), at(on(Food, Surface), Time))).


% [agent,food,surface,time]
% HoldsAt(On(agent,surface),time) &
% HoldsAt(On(food,surface),time) ->
% Terminates(Eat(agent,food),On(food,surface),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6062).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          on(Agent,Surface), 
%          Time), 
%       holds(
%          on(Food,Surface), 
%          Time)), 
%    terminates_at(
%       eat(Agent,Food), 
%       on(Food,Surface), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6062).
if(terminates(eat(Agent, Food), at(on(Food, Surface), Time)),  (at(on(Agent, Surface), Time), at(on(Food, Surface), Time))).


% [agent,surface1,surface2,belief,time]
% HoldsAt(Believe(agent,BOn(agent,surface1)),time) &
% HoldsAt(Believe(agent,BCanJump(surface1,surface2)),time) &
% (belief = BOn(agent,surface2)) ->
% Initiates(Jump(agent,surface1,surface2),
%           Believe(agent,belief),
%           time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6067).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          believe(Agent, 
%             bOn(Agent,Surface1)), 
%          Time), 
%       ','(
%          holds(
%             believe(Agent, 
%                bCanJump(Surface1,Surface2)), 
%             Time), 
%          '='(Belief, 
%             bOn(Agent,Surface2)))), 
%    initiates_at(
%       jump(Agent,Surface1,Surface2), 
%       believe(Agent,Belief), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6067).
if(initiates(jump(Agent, Surface1, Surface2), at(believe(Agent, Belief), Time)),  (at(believe(Agent, bOn(Agent, Surface1)), Time), at(believe(Agent, bCanJump(Surface1, Surface2)), Time), equals(Belief, bOn(Agent, Surface2)))).


% [agent,surface1,surface2,belief,time]
% HoldsAt(Believe(agent,BOn(agent,surface1)),time) &
% HoldsAt(Believe(agent,BCanJump(surface1,surface2)),time) &
% (belief = BOn(agent,surface1)) ->
% Terminates(Jump(agent,surface1,surface2),
%            Believe(agent,belief),
%            time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6075).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          believe(Agent, 
%             bOn(Agent,Surface1)), 
%          Time), 
%       ','(
%          holds(
%             believe(Agent, 
%                bCanJump(Surface1,Surface2)), 
%             Time), 
%          '='(Belief, 
%             bOn(Agent,Surface1)))), 
%    terminates_at(
%       jump(Agent,Surface1,Surface2), 
%       believe(Agent,Belief), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6075).
if(terminates(jump(Agent, Surface1, Surface2), at(believe(Agent, Belief), Time)),  (at(believe(Agent, bOn(Agent, Surface1)), Time), at(believe(Agent, bCanJump(Surface1, Surface2)), Time), equals(Belief, bOn(Agent, Surface1)))).


% [agent,surface1,surface2,surface3,belief,time]
% (belief = BCanJump(surface1,surface3)) ->
% Initiates(Move(surface1,surface2,surface3),
%           Believe(agent,belief),
%           time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6083).
% From E: 
% 
% '->'(
%    '='(Belief, 
%       bCanJump(Surface1,Surface3)), 
%    initiates_at(
%       move(Surface1,Surface2,Surface3), 
%       believe(Agent,Belief), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6083).
if(initiates(move(Surface1,Surface2,Surface3),
	     at(believe(Agent,Belief),Time)),
   equals(Belief,bCanJump(Surface1,Surface3))).


% [agent,surface1,surface2,surface3,belief,time]
% (belief = BCanJump(surface1,surface2)) ->
% Terminates(Move(surface1,surface2,surface3),
%            Believe(agent,belief),
%            time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6089).
% From E: 
% 
% '->'(
%    '='(Belief, 
%       bCanJump(Surface1,Surface2)), 
%    terminates_at(
%       move(Surface1,Surface2,Surface3), 
%       believe(Agent,Belief), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6089).
if(terminates(move(Surface1,Surface2,Surface3),
	      at(believe(Agent,Belief),Time)),
   equals(Belief,bCanJump(Surface1,Surface2))).


% [agent,food,surface,belief,time]
% HoldsAt(Believe(agent,BOn(agent,surface)),time) &
% HoldsAt(Believe(agent,BOn(food,surface)),time) &
% (belief = BSatiated(agent)) ->
% Initiates(Eat(agent,food),Believe(agent,belief),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6095).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          believe(Agent, 
%             bOn(Agent,Surface)), 
%          Time), 
%       ','(
%          holds(
%             believe(Agent, 
%                bOn(Food,Surface)), 
%             Time), 
%          '='(Belief, 
%             bSatiated(Agent)))), 
%    initiates_at(
%       eat(Agent,Food), 
%       believe(Agent,Belief), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6095).
if(initiates(eat(Agent, Food), at(believe(Agent, Belief), Time)),  (at(believe(Agent, bOn(Agent, Surface)), Time), at(believe(Agent, bOn(Food, Surface)), Time), equals(Belief, bSatiated(Agent)))).


% [agent,food,surface,belief,time]
% HoldsAt(Believe(agent,BOn(agent,surface)),time) &
% HoldsAt(Believe(agent,BOn(food,surface)),time) &
% (belief = BOn(food,surface)) ->
% Terminates(Eat(agent,food),Believe(agent,belief),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6101).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          believe(Agent, 
%             bOn(Agent,Surface)), 
%          Time), 
%       ','(
%          holds(
%             believe(Agent, 
%                bOn(Food,Surface)), 
%             Time), 
%          '='(Belief, 
%             bOn(Food,Surface)))), 
%    terminates_at(
%       eat(Agent,Food), 
%       believe(Agent,Belief), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6101).
if(terminates(eat(Agent, Food), at(believe(Agent, Belief), Time)),  (at(believe(Agent, bOn(Agent, Surface)), Time), at(believe(Agent, bOn(Food, Surface)), Time), equals(Belief, bOn(Food, Surface)))).


%; Delta
%; A7
% [agent,belief,plan,time]
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6110).
% HoldsAt(Goal(agent,belief),time) &
% !HoldsAt(Believe(agent,belief),time) &
% SelectedPlan(agent,belief,plan,time) &
% (!{plan1} HoldsAt(Plan(agent,belief,plan1),time)) ->
% Happens(AddPlan(agent,belief,plan),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6110).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          goal(Agent,Belief), 
%          Time), 
%       ','(
%          holds(
%             not(believe(Agent,Belief)), 
%             Time), 
%          ','(
%             selectedPlan(Agent, Belief, Plan, 
%                Time), 
%             not(thereExists(Plan1, 
%                    holds(
%                       plan(Agent,Belief,Plan1), 
%                       Time)))))), 
%    happens(
%       addPlan(Agent,Belief,Plan), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6110).
if(happens(addPlan(Agent, Belief, Plan), Time),  (at(goal(Agent, Belief), Time), at(not(believe(Agent, Belief)), Time), selectedPlan(Agent, Belief, Plan, Time), not(thereExists(Plan1, at(plan(Agent, Belief, Plan1), Time))))).


%; A8
% [agent,belief,time]
% HoldsAt(Plan(agent,belief,P1),time) &
% !HoldsAt(Believe(agent,belief),time) &
% SoundPlan(agent,belief,P1,time) ->
% Happens(Jump(Cat,Floor,Chair),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6117).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          plan(Agent,Belief,p1), 
%          Time), 
%       ','(
%          holds(
%             not(believe(Agent,Belief)), 
%             Time), 
%          soundPlan(Agent, Belief, p1, 
%             Time))), 
%    happens(
%       jump(cat,floor,chair), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6117).
if(happens(jump(cat, floor, chair), Time),  (at(plan(Agent, Belief, p1), Time), at(not(believe(Agent, Belief)), Time), soundPlan(Agent, Belief, p1, Time))).


% [agent,belief,time]
% HoldsAt(Plan(agent,belief,P1a),time) &
% !HoldsAt(Believe(agent,belief),time) &
% SoundPlan(agent,belief,P1a,time) ->
% Happens(Wait(Cat),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6124).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          plan(Agent,Belief,p1a), 
%          Time), 
%       ','(
%          holds(
%             not(believe(Agent,Belief)), 
%             Time), 
%          soundPlan(Agent, Belief, p1a, 
%             Time))), 
%    happens(
%       wait(cat), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6124).
if(happens(wait(cat), Time),  (at(plan(Agent, Belief, p1a), Time), at(not(believe(Agent, Belief)), Time), soundPlan(Agent, Belief, p1a, Time))).


% [agent,belief,time]
% HoldsAt(Plan(agent,belief,P2),time) &
% !HoldsAt(Believe(agent,belief),time) &
% SoundPlan(agent,belief,P2,time) ->
% Happens(Jump(Cat,Chair,Shelf),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6130).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          plan(Agent,Belief,p2), 
%          Time), 
%       ','(
%          holds(
%             not(believe(Agent,Belief)), 
%             Time), 
%          soundPlan(Agent, Belief, p2, 
%             Time))), 
%    happens(
%       jump(cat,chair,shelf), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6130).
if(happens(jump(cat, chair, shelf), Time),  (at(plan(Agent, Belief, p2), Time), at(not(believe(Agent, Belief)), Time), soundPlan(Agent, Belief, p2, Time))).


%; A9
% [agent,belief,plan,time]
% HoldsAt(Plan(agent,belief,plan),time) ->
% Happens(DropPlan(agent,belief,plan),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6136).
% From E: 
% 
% '->'(
%    holds(
%       plan(Agent,Belief,Plan), 
%       Time), 
%    happens(
%       dropPlan(Agent,Belief,Plan), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6136).
if(happens(dropPlan(Agent,Belief,Plan),Time),
   at(plan(Agent,Belief,Plan),Time)).


%; A10
% [agent,belief,time]
% HoldsAt(Plan(agent,belief,P1),time) &
% !HoldsAt(Believe(agent,belief),time) &
% SoundPlan(agent,belief,P1,time) ->
% Happens(AddPlan(agent,belief,P1a),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6141).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          plan(Agent,Belief,p1), 
%          Time), 
%       ','(
%          holds(
%             not(believe(Agent,Belief)), 
%             Time), 
%          soundPlan(Agent, Belief, p1, 
%             Time))), 
%    happens(
%       addPlan(Agent,Belief,p1a), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6141).
if(happens(addPlan(Agent, Belief, p1a), Time),  (at(plan(Agent, Belief, p1), Time), at(not(believe(Agent, Belief)), Time), soundPlan(Agent, Belief, p1, Time))).


% [agent,belief,time]
% HoldsAt(Plan(agent,belief,P1a),time) &
% !HoldsAt(Believe(agent,belief),time) &
% SoundPlan(agent,belief,P1a,time) ->
% Happens(AddPlan(agent,belief,P1b),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6148).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          plan(Agent,Belief,p1a), 
%          Time), 
%       ','(
%          holds(
%             not(believe(Agent,Belief)), 
%             Time), 
%          soundPlan(Agent, Belief, p1a, 
%             Time))), 
%    happens(
%       addPlan(Agent,Belief,p1b), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6148).
if(happens(addPlan(Agent, Belief, p1b), Time),  (at(plan(Agent, Belief, p1a), Time), at(not(believe(Agent, Belief)), Time), soundPlan(Agent, Belief, p1a, Time))).


% [agent,belief,time]
% HoldsAt(Plan(agent,belief,P2),time) &
% !HoldsAt(Believe(agent,belief),time) &
% SoundPlan(agent,belief,P2,time) ->
% Happens(AddPlan(agent,belief,P2a),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6154).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          plan(Agent,Belief,p2), 
%          Time), 
%       ','(
%          holds(
%             not(believe(Agent,Belief)), 
%             Time), 
%          soundPlan(Agent, Belief, p2, 
%             Time))), 
%    happens(
%       addPlan(Agent,Belief,p2a), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6154).
if(happens(addPlan(Agent, Belief, p2a), Time),  (at(plan(Agent, Belief, p2), Time), at(not(believe(Agent, Belief)), Time), soundPlan(Agent, Belief, p2, Time))).


%; reactive behavior
% [agent,food,surface,time]
% !HoldsAt(Satiated(agent),time) &
% HoldsAt(On(agent,surface),time) &
% HoldsAt(On(food,surface),time) ->
% Happens(Eat(agent,food),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6160).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          not(satiated(Agent)), 
%          Time), 
%       ','(
%          holds(
%             on(Agent,Surface), 
%             Time), 
%          holds(
%             on(Food,Surface), 
%             Time))), 
%    happens(
%       eat(Agent,Food), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6160).
if(happens(eat(Agent, Food), Time),  (at(not(satiated(Agent)), Time), at(on(Agent, Surface), Time), at(on(Food, Surface), Time))).


%; narrative


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6168).
% Happens(Move(Chair,Table,Shelf),2).
% From E: 
% 
% happens(
%    move(chair,table,shelf), 2).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6168).
observe(at(move(chair,table,shelf),2)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6170).
%; SelectedPlan - plan library
%;[agent,belief,plan,time]
%;SelectedPlan(agent,belief,plan,time) <->
%;(agent=Cat & belief=BSatiated(Cat) & plan=P1 & time=0) |
%;(agent=Cat & belief=BSatiated(Cat) & plan=P2 & time=4).
% [agent,belief,plan,time]
% SelectedPlan(agent,belief,plan,time) <->
% ({surface1,surface2,surface3,food}
%  HoldsAt(Believe(agent,BOn(agent,surface1)),time) &
%  HoldsAt(Believe(agent,BCanJump(surface1,surface2)),time) &
%  HoldsAt(Believe(agent,BCanJump(surface2,surface3)),time) &
%  HoldsAt(Believe(agent,BOn(food,surface3)),time) &
%  belief=BSatiated(agent) &
%  plan=P1 &
%  time=0) |
% ({surface1,surface2,surface3,food}
%  HoldsAt(Believe(agent,BOn(agent,surface1)),time) &
%  HoldsAt(Believe(agent,BCanJump(surface1,surface2)),time) &
%  HoldsAt(Believe(agent,BCanJump(surface2,surface3)),time) &
%  HoldsAt(Believe(agent,BOn(food,surface3)),time) &
%  belief=BSatiated(agent) &
%  plan=P2 &
%  time=4).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6177).
% From E: 
% 
% <->(
%    selectedPlan(Agent, Belief, Plan, 
%       Time), 
%    ';'(
%       exists(
%          [Surface1,Surface2,Surface3,Food], 
%          ','(
%             holds(
%                believe(Agent, 
%                   bOn(Agent,Surface1)), 
%                Time), 
%             ','(
%                holds(
%                   believe(Agent, 
%                      bCanJump(Surface1,Surface2)), 
%                   Time), 
%                ','(
%                   holds(
%                      believe(Agent, 
%                         bCanJump(Surface2,Surface3)), 
%                      Time), 
%                   ','(
%                      holds(
%                         believe(Agent, 
%                            bOn(Food,Surface3)), 
%                         Time), 
%                      ','(
%                         '='(Belief, 
%                            bSatiated(Agent)), 
%                         ','(
%                            Plan=p1, 
%                            Time=0))))))), 
%       exists(
%          [Surface1,Surface2,Surface3,Food], 
%          ','(
%             holds(
%                believe(Agent, 
%                   bOn(Agent,Surface1)), 
%                Time), 
%             ','(
%                holds(
%                   believe(Agent, 
%                      bCanJump(Surface1,Surface2)), 
%                   Time), 
%                ','(
%                   holds(
%                      believe(Agent, 
%                         bCanJump(Surface2,Surface3)), 
%                      Time), 
%                   ','(
%                      holds(
%                         believe(Agent, 
%                            bOn(Food,Surface3)), 
%                         Time), 
%                      ','(
%                         '='(Belief, 
%                            bSatiated(Agent)), 
%                         ','(
%                            Plan=p2, 
%                            Time=4))))))))).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6177).
selectedPlan(Agent, Belief, Plan, Time) <->
    (   exists([Surface1, Surface2, Surface3, Food],
                (at(believe(Agent, bOn(Agent, Surface1)), Time), at(believe(Agent, bCanJump(Surface1, Surface2)), Time), at(believe(Agent, bCanJump(Surface2, Surface3)), Time), at(believe(Agent, bOn(Food, Surface3)), Time), Belief=bSatiated(Agent), Plan=p1, Time=0))
    ;   exists([Surface1, Surface2, Surface3, Food],
                (at(believe(Agent, bOn(Agent, Surface1)), Time), at(believe(Agent, bCanJump(Surface1, Surface2)), Time), at(believe(Agent, bCanJump(Surface2, Surface3)), Time), at(believe(Agent, bOn(Food, Surface3)), Time), Belief=bSatiated(Agent), Plan=p2, Time=4))
    ).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6197).
%; SoundPlan
% [agent,belief,plan,time]
% SoundPlan(agent,belief,plan,time) <->
% (plan=P1 ->
%  HoldsAt(Believe(agent,BCanJump(Floor,Chair)),time) &
%  HoldsAt(Believe(agent,BCanJump(Chair,Table)),time)) &
% ((plan=P1a | plan=P1b) ->
%   HoldsAt(Believe(agent,BCanJump(Chair,Table)),time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6199).
% From E: 
% 
% <->(
%    soundPlan(Agent, Belief, Plan, 
%       Time), 
%    ','(
%       '->'(
%          Plan=p1, 
%          ','(
%             holds(
%                believe(Agent, 
%                   bCanJump(floor,chair)), 
%                Time), 
%             holds(
%                believe(Agent, 
%                   bCanJump(chair,table)), 
%                Time))), 
%       '->'(
%          ';'(
%             Plan=p1a, 
%             Plan=p1b), 
%          holds(
%             believe(Agent, 
%                bCanJump(chair,table)), 
%             Time)))).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6199).
soundPlan(Agent, Belief, Plan, Time) <->
    if((at(believe(Agent, bCanJump(floor, chair)), Time), at(believe(Agent, bCanJump(chair, table)), Time)),
       Plan=p1),
    if(at(believe(Agent, bCanJump(chair, table)), Time),
        (Plan=p1a;Plan=p1b)).


%; Gamma
% [agent,belief]
% HoldsAt(Goal(agent,belief),0) <->
% (agent=Cat & belief=BSatiated(Cat)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6209).
% From E: 
% 
% <->(
%    holds(
%       goal(Agent,Belief), 0), 
%    ','(
%       Agent=cat, 
%       '='(Belief, 
%          bSatiated(cat)))).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6209).
at(goal(Agent, Belief), 0) <->
    Agent=cat,
    Belief=bSatiated(cat).


% [agent,belief,plan]
 % !HoldsAt(Plan(agent,belief,plan),0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6212).
% From E: 
% 
% holds(
%    not(plan(Agent,Belief,Plan)), 0).
initially(not(plan(Agent,Belief,Plan))).


% [object,surface]
 % HoldsAt(On(object,surface),0) <->
% (object=Cat & surface=Floor) |
% (object=Food1 & surface=Table) |
% (object=Food2 & surface=Shelf).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6214).
% From E: 
% 
% <->(
%    holds(
%       on(Object,Surface), 0), 
%    ';'(
%       ','(
%          Object=cat, 
%          Surface=floor), 
%       ';'(
%          ','(
%             Object=food1, 
%             Surface=(table)), 
%          ','(
%             Object=food2, 
%             Surface=shelf)))).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6214).
at(on(Object, Surface), 0) <->
    (   Object=cat,
        Surface=floor
    ;   Object=food1,
        Surface=(table)
    ;   Object=food2,
        Surface=shelf
    ).


% [surface1,surface2]
 % HoldsAt(CanJump(surface1,surface2),0) <->
% (surface1=Floor & surface2=Chair) |
% (surface1=Chair & surface2=Table) |
% (surface1=Shelf & surface2=Table).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6219).
% From E: 
% 
% <->(
%    holds(
%       canJump(Surface1,Surface2), 0), 
%    ';'(
%       ','(
%          Surface1=floor, 
%          Surface2=chair), 
%       ';'(
%          ','(
%             Surface1=chair, 
%             Surface2=(table)), 
%          ','(
%             Surface1=shelf, 
%             Surface2=(table))))).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6219).
at(canJump(Surface1, Surface2), 0) <->
    (   Surface1=floor,
        Surface2=chair
    ;   Surface1=chair,
        Surface2=(table)
    ;   Surface1=shelf,
        Surface2=(table)
    ).


% [agent,object,surface]
% HoldsAt(Believe(agent,BOn(object,surface)),0) <->
% (agent=Cat & object=Cat & surface=Floor) |
% (agent=Cat & object=Food1 & surface=Table).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6226).
% From E: 
% 
% <->(
%    holds(
%       believe(Agent, 
%          bOn(Object,Surface)), 0), 
%    ';'(
%       ','(
%          Agent=cat, 
%          ','(
%             Object=cat, 
%             Surface=floor)), 
%       ','(
%          Agent=cat, 
%          ','(
%             Object=food1, 
%             Surface=(table))))).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6226).
at(believe(Agent, bOn(Object, Surface)), 0) <->
    (   Agent=cat,
        Object=cat,
        Surface=floor
    ;   Agent=cat,
        Object=food1,
        Surface=(table)
    ).


% [agent,surface1,surface2]
% HoldsAt(Believe(agent,BCanJump(surface1,surface2)),0) <->
% (agent=Cat & surface1=Floor & surface2=Chair) |
% (agent=Cat & surface1=Chair & surface2=Table) |
% (agent=Cat & surface1=Shelf & surface2=Table).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6231).
% From E: 
% 
% <->(
%    holds(
%       believe(Agent, 
%          bCanJump(Surface1,Surface2)), 0), 
%    ';'(
%       ','(
%          Agent=cat, 
%          ','(
%             Surface1=floor, 
%             Surface2=chair)), 
%       ';'(
%          ','(
%             Agent=cat, 
%             ','(
%                Surface1=chair, 
%                Surface2=(table))), 
%          ','(
%             Agent=cat, 
%             ','(
%                Surface1=shelf, 
%                Surface2=(table)))))).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6231).
at(believe(Agent, bCanJump(Surface1, Surface2)), 0) <->
    (   Agent=cat,
        Surface1=floor,
        Surface2=chair
    ;   Agent=cat,
        Surface1=chair,
        Surface2=(table)
    ;   Agent=cat,
        Surface1=shelf,
        Surface2=(table)
    ).


% !HoldsAt(Believe(Cat,BSatiated(Cat)),0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6235).
% From E: 
% 
% holds(
%    not(believe(cat, 
%           bSatiated(cat))), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6235).
initially(not(believe(cat,bSatiated(cat)))).


%; ADDED:


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6239).
% !HoldsAt(Satiated(Cat),0).
% From E: 
% 
% holds(
%    not(satiated(cat)), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6239).
initially(not(satiated(cat))).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6241).
% completion Happens
% From E: 
% 
% ':-'(call_pel_directive(completion(happens))).
:- call_pel_directive(completion(happens)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6243).
% range time 0 7
% From E: 
% 
% ':-'(call_pel_directive(range(time,0,7))).
:- call_pel_directive(range(time, 0, 7)).

% range offset 1 1
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6243).
% From E: 
% 
% ':-'(call_pel_directive(range(offset,1,1))).
:- call_pel_directive(range(offset, 1, 1)).
%; End of file.
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%; FILE: examples/Mueller2006/Chapter11/Lottery.e
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; @book{OrtonyCloreCollins:1988,
%;   author = "Andrew Ortony and Gerald L. Clore and Allan M. Collins",
%;   year = "1988",
%;   title = "The Cognitive Structure of Emotions",
%;   address = "Cambridge",
%;   publisher = "Cambridge University Press",
%; }
%;
%; @book{Mueller:2006,
%;   author = "Erik T. Mueller",
%;   year = "2006",
%;   title = "Commonsense Reasoning",
%;   address = "San Francisco",
%;   publisher = "Morgan Kaufmann/Elsevier",
%; }
%;

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6280).
% option modeldiff on
% From E: 
% 
% ':-'(call_pel_directive(option(modeldiff,on))).
:- call_pel_directive(option(modeldiff, on)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6282).
% load foundations/Root.e
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/Root.e'))).
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6282).
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/EC.e'))).
:- call_pel_directive(load('foundations/EC.e')).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6285).
% sort agent
% From E: 
% 
% sort(agent).
sort(agent).

% sort aboutevent
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6285).
% From E: 
% 
% sort(aboutevent).
sort(aboutevent).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6287).
% sort desirability: integer
% From E: 
% 
% subsort(desirability,integer).
subsort(desirability,integer).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6289).
% agent Kate, Lisa
% From E: 
% 
% t(agent,kate).
isa(kate,agent).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6289).
% From E: 
% 
% t(agent,lisa).
isa(lisa,agent).

% aboutevent WinLotteryKate, WinLotteryLisa
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6289).
% From E: 
% 
% t(aboutevent,winLotteryKate).
isa(winLotteryKate,aboutevent).
% From E: 
% 
% t(aboutevent,winLotteryLisa).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6289).
isa(winLotteryLisa,aboutevent).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6292).
% fluent Joy(agent,aboutevent)
% From E: 
% 
% fluent(joy(agent,aboutevent)).
mpred_prop(joy(agent,aboutevent),fluent).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6292).
fluents([joy/2]).

% fluent Desirability(agent,agent,aboutevent,desirability)
% From E: 
% 
% fluent(desirability(agent, agent, aboutevent, 
%           desirability)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6292).
mpred_prop(desirability(agent,agent,aboutevent,desirability),fluent).
fluents([desirability/4]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6294).
% fluent Believe(agent,aboutevent)
% From E: 
% 
% fluent(believe(agent,aboutevent)).
mpred_prop(believe(agent,aboutevent),fluent).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6294).
fluents([believe/2]).

% fluent Like(agent,agent)
% From E: 
% 
% fluent(like(agent,agent)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6294).
mpred_prop(like(agent,agent),fluent).
fluents([like/2]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6296).
% fluent HappyFor(agent,agent,aboutevent)
% From E: 
% 
% fluent(happyFor(agent,agent,aboutevent)).
mpred_prop(happyFor(agent,agent,aboutevent),fluent).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6296).
fluents([happyFor/3]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6298).
% event WinLottery(agent)
% From E: 
% 
% event(winLottery(agent)).
events([winLottery/1]).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6298).
mpred_prop(winLottery(agent),action).
actions([winLottery/1]).

% event AddJoy(agent,aboutevent)
% From E: 
% 
% event(addJoy(agent,aboutevent)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6298).
events([addJoy/2]).
mpred_prop(addJoy(agent,aboutevent),action).
actions([addJoy/2]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6300).
% event AddHappyFor(agent,agent,aboutevent)
% From E: 
% 
% event(addHappyFor(agent,agent,aboutevent)).
events([addHappyFor/3]).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6300).
mpred_prop(addHappyFor(agent,agent,aboutevent),action).
actions([addHappyFor/3]).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6302).
%; Sigma
% [agent,aboutevent,time]
% Initiates(AddJoy(agent,aboutevent),Joy(agent,aboutevent),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6304).
% From E: 
% 
% initiates_at(
%    addJoy(Agent,Aboutevent), 
%    joy(Agent,Aboutevent), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6304).
initiates(addJoy(Agent,Aboutevent),
	  joy(Agent,Aboutevent)).


% [agent1,agent2,aboutevent,time]
% Initiates(AddHappyFor(agent1,agent2,aboutevent),
%           HappyFor(agent1,agent2,aboutevent),
%           time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6308).
% From E: 
% 
% initiates_at(
%    addHappyFor(Agent1,Agent2,Aboutevent), 
%    happyFor(Agent1,Agent2,Aboutevent), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6308).
initiates(addHappyFor(Agent1,Agent2,Aboutevent),
	  happyFor(Agent1,Agent2,Aboutevent)).


% [agent1,agent2,aboutevent,time]
% (agent1=Kate & aboutevent=WinLotteryKate) |
% (agent1=Lisa & aboutevent=WinLotteryLisa) ->
% Initiates(WinLottery(agent1),Believe(agent2,aboutevent),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6313).
% From E: 
% 
% '->'(
%    ';'(
%       ','(
%          Agent1=kate, 
%          Aboutevent=winLotteryKate), 
%       ','(
%          Agent1=lisa, 
%          Aboutevent=winLotteryLisa)), 
%    initiates_at(
%       winLottery(Agent1), 
%       believe(Agent2,Aboutevent), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6313).
if(initiates(winLottery(Agent1), at(believe(Agent2, Aboutevent), Time)),  (equals(Agent1, kate), equals(Aboutevent, winLotteryKate);equals(Agent1, lisa), equals(Aboutevent, winLotteryLisa))).


%; Delta
% [agent,aboutevent,desirability,time]
% !HoldsAt(Joy(agent,aboutevent),time) &
% HoldsAt(Desirability(agent,agent,aboutevent,desirability),time) &
% desirability=1 &
% HoldsAt(Believe(agent,aboutevent),time) ->
% Happens(AddJoy(agent,aboutevent),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6319).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          not(joy(Agent,Aboutevent)), 
%          Time), 
%       ','(
%          holds(
%             desirability(Agent, Agent, Aboutevent, 
%                Desirability), 
%             Time), 
%          ','(
%             Desirability=1, 
%             holds(
%                believe(Agent,Aboutevent), 
%                Time)))), 
%    happens(
%       addJoy(Agent,Aboutevent), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6319).
if(happens(addJoy(Agent, Aboutevent), Time),  (at(not(joy(Agent, Aboutevent)), Time), at(desirability(Agent, Agent, Aboutevent, Desirability), Time), equals(Desirability, 1), at(believe(Agent, Aboutevent), Time))).


% [agent1,agent2,aboutevent,desirability1,desirability2,time]
% !HoldsAt(HappyFor(agent1,agent2,aboutevent),time) &
% HoldsAt(Desirability(agent1,agent2,aboutevent,desirability1),time) &
% desirability1=1 &
% HoldsAt(Desirability(agent1,agent1,aboutevent,desirability2),time) &
% desirability2=1 &
% HoldsAt(Like(agent1,agent2),time) &
% HoldsAt(Believe(agent1,aboutevent),time) &
% agent1 != agent2 ->
% Happens(AddHappyFor(agent1,agent2,aboutevent),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6327).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          not(happyFor(Agent1,Agent2,Aboutevent)), 
%          Time), 
%       ','(
%          holds(
%             desirability(Agent1, Agent2, Aboutevent, 
%                Desirability1), 
%             Time), 
%          ','(
%             Desirability1=1, 
%             ','(
%                holds(
%                   desirability(Agent1, Agent1, Aboutevent, 
%                      Desirability2), 
%                   Time), 
%                ','(
%                   Desirability2=1, 
%                   ','(
%                      holds(
%                         like(Agent1,Agent2), 
%                         Time), 
%                      ','(
%                         holds(
%                            believe(Agent1,Aboutevent), 
%                            Time), 
%                         Agent1\=Agent2))))))), 
%    happens(
%       addHappyFor(Agent1,Agent2,Aboutevent), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6327).
if(happens(addHappyFor(Agent1, Agent2, Aboutevent), Time),  (at(not(happyFor(Agent1, Agent2, Aboutevent)), Time), at(desirability(Agent1, Agent2, Aboutevent, Desirability1), Time), equals(Desirability1, 1), at(desirability(Agent1, Agent1, Aboutevent, Desirability2), Time), equals(Desirability2, 1), at(like(Agent1, Agent2), Time), at(believe(Agent1, Aboutevent), Time), {dif(Agent1, Agent2)})).


% Happens(WinLottery(Kate),0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6336).
% From E: 
% 
% happens(
%    winLottery(kate), 0).
observe(at(winLottery(kate),0)).


%; Psi
% [agent1,agent2,aboutevent,desirability1,desirability2,time]
% HoldsAt(Desirability(agent1,agent2,aboutevent,desirability1),time) &
% HoldsAt(Desirability(agent1,agent2,aboutevent,desirability2),time) ->
% desirability1 = desirability2.
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6341).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          desirability(Agent1, Agent2, Aboutevent, 
%             Desirability1), 
%          Time), 
%       holds(
%          desirability(Agent1, Agent2, Aboutevent, 
%             Desirability2), 
%          Time)), 
%    Desirability1=Desirability2).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6341).
if(equals(Desirability1, Desirability2),  (at(desirability(Agent1, Agent2, Aboutevent, Desirability1), Time), at(desirability(Agent1, Agent2, Aboutevent, Desirability2), Time))).


%; Gamma
% [agent,aboutevent]
 % !HoldsAt(Joy(agent,aboutevent),0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6348).
% From E: 
% 
% holds(
%    not(joy(Agent,Aboutevent)), 0).
initially(not(joy(Agent,Aboutevent))).


% [agent1,agent2,aboutevent]
 % !HoldsAt(HappyFor(agent1,agent2,aboutevent),0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6348).
% From E: 
% 
% holds(
%    not(happyFor(Agent1,Agent2,Aboutevent)), 0).
initially(not(happyFor(Agent1,Agent2,Aboutevent))).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6350).
% [aboutevent]
 % !HoldsAt(Believe(Kate,aboutevent),0).
% From E: 
% 
% holds(
%    not(believe(kate,Aboutevent)), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6350).
initially(not(believe(kate,Aboutevent))).


% [aboutevent]
 % !HoldsAt(Believe(Lisa,aboutevent),0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6350).
% From E: 
% 
% holds(
%    not(believe(lisa,Aboutevent)), 0).
initially(not(believe(lisa,Aboutevent))).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6352).
% [agent1,agent2,time]
 % HoldsAt(Like(agent1,agent2),time).
% From E: 
% 
% holds(
%    like(Agent1,Agent2), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6352).
at(like(Agent1,Agent2),Time).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6354).
% [time]
 % HoldsAt(Desirability(Lisa,Kate,WinLotteryKate,1),time).
% From E: 
% 
% holds(
%    desirability(lisa, kate, winLotteryKate, 1), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6354).
at(desirability(lisa,kate,winLotteryKate,1),Time).


% [time]
 % HoldsAt(Desirability(Kate,Kate,WinLotteryKate,1),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6354).
% From E: 
% 
% holds(
%    desirability(kate, kate, winLotteryKate, 1), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6354).
at(desirability(kate,kate,winLotteryKate,1),Time).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6356).
% [time]
 % HoldsAt(Desirability(Lisa,Lisa,WinLotteryKate,1),time).
% From E: 
% 
% holds(
%    desirability(lisa, lisa, winLotteryKate, 1), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6356).
at(desirability(lisa,lisa,winLotteryKate,1),Time).


% [time]
 % HoldsAt(Desirability(Kate,Kate,WinLotteryLisa,0),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6356).
% From E: 
% 
% holds(
%    desirability(kate, kate, winLotteryLisa, 0), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6356).
at(desirability(kate,kate,winLotteryLisa,0),Time).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6358).
% [time]
 % HoldsAt(Desirability(Kate,Lisa,WinLotteryLisa,0),time).
% From E: 
% 
% holds(
%    desirability(kate, lisa, winLotteryLisa, 0), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6358).
at(desirability(kate,lisa,winLotteryLisa,0),Time).


% [time]
 % HoldsAt(Desirability(Kate,Kate,WinLotteryLisa,0),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6358).
% From E: 
% 
% holds(
%    desirability(kate, kate, winLotteryLisa, 0), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6358).
at(desirability(kate,kate,winLotteryLisa,0),Time).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6360).
% [time]
 % HoldsAt(Desirability(Kate,Lisa,WinLotteryKate,0),time).
% From E: 
% 
% holds(
%    desirability(kate, lisa, winLotteryKate, 0), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6360).
at(desirability(kate,lisa,winLotteryKate,0),Time).


% [time]
 % HoldsAt(Desirability(Lisa,Lisa,WinLotteryLisa,0),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6360).
% From E: 
% 
% holds(
%    desirability(lisa, lisa, winLotteryLisa, 0), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6360).
at(desirability(lisa,lisa,winLotteryLisa,0),Time).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6362).
% [time]
 % HoldsAt(Desirability(Lisa,Kate,WinLotteryLisa,1),time).
% From E: 
% 
% holds(
%    desirability(lisa, kate, winLotteryLisa, 1), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6362).
at(desirability(lisa,kate,winLotteryLisa,1),Time).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6364).
% completion Happens
% From E: 
% 
% ':-'(call_pel_directive(completion(happens))).
:- call_pel_directive(completion(happens)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6366).
% range time 0 3
% From E: 
% 
% ':-'(call_pel_directive(range(time,0,3))).
:- call_pel_directive(range(time, 0, 3)).

% range desirability -1 1
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6366).
% From E: 
% 
% ':-'(call_pel_directive(range(desirability,-1,1))).
:- call_pel_directive(range(desirability, -1, 1)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6368).
% range offset 1 1
% From E: 
% 
% ':-'(call_pel_directive(range(offset,1,1))).
:- call_pel_directive(range(offset, 1, 1)).
%; End of file.
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%; FILE: examples/Manual/Example1a.e
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; deduction

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6389).
% option timediff off
% From E: 
% 
% ':-'(call_pel_directive(option(timediff,off))).
:- call_pel_directive(option(timediff, off)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6391).
% load foundations/Root.e
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/Root.e'))).
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6391).
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/EC.e'))).
:- call_pel_directive(load('foundations/EC.e')).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6394).
% sort agent
% From E: 
% 
% sort(agent).
sort(agent).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6396).
% fluent Awake(agent)
% From E: 
% 
% fluent(awake(agent)).
mpred_prop(awake(agent),fluent).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6396).
fluents([awake/1]).

% event WakeUp(agent)
% From E: 
% 
% event(wakeUp(agent)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6396).
events([wakeUp/1]).
mpred_prop(wakeUp(agent),action).
actions([wakeUp/1]).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6399).
% [agent,time]
 % Initiates(WakeUp(agent),Awake(agent),time).
% From E: 
% 
% initiates_at(
%    wakeUp(Agent), 
%    awake(Agent), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6399).
initiates(wakeUp(Agent),awake(Agent)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6401).
% agent James
% From E: 
% 
% t(agent,james).
isa(james,agent).


% !HoldsAt(Awake(James),0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6401).
% From E: 
% 
% holds(
%    not(awake(james)), 0).
initially(not(awake(james))).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6403).
% Delta: 
% From E: 
% 
% directive(delta).
directive(delta).
 


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6403).
% Happens(WakeUp(James),0).
% From E: 
% 
% happens(
%    wakeUp(james), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6403).
observe(at(wakeUp(james),0)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6405).
% completion Delta Happens
% From E: 
% 
% ':-'(call_pel_directive(completion(delta))).
:- call_pel_directive(completion(delta)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6405).
% From E: 
% 
% ':-'(call_pel_directive(completion(happens))).
:- call_pel_directive(completion(happens)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6407).
% range time 0 1
% From E: 
% 
% ':-'(call_pel_directive(range(time,0,1))).
:- call_pel_directive(range(time, 0, 1)).

% range offset 1 1
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6407).
% From E: 
% 
% ':-'(call_pel_directive(range(offset,1,1))).
:- call_pel_directive(range(offset, 1, 1)).
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%; FILE: examples/Manual/Example1.e
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; deduction

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6427).
% load foundations/Root.e
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/Root.e'))).
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6427).
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/EC.e'))).
:- call_pel_directive(load('foundations/EC.e')).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6430).
% sort agent
% From E: 
% 
% sort(agent).
sort(agent).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6432).
% fluent Awake(agent)
% From E: 
% 
% fluent(awake(agent)).
mpred_prop(awake(agent),fluent).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6432).
fluents([awake/1]).

% event WakeUp(agent)
% From E: 
% 
% event(wakeUp(agent)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6432).
events([wakeUp/1]).
mpred_prop(wakeUp(agent),action).
actions([wakeUp/1]).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6435).
% [agent,time]
 % Initiates(WakeUp(agent),Awake(agent),time).
% From E: 
% 
% initiates_at(
%    wakeUp(Agent), 
%    awake(Agent), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6435).
initiates(wakeUp(Agent),awake(Agent)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6437).
% agent James
% From E: 
% 
% t(agent,james).
isa(james,agent).


% !HoldsAt(Awake(James),0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6437).
% From E: 
% 
% holds(
%    not(awake(james)), 0).
initially(not(awake(james))).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6439).
% Delta: 
% From E: 
% 
% directive(delta).
directive(delta).
 


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6439).
% Happens(WakeUp(James),0).
% From E: 
% 
% happens(
%    wakeUp(james), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6439).
observe(at(wakeUp(james),0)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6441).
% completion Delta Happens
% From E: 
% 
% ':-'(call_pel_directive(completion(delta))).
:- call_pel_directive(completion(delta)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6441).
% From E: 
% 
% ':-'(call_pel_directive(completion(happens))).
:- call_pel_directive(completion(happens)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6443).
% range time 0 1
% From E: 
% 
% ':-'(call_pel_directive(range(time,0,1))).
:- call_pel_directive(range(time, 0, 1)).

% range offset 1 1
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6443).
% From E: 
% 
% ':-'(call_pel_directive(range(offset,1,1))).
:- call_pel_directive(range(offset, 1, 1)).
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%; FILE: examples/Manual/Example4.e
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6461).
% load foundations/Root.e
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/Root.e'))).
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6461).
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/EC.e'))).
:- call_pel_directive(load('foundations/EC.e')).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6464).
% sort agent
% From E: 
% 
% sort(agent).
sort(agent).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6466).
% fluent Awake(agent)
% From E: 
% 
% fluent(awake(agent)).
mpred_prop(awake(agent),fluent).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6466).
fluents([awake/1]).

% event WakeUp(agent)
% From E: 
% 
% event(wakeUp(agent)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6466).
events([wakeUp/1]).
mpred_prop(wakeUp(agent),action).
actions([wakeUp/1]).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6469).
% [agent,time]
 % Initiates(WakeUp(agent),Awake(agent),time).
% From E: 
% 
% initiates_at(
%    wakeUp(Agent), 
%    awake(Agent), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6469).
initiates(wakeUp(Agent),awake(Agent)).


% [agent,time]
 % Happens(WakeUp(agent),time) -> !HoldsAt(Awake(agent),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6469).
% From E: 
% 
% '->'(
%    happens(
%       wakeUp(Agent), 
%       Time), 
%    holds(
%       not(awake(Agent)), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6469).
if(at(not(awake(Agent)),Time),
   happens(wakeUp(Agent),Time)).

% agent James, Jessie
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6471).
% From E: 
% 
% t(agent,james).
isa(james,agent).
% From E: 
% 
% t(agent,jessie).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6471).
isa(jessie,agent).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6473).
% !HoldsAt(Awake(James),0).
% From E: 
% 
% holds(
%    not(awake(james)), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6473).
initially(not(awake(james))).


% !HoldsAt(Awake(Jessie),0).
% From E: 
% 
% holds(
%    not(awake(jessie)), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6473).
initially(not(awake(jessie))).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6475).
% HoldsAt(Awake(James),1).
% From E: 
% 
% holds(
%    awake(james), 1).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6475).
at(awake(james),1).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6477).
% range time 0 1
% From E: 
% 
% ':-'(call_pel_directive(range(time,0,1))).
:- call_pel_directive(range(time, 0, 1)).

% range offset 1 1
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6477).
% From E: 
% 
% ':-'(call_pel_directive(range(offset,1,1))).
:- call_pel_directive(range(offset, 1, 1)).
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%; FILE: examples/Manual/Example3.e
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6495).
% load foundations/Root.e
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/Root.e'))).
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6495).
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/EC.e'))).
:- call_pel_directive(load('foundations/EC.e')).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6498).
% sort agent
% From E: 
% 
% sort(agent).
sort(agent).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6500).
% fluent Awake(agent)
% From E: 
% 
% fluent(awake(agent)).
mpred_prop(awake(agent),fluent).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6500).
fluents([awake/1]).

% event WakeUp(agent)
% From E: 
% 
% event(wakeUp(agent)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6500).
events([wakeUp/1]).
mpred_prop(wakeUp(agent),action).
actions([wakeUp/1]).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6503).
% [agent,time]
 % Initiates(WakeUp(agent),Awake(agent),time).
% From E: 
% 
% initiates_at(
%    wakeUp(Agent), 
%    awake(Agent), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6503).
initiates(wakeUp(Agent),awake(Agent)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6505).
% agent James, Jessie
% From E: 
% 
% t(agent,james).
isa(james,agent).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6505).
% From E: 
% 
% t(agent,jessie).
isa(jessie,agent).


% !HoldsAt(Awake(James),0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6505).
% From E: 
% 
% holds(
%    not(awake(james)), 0).
initially(not(awake(james))).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6507).
% HoldsAt(Awake(James),1).
% From E: 
% 
% holds(
%    awake(james), 1).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6507).
at(awake(james),1).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6509).
% range time 0 1
% From E: 
% 
% ':-'(call_pel_directive(range(time,0,1))).
:- call_pel_directive(range(time, 0, 1)).

% range offset 1 1
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6509).
% From E: 
% 
% ':-'(call_pel_directive(range(offset,1,1))).
:- call_pel_directive(range(offset, 1, 1)).
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%; FILE: examples/Manual/Example2.e
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6527).
% load foundations/Root.e
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/Root.e'))).
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6527).
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/EC.e'))).
:- call_pel_directive(load('foundations/EC.e')).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6530).
% sort agent
% From E: 
% 
% sort(agent).
sort(agent).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6532).
% fluent Awake(agent)
% From E: 
% 
% fluent(awake(agent)).
mpred_prop(awake(agent),fluent).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6532).
fluents([awake/1]).

% event WakeUp(agent)
% From E: 
% 
% event(wakeUp(agent)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6532).
events([wakeUp/1]).
mpred_prop(wakeUp(agent),action).
actions([wakeUp/1]).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6535).
% [agent,time]
 % Initiates(WakeUp(agent),Awake(agent),time).
% From E: 
% 
% initiates_at(
%    wakeUp(Agent), 
%    awake(Agent), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6535).
initiates(wakeUp(Agent),awake(Agent)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6537).
% agent James
% From E: 
% 
% t(agent,james).
isa(james,agent).


% !HoldsAt(Awake(James),0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6537).
% From E: 
% 
% holds(
%    not(awake(james)), 0).
initially(not(awake(james))).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6539).
% HoldsAt(Awake(James),1).
% From E: 
% 
% holds(
%    awake(james), 1).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6539).
at(awake(james),1).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6541).
% range time 0 1
% From E: 
% 
% ':-'(call_pel_directive(range(time,0,1))).
:- call_pel_directive(range(time, 0, 1)).

% range offset 1 1
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6541).
% From E: 
% 
% ':-'(call_pel_directive(range(offset,1,1))).
:- call_pel_directive(range(offset, 1, 1)).
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%; FILE: examples/Mueller2004b/RunningAndDriving2.e
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; @inproceedings{Mueller:2004b,
%;   author = "Erik T. Mueller",
%;   year = "2004",
%;   title = "A tool for satisfiability-based commonsense reasoning in the event calculus",
%;   editor = "Valerie Barr and Zdravko Markov",
%;   booktitle = "\uppercase{P}roceedings of the \uppercase{S}eventeenth \uppercase{I}nternational \uppercase{F}lorida \uppercase{A}rtificial \uppercase{I}ntelligence \uppercase{R}esearch \uppercase{S}ociety \uppercase{C}onference",
%;   pages = "147--152",
%;   address = "Menlo Park, CA",
%;   publisher = "AAAI Press",
%; }
%;

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6571).
% load foundations/Root.e
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/Root.e'))).
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6571).
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/EC.e'))).
:- call_pel_directive(load('foundations/EC.e')).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6574).
% sort agent
% From E: 
% 
% sort(agent).
sort(agent).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6576).
% fluent Tired(agent)
% From E: 
% 
% fluent(tired(agent)).
mpred_prop(tired(agent),fluent).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6576).
fluents([tired/1]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6578).
% event Move(agent)
% From E: 
% 
% event(move(agent)).
events([move/1]).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6578).
mpred_prop(move(agent),action).
actions([move/1]).

% event Run(agent)
% From E: 
% 
% event(run(agent)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6578).
events([run/1]).
mpred_prop(run(agent),action).
actions([run/1]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6580).
% event Drive(agent)
% From E: 
% 
% event(drive(agent)).
events([drive/1]).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6580).
mpred_prop(drive(agent),action).
actions([drive/1]).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6582).
% [agent,time]
% Happens(Move(agent),time) ->
% Happens(Run(agent),time) | Happens(Drive(agent),time).
% From E: 
% 
% '->'(
%    happens(
%       move(Agent), 
%       Time), 
%    ';'(
%       happens(
%          run(Agent), 
%          Time), 
%       happens(
%          drive(Agent), 
%          Time))).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6582).
 if((happens(run(Agent), Time);happens(drive(Agent), Time)),
      happens(move(Agent), Time)).

% xor Run, Drive
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6585).
% From E: 
% 
% xor([run,drive]).
xor([run,drive]).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6588).
% [agent,time]
 % Initiates(Run(agent),Tired(agent),time).
% From E: 
% 
% initiates_at(
%    run(Agent), 
%    tired(Agent), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6588).
initiates(run(Agent),tired(Agent)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6590).
% agent James
% From E: 
% 
% t(agent,james).
isa(james,agent).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6592).
% !HoldsAt(Tired(James),0).
% From E: 
% 
% holds(
%    not(tired(james)), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6592).
initially(not(tired(james))).


% Happens(Move(James),0).
% From E: 
% 
% happens(
%    move(james), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6592).
observe(at(move(james),0)).

% range time 0 1
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6594).
% From E: 
% 
% ':-'(call_pel_directive(range(time,0,1))).
:- call_pel_directive(range(time, 0, 1)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6596).
% range offset 1 1
% From E: 
% 
% ':-'(call_pel_directive(range(offset,1,1))).
:- call_pel_directive(range(offset, 1, 1)).
%; End of file.
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%; FILE: examples/Mueller2004b/OffOn.e
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; @inproceedings{Mueller:2004b,
%;   author = "Erik T. Mueller",
%;   year = "2004",
%;   title = "A tool for satisfiability-based commonsense reasoning in the event calculus",
%;   editor = "Valerie Barr and Zdravko Markov",
%;   booktitle = "\uppercase{P}roceedings of the \uppercase{S}eventeenth \uppercase{I}nternational \uppercase{F}lorida \uppercase{A}rtificial \uppercase{I}ntelligence \uppercase{R}esearch \uppercase{S}ociety \uppercase{C}onference",
%;   pages = "147--152",
%;   address = "Menlo Park, CA",
%;   publisher = "AAAI Press",
%; }
%;

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6627).
% load foundations/Root.e
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/Root.e'))).
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6627).
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/EC.e'))).
:- call_pel_directive(load('foundations/EC.e')).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6630).
% sort agent
% From E: 
% 
% sort(agent).
sort(agent).

% sort switch
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6630).
% From E: 
% 
% sort(switch).
sort(switch).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6633).
% fluent On(switch)
% From E: 
% 
% fluent(on(switch)).
mpred_prop(on(switch),fluent).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6633).
fluents([on/1]).

% fluent Off(switch)
% From E: 
% 
% fluent(off(switch)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6633).
mpred_prop(off(switch),fluent).
fluents([off/1]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6635).
% event TurnOn(agent,switch)
% From E: 
% 
% event(turnOn(agent,switch)).
events([turnOn/2]).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6635).
mpred_prop(turnOn(agent,switch),action).
actions([turnOn/2]).

% event TurnOff(agent,switch)
% From E: 
% 
% event(turnOff(agent,switch)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6635).
events([turnOff/2]).
mpred_prop(turnOff(agent,switch),action).
actions([turnOff/2]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6638).
% noninertial Off
% From E: 
% 
% ':-'(call_pel_directive(noninertial(off))).
:- call_pel_directive(noninertial(off)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6640).
% [switch,time]
 % HoldsAt(Off(switch),time) <-> !HoldsAt(On(switch),time).
% From E: 
% 
% <->(
%    holds(
%       off(Switch), 
%       Time), 
%    holds(
%       not(on(Switch)), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6640).
at(off(Switch), Time) <->
    at(not(on(Switch)), Time).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6642).
% [agent,switch,time]
 % Initiates(TurnOn(agent,switch),On(switch),time).
% From E: 
% 
% initiates_at(
%    turnOn(Agent,Switch), 
%    on(Switch), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6642).
initiates(turnOn(Agent,Switch),on(Switch)).


% [agent,switch,time]
 % Terminates(TurnOff(agent,switch),On(switch),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6642).
% From E: 
% 
% terminates_at(
%    turnOff(Agent,Switch), 
%    on(Switch), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6642).
terminates(turnOff(Agent,Switch),on(Switch)).

% agent James
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6644).
% From E: 
% 
% t(agent,james).
isa(james,agent).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6646).
% switch Switch1
% From E: 
% 
% t(switch,switch1).
isa(switch1,switch).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6648).
% !HoldsAt(On(Switch1),0).
% From E: 
% 
% holds(
%    not(on(switch1)), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6648).
initially(not(on(switch1))).


% Happens(TurnOn(James,Switch1),0).
% From E: 
% 
% happens(
%    turnOn(james,switch1), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6648).
observe(at(turnOn(james,switch1),0)).

% range time 0 1
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6650).
% From E: 
% 
% ':-'(call_pel_directive(range(time,0,1))).
:- call_pel_directive(range(time, 0, 1)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6652).
% range offset 1 1
% From E: 
% 
% ':-'(call_pel_directive(range(offset,1,1))).
:- call_pel_directive(range(offset, 1, 1)).
%; End of file.
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%; FILE: examples/Mueller2004b/TV2.e
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; @inproceedings{Mueller:2004b,
%;   author = "Erik T. Mueller",
%;   year = "2004",
%;   title = "A tool for satisfiability-based commonsense reasoning in the event calculus",
%;   editor = "Valerie Barr and Zdravko Markov",
%;   booktitle = "\uppercase{P}roceedings of the \uppercase{S}eventeenth \uppercase{I}nternational \uppercase{F}lorida \uppercase{A}rtificial \uppercase{I}ntelligence \uppercase{R}esearch \uppercase{S}ociety \uppercase{C}onference",
%;   pages = "147--152",
%;   address = "Menlo Park, CA",
%;   publisher = "AAAI Press",
%; }
%;

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6683).
% load foundations/Root.e
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/Root.e'))).
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6683).
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/EC.e'))).
:- call_pel_directive(load('foundations/EC.e')).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6686).
% sort agent
% From E: 
% 
% sort(agent).
sort(agent).

% sort switch
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6686).
% From E: 
% 
% sort(switch).
sort(switch).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6688).
% sort tv
% From E: 
% 
% sort(tv).
sort(tv).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6690).
% function TVOf(switch): tv
% From E: 
% 
% function(
%    tVOf(switch), 
%    tv).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6690).
function(tVOf(switch),tv).

% fluent SwitchOn(switch)
% From E: 
% 
% fluent(switchOn(switch)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6690).
mpred_prop(switchOn(switch),fluent).
fluents([switchOn/1]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6692).
% fluent TVOn(tv)
% From E: 
% 
% fluent(tVOn(tv)).
mpred_prop(tVOn(tv),fluent).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6692).
fluents([tVOn/1]).

% fluent PluggedIn(tv)
% From E: 
% 
% fluent(pluggedIn(tv)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6692).
mpred_prop(pluggedIn(tv),fluent).
fluents([pluggedIn/1]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6694).
% event TurnOn(agent,switch)
% From E: 
% 
% event(turnOn(agent,switch)).
events([turnOn/2]).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6694).
mpred_prop(turnOn(agent,switch),action).
actions([turnOn/2]).

% event TurnOff(agent,switch)
% From E: 
% 
% event(turnOff(agent,switch)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6694).
events([turnOff/2]).
mpred_prop(turnOff(agent,switch),action).
actions([turnOff/2]).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6697).
% [agent,switch,time]
 % Initiates(TurnOn(agent,switch),SwitchOn(switch),time).
% From E: 
% 
% initiates_at(
%    turnOn(Agent,Switch), 
%    switchOn(Switch), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6697).
initiates(turnOn(Agent,Switch),switchOn(Switch)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6699).
% [agent,switch,tv,time]
% TVOf(switch)=tv & HoldsAt(PluggedIn(tv),time) ->
% Initiates(TurnOn(agent,switch),TVOn(tv),time).
% From E: 
% 
% '->'(
%    ','(
%       '='(
%          tVOf(Switch), 
%          Tv), 
%       holds(
%          pluggedIn(Tv), 
%          Time)), 
%    initiates_at(
%       turnOn(Agent,Switch), 
%       tVOn(Tv), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6699).
if(initiates(turnOn(Agent, Switch), at(tVOn(Tv), Time)),  (tVOf(Switch, Tv), at(pluggedIn(Tv), Time))).

% agent James
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6702).
% From E: 
% 
% t(agent,james).
isa(james,agent).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6704).
% switch Switch1
% From E: 
% 
% t(switch,switch1).
isa(switch1,switch).

% tv TV1
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6704).
% From E: 
% 
% t(tv,tv1).
isa(tv1,tv).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6707).
% TVOf(Switch1)=TV1.
% From E: 
% 
% '='(
%    tVOf(switch1), 
%    tv1).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6707).
tVOf(switch1,tv1).


% !HoldsAt(PluggedIn(TV1),0).
% From E: 
% 
% holds(
%    not(pluggedIn(tv1)), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6707).
initially(not(pluggedIn(tv1))).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6709).
% !HoldsAt(SwitchOn(Switch1),0).
% From E: 
% 
% holds(
%    not(switchOn(switch1)), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6709).
initially(not(switchOn(switch1))).


% !HoldsAt(TVOn(TV1),0).
% From E: 
% 
% holds(
%    not(tVOn(tv1)), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6709).
initially(not(tVOn(tv1))).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6711).
% Happens(TurnOn(James,Switch1),0).
% From E: 
% 
% happens(
%    turnOn(james,switch1), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6711).
observe(at(turnOn(james,switch1),0)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6713).
% range time 0 1
% From E: 
% 
% ':-'(call_pel_directive(range(time,0,1))).
:- call_pel_directive(range(time, 0, 1)).

% range offset 1 1
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6713).
% From E: 
% 
% ':-'(call_pel_directive(range(offset,1,1))).
:- call_pel_directive(range(offset, 1, 1)).
%; End of file.
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%; FILE: examples/Mueller2004b/Approve.e
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; example of concurrent events with cumulative or canceling effects
%;
%; @inproceedings{Mueller:2004b,
%;   author = "Erik T. Mueller",
%;   year = "2004",
%;   title = "A tool for satisfiability-based commonsense reasoning in the event calculus",
%;   editor = "Valerie Barr and Zdravko Markov",
%;   booktitle = "\uppercase{P}roceedings of the \uppercase{S}eventeenth \uppercase{I}nternational \uppercase{F}lorida \uppercase{A}rtificial \uppercase{I}ntelligence \uppercase{R}esearch \uppercase{S}ociety \uppercase{C}onference",
%;   pages = "147--152",
%;   address = "Menlo Park, CA",
%;   publisher = "AAAI Press",
%; }
%;

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6747).
% load foundations/Root.e
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/Root.e'))).
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6747).
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/EC.e'))).
:- call_pel_directive(load('foundations/EC.e')).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6750).
% sort agent
% From E: 
% 
% sort(agent).
sort(agent).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6752).
% event ApproveOf(agent,agent)
% From E: 
% 
% event(approveOf(agent,agent)).
events([approveOf/2]).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6752).
mpred_prop(approveOf(agent,agent),action).
actions([approveOf/2]).

% event DisapproveOf(agent,agent)
% From E: 
% 
% event(disapproveOf(agent,agent)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6752).
events([disapproveOf/2]).
mpred_prop(disapproveOf(agent,agent),action).
actions([disapproveOf/2]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6754).
% fluent Happy(agent)
% From E: 
% 
% fluent(happy(agent)).
mpred_prop(happy(agent),fluent).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6754).
fluents([happy/1]).

% fluent Confused(agent)
% From E: 
% 
% fluent(confused(agent)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6754).
mpred_prop(confused(agent),fluent).
fluents([confused/1]).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6757).
% [agent1,agent2,time]
% !Happens(DisapproveOf(agent1,agent2),time) ->
% Initiates(ApproveOf(agent1,agent2),Happy(agent2),time).
% From E: 
% 
% '->'(
%    not(happens(
%           disapproveOf(Agent1,Agent2), 
%           Time)), 
%    initiates_at(
%       approveOf(Agent1,Agent2), 
%       happy(Agent2), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6757).
if(initiates(approveOf(Agent1,Agent2),
	     at(happy(Agent2),Time)),
   not(happens(disapproveOf(Agent1,Agent2),Time))).


% [agent1,agent2,time]
% !Happens(ApproveOf(agent1,agent2),time) ->
% Terminates(DisapproveOf(agent1,agent2),Happy(agent2),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6762).
% From E: 
% 
% '->'(
%    not(happens(
%           approveOf(Agent1,Agent2), 
%           Time)), 
%    terminates_at(
%       disapproveOf(Agent1,Agent2), 
%       happy(Agent2), 
%       Time)).
if(terminates(disapproveOf(Agent1,Agent2),
	      at(happy(Agent2),Time)),
   not(happens(approveOf(Agent1,Agent2),Time))).


% [agent1,agent2,time]
% Happens(DisapproveOf(agent1,agent2),time) ->
% Initiates(ApproveOf(agent1,agent2),Confused(agent2),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6766).
% From E: 
% 
% '->'(
%    happens(
%       disapproveOf(Agent1,Agent2), 
%       Time), 
%    initiates_at(
%       approveOf(Agent1,Agent2), 
%       confused(Agent2), 
%       Time)).
if(initiates(approveOf(Agent1,Agent2),
	     at(confused(Agent2),Time)),
   happens(disapproveOf(Agent1,Agent2),Time)).

% agent James, Peter
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6768).
% From E: 
% 
% t(agent,james).
isa(james,agent).
% From E: 
% 
% t(agent,peter).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6768).
isa(peter,agent).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6771).
% [agent]
 % !HoldsAt(Happy(agent),0) & !HoldsAt(Confused(agent),0).
% From E: 
% 
% ','(
%    holds(
%       not(happy(Agent)), 0), 
%    holds(
%       not(confused(Agent)), 0)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6771).
at(not(happy(Agent)), 0),
at(not(confused(Agent)), 0).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6773).
% Happens(ApproveOf(Peter,James),0).
% From E: 
% 
% happens(
%    approveOf(peter,james), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6773).
observe(at(approveOf(peter,james),0)).


% Happens(DisapproveOf(Peter,James),0).
% From E: 
% 
% happens(
%    disapproveOf(peter,james), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6773).
observe(at(disapproveOf(peter,james),0)).

% completion Happens
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6775).
% From E: 
% 
% ':-'(call_pel_directive(completion(happens))).
:- call_pel_directive(completion(happens)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6778).
% range time 0 1
% From E: 
% 
% ':-'(call_pel_directive(range(time,0,1))).
:- call_pel_directive(range(time, 0, 1)).

% range offset 1 1
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6778).
% From E: 
% 
% ':-'(call_pel_directive(range(offset,1,1))).
:- call_pel_directive(range(offset, 1, 1)).
%; End of file.
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%; FILE: examples/Mueller2004b/Leaf.e
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; @inproceedings{Mueller:2004b,
%;   author = "Erik T. Mueller",
%;   year = "2004",
%;   title = "A tool for satisfiability-based commonsense reasoning in the event calculus",
%;   editor = "Valerie Barr and Zdravko Markov",
%;   booktitle = "\uppercase{P}roceedings of the \uppercase{S}eventeenth \uppercase{I}nternational \uppercase{F}lorida \uppercase{A}rtificial \uppercase{I}ntelligence \uppercase{R}esearch \uppercase{S}ociety \uppercase{C}onference",
%;   pages = "147--152",
%;   address = "Menlo Park, CA",
%;   publisher = "AAAI Press",
%; }
%;

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6810).
% option trajectory on
% From E: 
% 
% ':-'(call_pel_directive(option(trajectory,on))).
:- call_pel_directive(option(trajectory, on)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6812).
% load foundations/Root.e
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/Root.e'))).
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6812).
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/EC.e'))).
:- call_pel_directive(load('foundations/EC.e')).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6815).
% sort object
% From E: 
% 
% sort(object).
sort(object).

% sort height: integer
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6815).
% From E: 
% 
% subsort(height,integer).
subsort(height,integer).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6818).
% fluent Height(object,height)
% From E: 
% 
% fluent(height(object,height)).
mpred_prop(height(object,height),fluent).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6818).
fluents([height/2]).

% fluent Falling(object)
% From E: 
% 
% fluent(falling(object)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6818).
mpred_prop(falling(object),fluent).
fluents([falling/1]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6820).
% event StartFalling(object)
% From E: 
% 
% event(startFalling(object)).
mpred_prop(startFalling(object),event).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6820).
events([startFalling/1]).

% event HitsGround(object)
% From E: 
% 
% event(hitsGround(object)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6820).
mpred_prop(hitsGround(object),event).
events([hitsGround/1]).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6823).
% [object,height1,height2,time]
% HoldsAt(Height(object,height1),time) &
% HoldsAt(Height(object,height2),time) ->
% height1=height2.
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          height(Object,Height1), 
%          Time), 
%       holds(
%          height(Object,Height2), 
%          Time)), 
%    Height1=Height2).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6823).
if(equals(Height1, Height2),  (at(height(Object, Height1), Time), at(height(Object, Height2), Time))).


% [object,time]
% Initiates(StartFalling(object),Falling(object),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6829).
% From E: 
% 
% initiates_at(
%    startFalling(Object), 
%    falling(Object), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6829).
initiates(startFalling(Object),falling(Object)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6831).
% [object,height,time]
% Releases(StartFalling(object),Height(object,height),time).
% From E: 
% 
% releases_at(
%    startFalling(Object), 
%    height(Object,Height), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6831).
releases(startFalling(Object),height(Object,Height)).


% [object,height1,height2,offset,time]
% HoldsAt(Height(object,height1),time) &
% height2=height1-offset ->
% Trajectory(Falling(object),time,Height(object,height2),offset).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6835).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          height(Object,Height1), 
%          Time), 
%       Height2=Height1-Offset), 
%    trajectory(
%       falling(Object), 
%       Time, 
%       height(Object,Height2), 
%       Offset)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6835).
if(trajectory(falling(Object), Time, height(Object, Height2), Offset),  (at(height(Object, Height1), Time), equals(Height2, Height1-Offset))).


% [object,time]
% HoldsAt(Falling(object),time) &
% HoldsAt(Height(object,0),time) ->
% Happens(HitsGround(object),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6840).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          falling(Object), 
%          Time), 
%       holds(
%          height(Object,0), 
%          Time)), 
%    happens(
%       hitsGround(Object), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6840).
if(happens(hitsGround(Object), Time),  (at(falling(Object), Time), at(height(Object, 0), Time))).


%;[object,height1,height2,time]
%;HoldsAt(Height(object,height1),time) &
%;height1 != height2 ->
%;Terminates(HitsGround(object),Height(object,height2),time).
% [object,height,time]
% HoldsAt(Height(object,height),time) ->
% Initiates(HitsGround(object),Height(object,height),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6849).
% From E: 
% 
% '->'(
%    holds(
%       height(Object,Height), 
%       Time), 
%    initiates_at(
%       hitsGround(Object), 
%       height(Object,Height), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6849).
if(initiates(hitsGround(Object),
	     at(height(Object,Height),Time)),
   at(height(Object,Height),Time)).


% [object,time]
% Terminates(HitsGround(object),Falling(object),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6854).
% From E: 
% 
% terminates_at(
%    hitsGround(Object), 
%    falling(Object), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6854).
terminates(hitsGround(Object),falling(Object)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6856).
% object Leaf
% From E: 
% 
% t(object,leaf).
isa(leaf,object).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6858).
% !HoldsAt(Falling(Leaf),0).
% From E: 
% 
% holds(
%    not(falling(leaf)), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6858).
initially(not(falling(leaf))).


% HoldsAt(Height(Leaf,4),0).
% From E: 
% 
% holds(
%    height(leaf,4), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6858).
initially(height(leaf,4)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6860).
% Happens(StartFalling(Leaf),2).
% From E: 
% 
% happens(
%    startFalling(leaf), 2).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6860).
observe(at(startFalling(leaf),2)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6862).
% completion Happens
% From E: 
% 
% ':-'(call_pel_directive(completion(happens))).
:- call_pel_directive(completion(happens)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6864).
% range time 0 7
% From E: 
% 
% ':-'(call_pel_directive(range(time,0,7))).
:- call_pel_directive(range(time, 0, 7)).

% range offset 1 4
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6864).
% From E: 
% 
% ':-'(call_pel_directive(range(offset,1,4))).
:- call_pel_directive(range(offset, 1, 4)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6866).
% range height 0 4
% From E: 
% 
% ':-'(call_pel_directive(range(height,0,4))).
:- call_pel_directive(range(height, 0, 4)).
%; End of file.
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%; FILE: examples/Mueller2004b/RunningAndDriving1.e
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; @inproceedings{Mueller:2004b,
%;   author = "Erik T. Mueller",
%;   year = "2004",
%;   title = "A tool for satisfiability-based commonsense reasoning in the event calculus",
%;   editor = "Valerie Barr and Zdravko Markov",
%;   booktitle = "\uppercase{P}roceedings of the \uppercase{S}eventeenth \uppercase{I}nternational \uppercase{F}lorida \uppercase{A}rtificial \uppercase{I}ntelligence \uppercase{R}esearch \uppercase{S}ociety \uppercase{C}onference",
%;   pages = "147--152",
%;   address = "Menlo Park, CA",
%;   publisher = "AAAI Press",
%; }
%;

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6897).
% load foundations/Root.e
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/Root.e'))).
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6897).
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/EC.e'))).
:- call_pel_directive(load('foundations/EC.e')).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6900).
% sort agent
% From E: 
% 
% sort(agent).
sort(agent).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6902).
% fluent Tired(agent)
% From E: 
% 
% fluent(tired(agent)).
mpred_prop(tired(agent),fluent).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6902).
fluents([tired/1]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6904).
% event Move(agent)
% From E: 
% 
% event(move(agent)).
events([move/1]).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6904).
mpred_prop(move(agent),action).
actions([move/1]).

% event Run(agent)
% From E: 
% 
% event(run(agent)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6904).
events([run/1]).
mpred_prop(run(agent),action).
actions([run/1]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6906).
% event Drive(agent)
% From E: 
% 
% event(drive(agent)).
events([drive/1]).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6906).
mpred_prop(drive(agent),action).
actions([drive/1]).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6908).
% [agent,time]
% Happens(Move(agent),time) ->
% Happens(Run(agent),time) | Happens(Drive(agent),time).
% From E: 
% 
% '->'(
%    happens(
%       move(Agent), 
%       Time), 
%    ';'(
%       happens(
%          run(Agent), 
%          Time), 
%       happens(
%          drive(Agent), 
%          Time))).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6908).
 if((happens(run(Agent), Time);happens(drive(Agent), Time)),
      happens(move(Agent), Time)).

% xor Run, Drive
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6911).
% From E: 
% 
% xor([run,drive]).
xor([run,drive]).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6914).
% [agent,time]
 % Initiates(Run(agent),Tired(agent),time).
% From E: 
% 
% initiates_at(
%    run(Agent), 
%    tired(Agent), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6914).
initiates(run(Agent),tired(Agent)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6916).
% agent James
% From E: 
% 
% t(agent,james).
isa(james,agent).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6918).
% !HoldsAt(Tired(James),0).
% From E: 
% 
% holds(
%    not(tired(james)), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6918).
initially(not(tired(james))).


% Happens(Move(James),0).
% From E: 
% 
% happens(
%    move(james), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6918).
observe(at(move(james),0)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6920).
% HoldsAt(Tired(James),1).
% From E: 
% 
% holds(
%    tired(james), 1).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6920).
at(tired(james),1).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6922).
% range time 0 1
% From E: 
% 
% ':-'(call_pel_directive(range(time,0,1))).
:- call_pel_directive(range(time, 0, 1)).

% range offset 1 1
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6922).
% From E: 
% 
% ':-'(call_pel_directive(range(offset,1,1))).
:- call_pel_directive(range(offset, 1, 1)).
%; End of file.
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%; FILE: examples/Mueller2004b/TV1.e
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; @inproceedings{Mueller:2004b,
%;   author = "Erik T. Mueller",
%;   year = "2004",
%;   title = "A tool for satisfiability-based commonsense reasoning in the event calculus",
%;   editor = "Valerie Barr and Zdravko Markov",
%;   booktitle = "\uppercase{P}roceedings of the \uppercase{S}eventeenth \uppercase{I}nternational \uppercase{F}lorida \uppercase{A}rtificial \uppercase{I}ntelligence \uppercase{R}esearch \uppercase{S}ociety \uppercase{C}onference",
%;   pages = "147--152",
%;   address = "Menlo Park, CA",
%;   publisher = "AAAI Press",
%; }
%;

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6954).
% load foundations/Root.e
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/Root.e'))).
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6954).
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/EC.e'))).
:- call_pel_directive(load('foundations/EC.e')).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6957).
% sort agent
% From E: 
% 
% sort(agent).
sort(agent).

% sort switch
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6957).
% From E: 
% 
% sort(switch).
sort(switch).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6959).
% sort tv
% From E: 
% 
% sort(tv).
sort(tv).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6961).
% function TVOf(switch): tv
% From E: 
% 
% function(
%    tVOf(switch), 
%    tv).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6961).
function(tVOf(switch),tv).

% fluent SwitchOn(switch)
% From E: 
% 
% fluent(switchOn(switch)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6961).
mpred_prop(switchOn(switch),fluent).
fluents([switchOn/1]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6963).
% fluent TVOn(tv)
% From E: 
% 
% fluent(tVOn(tv)).
mpred_prop(tVOn(tv),fluent).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6963).
fluents([tVOn/1]).

% fluent PluggedIn(tv)
% From E: 
% 
% fluent(pluggedIn(tv)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6963).
mpred_prop(pluggedIn(tv),fluent).
fluents([pluggedIn/1]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6965).
% event TurnOn(agent,switch)
% From E: 
% 
% event(turnOn(agent,switch)).
events([turnOn/2]).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6965).
mpred_prop(turnOn(agent,switch),action).
actions([turnOn/2]).

% event TurnOff(agent,switch)
% From E: 
% 
% event(turnOff(agent,switch)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6965).
events([turnOff/2]).
mpred_prop(turnOff(agent,switch),action).
actions([turnOff/2]).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6968).
% [agent,switch,time]
 % Initiates(TurnOn(agent,switch),SwitchOn(switch),time).
% From E: 
% 
% initiates_at(
%    turnOn(Agent,Switch), 
%    switchOn(Switch), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6968).
initiates(turnOn(Agent,Switch),switchOn(Switch)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6970).
% [agent,switch,tv,time]
% TVOf(switch)=tv & HoldsAt(PluggedIn(tv),time) ->
% Initiates(TurnOn(agent,switch),TVOn(tv),time).
% From E: 
% 
% '->'(
%    ','(
%       '='(
%          tVOf(Switch), 
%          Tv), 
%       holds(
%          pluggedIn(Tv), 
%          Time)), 
%    initiates_at(
%       turnOn(Agent,Switch), 
%       tVOn(Tv), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6970).
if(initiates(turnOn(Agent, Switch), at(tVOn(Tv), Time)),  (tVOf(Switch, Tv), at(pluggedIn(Tv), Time))).

% agent James
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6973).
% From E: 
% 
% t(agent,james).
isa(james,agent).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6975).
% switch Switch1
% From E: 
% 
% t(switch,switch1).
isa(switch1,switch).

% tv TV1
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6975).
% From E: 
% 
% t(tv,tv1).
isa(tv1,tv).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6978).
% TVOf(Switch1)=TV1.
% From E: 
% 
% '='(
%    tVOf(switch1), 
%    tv1).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6978).
tVOf(switch1,tv1).


% HoldsAt(PluggedIn(TV1),0).
% From E: 
% 
% holds(
%    pluggedIn(tv1), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6978).
initially(pluggedIn(tv1)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6980).
% !HoldsAt(SwitchOn(Switch1),0).
% From E: 
% 
% holds(
%    not(switchOn(switch1)), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6980).
initially(not(switchOn(switch1))).


% !HoldsAt(TVOn(TV1),0).
% From E: 
% 
% holds(
%    not(tVOn(tv1)), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6980).
initially(not(tVOn(tv1))).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6982).
% Happens(TurnOn(James,Switch1),0).
% From E: 
% 
% happens(
%    turnOn(james,switch1), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6982).
observe(at(turnOn(james,switch1),0)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6984).
% range time 0 1
% From E: 
% 
% ':-'(call_pel_directive(range(time,0,1))).
:- call_pel_directive(range(time, 0, 1)).

% range offset 1 1
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',6984).
% From E: 
% 
% ':-'(call_pel_directive(range(offset,1,1))).
:- call_pel_directive(range(offset, 1, 1)).
%; End of file.
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%; FILE: examples/Mueller2004b/RouletteWheel.e
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; @inproceedings{Mueller:2004b,
%;   author = "Erik T. Mueller",
%;   year = "2004",
%;   title = "A tool for satisfiability-based commonsense reasoning in the event calculus",
%;   editor = "Valerie Barr and Zdravko Markov",
%;   booktitle = "\uppercase{P}roceedings of the \uppercase{S}eventeenth \uppercase{I}nternational \uppercase{F}lorida \uppercase{A}rtificial \uppercase{I}ntelligence \uppercase{R}esearch \uppercase{S}ociety \uppercase{C}onference",
%;   pages = "147--152",
%;   address = "Menlo Park, CA",
%;   publisher = "AAAI Press",
%; }
%;

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7016).
% load foundations/Root.e
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/Root.e'))).
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7016).
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/EC.e'))).
:- call_pel_directive(load('foundations/EC.e')).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7019).
% sort wheel
% From E: 
% 
% sort(wheel).
sort(wheel).

% sort value: integer
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7019).
% From E: 
% 
% subsort(value,integer).
subsort(value,integer).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7022).
% fluent WheelValueDeterminingFluent(wheel,value)
% From E: 
% 
% fluent(wheelValueDeterminingFluent(wheel,value)).
mpred_prop(wheelValueDeterminingFluent(wheel,value),fluent).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7022).
fluents([wheelValueDeterminingFluent/2]).

% fluent WheelValue(wheel,value)
% From E: 
% 
% fluent(wheelValue(wheel,value)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7022).
mpred_prop(wheelValue(wheel,value),fluent).
fluents([wheelValue/2]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7024).
% noninertial WheelValueDeterminingFluent
% From E: 
% 
% ':-'(call_pel_directive(noninertial(wheelValueDeterminingFluent))).
:- call_pel_directive(noninertial(wheelValueDeterminingFluent)).

% event Spin(wheel)
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7024).
% From E: 
% 
% event(spin(wheel)).
mpred_prop(spin(wheel),event).
events([spin/1]).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7027).
% [wheel,value1,value2,time]
% HoldsAt(WheelValue(wheel,value1),time) &
% HoldsAt(WheelValue(wheel,value2),time) ->
% value1=value2.
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          wheelValue(Wheel,Value1), 
%          Time), 
%       holds(
%          wheelValue(Wheel,Value2), 
%          Time)), 
%    Value1=Value2).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7027).
if(equals(Value1, Value2),  (at(wheelValue(Wheel, Value1), Time), at(wheelValue(Wheel, Value2), Time))).


% [wheel,value1,value2,time]
% HoldsAt(WheelValueDeterminingFluent(wheel,value1),time) &
% HoldsAt(WheelValueDeterminingFluent(wheel,value2),time) ->
% value1=value2.
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7033).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          wheelValueDeterminingFluent(Wheel,Value1), 
%          Time), 
%       holds(
%          wheelValueDeterminingFluent(Wheel,Value2), 
%          Time)), 
%    Value1=Value2).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7033).
if(equals(Value1, Value2),  (at(wheelValueDeterminingFluent(Wheel, Value1), Time), at(wheelValueDeterminingFluent(Wheel, Value2), Time))).


% [wheel,value,time]
% HoldsAt(WheelValueDeterminingFluent(wheel,value),time) ->
% Initiates(Spin(wheel),WheelValue(wheel,value),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7038).
% From E: 
% 
% '->'(
%    holds(
%       wheelValueDeterminingFluent(Wheel,Value), 
%       Time), 
%    initiates_at(
%       spin(Wheel), 
%       wheelValue(Wheel,Value), 
%       Time)).
if(initiates(spin(Wheel),
	     at(wheelValue(Wheel,Value),Time)),
   at(wheelValueDeterminingFluent(Wheel,Value),Time)).


% [wheel,value1,value2,time]
% HoldsAt(WheelValue(wheel,value1),time) &
% HoldsAt(WheelValueDeterminingFluent(wheel,value2),time) &
% value1!=value2 ->
% Terminates(Spin(wheel),WheelValue(wheel,value1),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7042).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          wheelValue(Wheel,Value1), 
%          Time), 
%       ','(
%          holds(
%             wheelValueDeterminingFluent(Wheel,Value2), 
%             Time), 
%          Value1\=Value2)), 
%    terminates_at(
%       spin(Wheel), 
%       wheelValue(Wheel,Value1), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7042).
if(terminates(spin(Wheel), at(wheelValue(Wheel, Value1), Time)),  (at(wheelValue(Wheel, Value1), Time), at(wheelValueDeterminingFluent(Wheel, Value2), Time), {dif(Value1, Value2)})).


% [wheel,time]
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7048).
% {value} % HoldsAt(WheelValueDeterminingFluent(wheel,value),time).
% From E: 
% 
% exists(Value, 
%    holds(
%       wheelValueDeterminingFluent(Wheel,Value), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7048).
exists(Value,
 at(wheelValueDeterminingFluent(Wheel,Value),Time)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7050).
% wheel Wheel
% From E: 
% 
% t(wheel,wheel).
isa(wheel,wheel).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7052).
% HoldsAt(WheelValue(Wheel,7),0).
% From E: 
% 
% holds(
%    wheelValue(wheel,7), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7052).
initially(wheelValue(wheel,7)).


% Happens(Spin(Wheel),0).
% From E: 
% 
% happens(
%    spin(wheel), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7052).
observe(at(spin(wheel),0)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7054).
% HoldsAt(WheelValueDeterminingFluent(Wheel,7),1).
% From E: 
% 
% holds(
%    wheelValueDeterminingFluent(wheel,7), 1).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7054).
at(wheelValueDeterminingFluent(wheel,7),1).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7056).
% completion Happens
% From E: 
% 
% ':-'(call_pel_directive(completion(happens))).
:- call_pel_directive(completion(happens)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7058).
% range value 7 10
% From E: 
% 
% ':-'(call_pel_directive(range(value,7,10))).
:- call_pel_directive(range(value, 7, 10)).

% range time 0 1
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7058).
% From E: 
% 
% ':-'(call_pel_directive(range(time,0,1))).
:- call_pel_directive(range(time, 0, 1)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7060).
% range offset 1 1
% From E: 
% 
% ':-'(call_pel_directive(range(offset,1,1))).
:- call_pel_directive(range(offset, 1, 1)).
%; End of file.
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%; FILE: examples/Mueller2004b/PickUp.e
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; @inproceedings{Mueller:2004b,
%;   author = "Erik T. Mueller",
%;   year = "2004",
%;   title = "A tool for satisfiability-based commonsense reasoning in the event calculus",
%;   editor = "Valerie Barr and Zdravko Markov",
%;   booktitle = "\uppercase{P}roceedings of the \uppercase{S}eventeenth \uppercase{I}nternational \uppercase{F}lorida \uppercase{A}rtificial \uppercase{I}ntelligence \uppercase{R}esearch \uppercase{S}ociety \uppercase{C}onference",
%;   pages = "147--152",
%;   address = "Menlo Park, CA",
%;   publisher = "AAAI Press",
%; }
%;

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7091).
% load foundations/Root.e
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/Root.e'))).
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7091).
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/EC.e'))).
:- call_pel_directive(load('foundations/EC.e')).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7094).
% sort object
% From E: 
% 
% sort(object).
sort(object).

% sort agent: object
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7094).
% From E: 
% 
% subsort(agent,object).
subsort(agent,object).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7096).
% sort physobj: object
% From E: 
% 
% subsort(physobj,object).
subsort(physobj,object).

% sort location
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7096).
% From E: 
% 
% sort(location).
sort(location).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7099).
% fluent At(object,location)
% From E: 
% 
% fluent(at_loc(object,location)).
mpred_prop(at_loc(object,location),fluent).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7099).
fluents([at_loc/2]).

% fluent Holding(agent,physobj)
% From E: 
% 
% fluent(holding(agent,physobj)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7099).
mpred_prop(holding(agent,physobj),fluent).
fluents([holding/2]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7101).
% event PickUp(agent,physobj)
% From E: 
% 
% event(pickUp(agent,physobj)).
events([pickUp/2]).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7101).
mpred_prop(pickUp(agent,physobj),action).
actions([pickUp/2]).

% event SetDown(agent,physobj)
% From E: 
% 
% event(setDown(agent,physobj)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7101).
events([setDown/2]).
mpred_prop(setDown(agent,physobj),action).
actions([setDown/2]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7103).
% event Move(agent,location,location)
% From E: 
% 
% event(move(agent,location,location)).
events([move/3]).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7103).
mpred_prop(move(agent,location,location),action).
actions([move/3]).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7105).
%; state constraints
% [agent,location,physobj,time]
% HoldsAt(At(agent,location),time) &
% HoldsAt(Holding(agent,physobj),time) ->
% HoldsAt(At(physobj,location),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7107).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          at_loc(Agent,Location), 
%          Time), 
%       holds(
%          holding(Agent,Physobj), 
%          Time)), 
%    holds(
%       at_loc(Physobj,Location), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7107).
if(at(at_loc(Physobj, Location), Time),  (at(at_loc(Agent, Location), Time), at(holding(Agent, Physobj), Time))).


% [object,location1,location2,time]
% HoldsAt(At(object,location1),time) &
% HoldsAt(At(object,location2),time) ->
% location1=location2.
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7113).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          at_loc(Object,Location1), 
%          Time), 
%       holds(
%          at_loc(Object,Location2), 
%          Time)), 
%    Location1=Location2).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7113).
if(equals(Location1, Location2),  (at(at_loc(Object, Location1), Time), at(at_loc(Object, Location2), Time))).


%; effect axioms
% [agent,location1,location2,time]
% Initiates(Move(agent,location1,location2),At(agent,location2),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7119).
% From E: 
% 
% initiates_at(
%    move(Agent,Location1,Location2), 
%    at_loc(Agent,Location2), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7119).
initiates(move(Agent,Location1,Location2),
	  at_loc(Agent,Location2)).


% [agent,location1,location2,time]
% Terminates(Move(agent,location1,location2),At(agent,location1),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7123).
% From E: 
% 
% terminates_at(
%    move(Agent,Location1,Location2), 
%    at_loc(Agent,Location1), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7123).
terminates(move(Agent,Location1,Location2),
	   at_loc(Agent,Location1)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7125).
% [agent,physobj,time]
% Initiates(PickUp(agent,physobj),Holding(agent,physobj),time).
% From E: 
% 
% initiates_at(
%    pickUp(Agent,Physobj), 
%    holding(Agent,Physobj), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7125).
initiates(pickUp(Agent,Physobj),
	  holding(Agent,Physobj)).


% [agent,physobj,time]
% Terminates(SetDown(agent,physobj),Holding(agent,physobj),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7129).
% From E: 
% 
% terminates_at(
%    setDown(Agent,Physobj), 
%    holding(Agent,Physobj), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7129).
terminates(setDown(Agent,Physobj),
	   holding(Agent,Physobj)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7131).
%; preconditions
% [agent,location1,location2,time]
% Happens(Move(agent,location1,location2),time) ->
% HoldsAt(At(agent,location1),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7133).
% From E: 
% 
% '->'(
%    happens(
%       move(Agent,Location1,Location2), 
%       Time), 
%    holds(
%       at_loc(Agent,Location1), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7133).
if(at(at_loc(Agent,Location1),Time),
   happens(move(Agent,Location1,Location2),
	   Time)).


% [agent,physobj,time]
% Happens(PickUp(agent,physobj),time) ->
% {location}%  HoldsAt(At(agent,location),time) &
%            HoldsAt(At(physobj,location),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7138).
% From E: 
% 
% exists(Location, 
%    '->'(
%       happens(
%          pickUp(Agent,Physobj), 
%          Time), 
%       ','(
%          holds(
%             at_loc(Agent,Location), 
%             Time), 
%          holds(
%             at_loc(Physobj,Location), 
%             Time)))).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7138).
exists(Location, if((at(at_loc(Agent, Location), Time), at(at_loc(Physobj, Location), Time)), happens(pickUp(Agent, Physobj), Time))).


%; releases
% [agent,physobj,location,time]
% Releases(PickUp(agent,physobj),At(physobj,location),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7144).
% From E: 
% 
% releases_at(
%    pickUp(Agent,Physobj), 
%    at_loc(Physobj,Location), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7144).
releases(pickUp(Agent,Physobj),
	 at_loc(Physobj,Location)).


% [agent,physobj,location,time]
% HoldsAt(At(agent,location),time) ->
% Initiates(SetDown(agent,physobj),At(physobj,location),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7148).
% From E: 
% 
% '->'(
%    holds(
%       at_loc(Agent,Location), 
%       Time), 
%    initiates_at(
%       setDown(Agent,Physobj), 
%       at_loc(Physobj,Location), 
%       Time)).
if(initiates(setDown(Agent,Physobj),
	     at(at_loc(Physobj,Location),Time)),
   at(at_loc(Agent,Location),Time)).


%;[agent,physobj,location1,location2,time]
%;HoldsAt(At(agent,location1),time) &
%;location1 != location2 ->
%;Terminates(SetDown(agent,physobj),At(physobj,location2),time).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7156).
% agent James
% From E: 
% 
% t(agent,james).
isa(james,agent).

% physobj Coin
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7156).
% From E: 
% 
% t(physobj,coin).
isa(coin,physobj).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7158).
% location L1, L2, L3, L4
% From E: 
% 
% t(location,l1).
isa(l1,location).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7158).
% From E: 
% 
% t(location,l2).
isa(l2,location).
% From E: 
% 
% t(location,l3).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7158).
isa(l3,location).
% From E: 
% 
% t(location,l4).
isa(l4,location).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7160).
% !HoldsAt(Holding(James,Coin),0).
% From E: 
% 
% holds(
%    not(holding(james,coin)), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7160).
initially(not(holding(james,coin))).


% HoldsAt(At(Coin,L4),0).
% From E: 
% 
% holds(
%    at_loc(coin,l4), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7160).
initially(at_loc(coin,l4)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7162).
% HoldsAt(At(James,L1),0).
% From E: 
% 
% holds(
%    at_loc(james,l1), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7162).
initially(at_loc(james,l1)).


% Happens(Move(James,L1,L2),0).
% From E: 
% 
% happens(
%    move(james,l1,l2), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7162).
observe(at(move(james,l1,l2),0)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7164).
% Happens(Move(James,L2,L3),1).
% From E: 
% 
% happens(
%    move(james,l2,l3), 1).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7164).
observe(at(move(james,l2,l3),1)).


% Happens(Move(James,L3,L4),2).
% From E: 
% 
% happens(
%    move(james,l3,l4), 2).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7164).
observe(at(move(james,l3,l4),2)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7166).
% Happens(PickUp(James,Coin),3).
% From E: 
% 
% happens(
%    pickUp(james,coin), 3).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7166).
observe(at(pickUp(james,coin),3)).


% Happens(Move(James,L4,L3),4).
% From E: 
% 
% happens(
%    move(james,l4,l3), 4).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7166).
observe(at(move(james,l4,l3),4)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7168).
% Happens(Move(James,L3,L2),5).
% From E: 
% 
% happens(
%    move(james,l3,l2), 5).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7168).
observe(at(move(james,l3,l2),5)).


% Happens(SetDown(James,Coin),6).
% From E: 
% 
% happens(
%    setDown(james,coin), 6).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7168).
observe(at(setDown(james,coin),6)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7170).
% Happens(Move(James,L2,L3),7).
% From E: 
% 
% happens(
%    move(james,l2,l3), 7).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7170).
observe(at(move(james,l2,l3),7)).


% Happens(Move(James,L3,L4),8).
% From E: 
% 
% happens(
%    move(james,l3,l4), 8).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7170).
observe(at(move(james,l3,l4),8)).

% completion Happens
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7172).
% From E: 
% 
% ':-'(call_pel_directive(completion(happens))).
:- call_pel_directive(completion(happens)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7175).
% range time 0 9
% From E: 
% 
% ':-'(call_pel_directive(range(time,0,9))).
:- call_pel_directive(range(time, 0, 9)).

% range offset 1 1
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7175).
% From E: 
% 
% ':-'(call_pel_directive(range(offset,1,1))).
:- call_pel_directive(range(offset, 1, 1)).
%; End of file.
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%; FILE: examples/FrankEtAl2003/Story1.e
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; @article{FrankEtAl:2003,
%;   author = "Stefan L. Frank and Mathieu Koppen and Leo G. M. Noordman and Wietske Vonk",
%;   year = "2003",
%;   title = "Modeling knowledge-based inferences in story comprehension",
%;   journal = "Cognitive Science",
%;   volume = "27",
%;   pages = "875--910",
%; }
%;

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7205).
% option modeldiff on
% From E: 
% 
% ':-'(call_pel_directive(option(modeldiff,on))).
:- call_pel_directive(option(modeldiff, on)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7207).
% load foundations/Root.e
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/Root.e'))).
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7207).
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/EC.e'))).
:- call_pel_directive(load('foundations/EC.e')).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7210).
% sort agent
% From E: 
% 
% sort(agent).
sort(agent).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7212).
% load examples/FrankEtAl2003/FrankEtAl.e
% From E: 
% 
% ':-'(call_pel_directive(load('examples/FrankEtAl2003/FrankEtAl.e'))).
:- call_pel_directive(load('examples/FrankEtAl2003/FrankEtAl.e')).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7214).
% agent Bob, Jilly
% From E: 
% 
% t(agent,bob).
isa(bob,agent).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7214).
% From E: 
% 
% t(agent,jilly).
isa(jilly,agent).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7216).
% !HoldsAt(Raining(),0).
% From E: 
% 
% holds(
%    not(raining()), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7216).
initially(not(raining())).


% !HoldsAt(SunShining(),0).
% From E: 
% 
% holds(
%    not(sunShining()), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7216).
initially(not(sunShining())).


% (HoldsAt(PlaySoccer(Bob),1) & HoldsAt(PlaySoccer(Jilly),1)) |
% (HoldsAt(PlayHideAndSeek(Bob),1) & HoldsAt(PlayHideAndSeek(Jilly),1)) |
% (HoldsAt(PlayComputerGame(Bob),1) & HoldsAt(PlayComputerGame(Jilly),1)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7218).
% From E: 
% 
% ';'(
%    ','(
%       holds(
%          playSoccer(bob), 1), 
%       holds(
%          playSoccer(jilly), 1)), 
%    ';'(
%       ','(
%          holds(
%             playHideAndSeek(bob), 1), 
%          holds(
%             playHideAndSeek(jilly), 1)), 
%       ','(
%          holds(
%             playComputerGame(bob), 1), 
%          holds(
%             playComputerGame(jilly), 1)))).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7218).
if((at(not(playSoccer(bob)), 1);at(not(playSoccer(jilly)), 1)),  (at(playHideAndSeek(bob), 1), at(playHideAndSeek(jilly), 1);at(playComputerGame(bob), 1), at(playComputerGame(jilly), 1))).


% HoldsAt(Win(Bob),1) | HoldsAt(Win(Jilly),1).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7222).
% From E: 
% 
% ';'(
%    holds(
%       win(bob), 1), 
%    holds(
%       win(jilly), 1)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7222).
if(at(not(win(bob)),1),at(win(jilly),1)).

% range time 0 1
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7224).
% From E: 
% 
% ':-'(call_pel_directive(range(time,0,1))).
:- call_pel_directive(range(time, 0, 1)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7226).
% range offset 0 0
% From E: 
% 
% ':-'(call_pel_directive(range(offset,0,0))).
:- call_pel_directive(range(offset, 0, 0)).
%; End of file.
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%; FILE: examples/FrankEtAl2003/FrankEtAl.e
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; @article{FrankEtAl:2003,
%;   author = "Stefan L. Frank and Mathieu Koppen and Leo G. M. Noordman and Wietske Vonk",
%;   year = "2003",
%;   title = "Modeling knowledge-based inferences in story comprehension",
%;   journal = "Cognitive Science",
%;   volume = "27",
%;   pages = "875--910",
%; }
%;

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7255).
% fluent SunShining()
% From E: 
% 
% fluent(sunShining()).
mpred_prop(sunShining(),fluent).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7255).
fluents([sunShining/0]).

% fluent Raining()
% From E: 
% 
% fluent(raining()).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7255).
mpred_prop(raining(),fluent).
fluents([raining/0]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7257).
% fluent Outside(agent)
% From E: 
% 
% fluent(outside(agent)).
mpred_prop(outside(agent),fluent).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7257).
fluents([outside/1]).

% fluent PlaySoccer(agent)
% From E: 
% 
% fluent(playSoccer(agent)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7257).
mpred_prop(playSoccer(agent),fluent).
fluents([playSoccer/1]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7259).
% fluent PlayHideAndSeek(agent)
% From E: 
% 
% fluent(playHideAndSeek(agent)).
mpred_prop(playHideAndSeek(agent),fluent).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7259).
fluents([playHideAndSeek/1]).

% fluent PlayComputerGame(agent)
% From E: 
% 
% fluent(playComputerGame(agent)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7259).
mpred_prop(playComputerGame(agent),fluent).
fluents([playComputerGame/1]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7261).
% fluent PlayWithDog(agent)
% From E: 
% 
% fluent(playWithDog(agent)).
mpred_prop(playWithDog(agent),fluent).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7261).
fluents([playWithDog/1]).

% fluent Win(agent)
% From E: 
% 
% fluent(win(agent)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7261).
mpred_prop(win(agent),fluent).
fluents([win/1]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7264).
% noninertial Outside, PlaySoccer, PlayHideAndSeek, PlayComputerGame
% From E: 
% 
% ':-'(call_pel_directive(noninertial(outside))).
:- call_pel_directive(noninertial(outside)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7264).
% From E: 
% 
% ':-'(call_pel_directive(noninertial(playSoccer))).
:- call_pel_directive(noninertial(playSoccer)).
% From E: 
% 
% ':-'(call_pel_directive(noninertial(playHideAndSeek))).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7264).
:- call_pel_directive(noninertial(playHideAndSeek)).
% From E: 
% 
% ':-'(call_pel_directive(noninertial(playComputerGame))).
:- call_pel_directive(noninertial(playComputerGame)).

% noninertial PlayWithDog, Win
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7264).
% From E: 
% 
% ':-'(call_pel_directive(noninertial(playWithDog))).
:- call_pel_directive(noninertial(playWithDog)).
% From E: 
% 
% ':-'(call_pel_directive(noninertial(win))).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7264).
:- call_pel_directive(noninertial(win)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7267).
% xor PlaySoccer, PlayHideAndSeek, PlayComputerGame, PlayWithDog
% From E: 
% 
% xor([playSoccer,playHideAndSeek,playComputerGame,playWithDog]).
xor([playSoccer,playHideAndSeek,playComputerGame,playWithDog]).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7269).
% [agent,time]
% HoldsAt(PlaySoccer(agent),time) ->
% HoldsAt(Outside(agent),time).
% From E: 
% 
% '->'(
%    holds(
%       playSoccer(Agent), 
%       Time), 
%    holds(
%       outside(Agent), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7269).
if(at(outside(Agent),Time),
   at(playSoccer(Agent),Time)).


% [agent,time]
% HoldsAt(PlaySoccer(agent),time) ->
% ({agent1} agent1!=agent & HoldsAt(PlaySoccer(agent1),time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7274).
% From E: 
% 
% '->'(
%    holds(
%       playSoccer(Agent), 
%       Time), 
%    thereExists(Agent1, 
%       ','(
%          Agent1\=Agent, 
%          holds(
%             playSoccer(Agent1), 
%             Time)))).
if(thereExists(Agent1,  ({dif(Agent1, Agent)}, at(playSoccer(Agent1), Time))), at(playSoccer(Agent), Time)).


% [agent,time]
% HoldsAt(PlayHideAndSeek(agent),time) ->
% ({agent1} agent1!=agent & HoldsAt(PlayHideAndSeek(agent1),time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7278).
% From E: 
% 
% '->'(
%    holds(
%       playHideAndSeek(Agent), 
%       Time), 
%    thereExists(Agent1, 
%       ','(
%          Agent1\=Agent, 
%          holds(
%             playHideAndSeek(Agent1), 
%             Time)))).
if(thereExists(Agent1,  ({dif(Agent1, Agent)}, at(playHideAndSeek(Agent1), Time))), at(playHideAndSeek(Agent), Time)).


% [agent,time]
% HoldsAt(PlayComputerGame(agent),time) ->
% !HoldsAt(Outside(agent),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7282).
% From E: 
% 
% '->'(
%    holds(
%       playComputerGame(Agent), 
%       Time), 
%    holds(
%       not(outside(Agent)), 
%       Time)).
if(at(not(outside(Agent)),Time),
   at(playComputerGame(Agent),Time)).


% [agent,time]
% HoldsAt(Win(agent),time) ->
% (HoldsAt(PlaySoccer(agent),time) |
%  HoldsAt(PlayHideAndSeek(agent),time) |
%  (HoldsAt(PlayComputerGame(agent),time) &
%   ({agent1} agent1!=agent & HoldsAt(PlayComputerGame(agent1),time)))).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7286).
% From E: 
% 
% '->'(
%    holds(
%       win(Agent), 
%       Time), 
%    ';'(
%       holds(
%          playSoccer(Agent), 
%          Time), 
%       ';'(
%          holds(
%             playHideAndSeek(Agent), 
%             Time), 
%          ','(
%             holds(
%                playComputerGame(Agent), 
%                Time), 
%             thereExists(Agent1, 
%                ','(
%                   Agent1\=Agent, 
%                   holds(
%                      playComputerGame(Agent1), 
%                      Time))))))).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7286).
if((at(playSoccer(Agent), Time);at(playHideAndSeek(Agent), Time);at(playComputerGame(Agent), Time), thereExists(Agent1,  ({dif(Agent1, Agent)}, at(playComputerGame(Agent1), Time)))), at(win(Agent), Time)).


% [agent,time]
% HoldsAt(PlaySoccer(agent),time) &
% HoldsAt(Win(agent),time) ->
% !HoldsAt(PlaySoccer(agent),time+1).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7293).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          playSoccer(Agent), 
%          Time), 
%       holds(
%          win(Agent), 
%          Time)), 
%    holds(
%       not(playSoccer(Agent)), 
%       Time+1)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7293).
if(at(not(playSoccer(Agent)), Time+1),  (at(playSoccer(Agent), Time), at(win(Agent), Time))).


% [agent,time]
% HoldsAt(PlayHideAndSeek(agent),time) &
% HoldsAt(Win(agent),time) ->
% !HoldsAt(PlayHideAndSeek(agent),time+1).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7298).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          playHideAndSeek(Agent), 
%          Time), 
%       holds(
%          win(Agent), 
%          Time)), 
%    holds(
%       not(playHideAndSeek(Agent)), 
%       Time+1)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7298).
if(at(not(playHideAndSeek(Agent)), Time+1),  (at(playHideAndSeek(Agent), Time), at(win(Agent), Time))).


% [agent,time]
% HoldsAt(PlayComputerGame(agent),time) &
% HoldsAt(Win(agent),time) ->
% !HoldsAt(PlayComputerGame(agent),time+1).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7303).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          playComputerGame(Agent), 
%          Time), 
%       holds(
%          win(Agent), 
%          Time)), 
%    holds(
%       not(playComputerGame(Agent)), 
%       Time+1)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7303).
if(at(not(playComputerGame(Agent)), Time+1),  (at(playComputerGame(Agent), Time), at(win(Agent), Time))).


% [agent,time]
% HoldsAt(Win(agent),time) ->
% HoldsAt(PlaySoccer(agent),time-1) |
% HoldsAt(PlayHideAndSeek(agent),time-1) |
% HoldsAt(PlayComputerGame(agent),time-1).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7308).
% From E: 
% 
% '->'(
%    holds(
%       win(Agent), 
%       Time), 
%    ';'(
%       holds(
%          playSoccer(Agent), 
%          Time-1), 
%       ';'(
%          holds(
%             playHideAndSeek(Agent), 
%             Time-1), 
%          holds(
%             playComputerGame(Agent), 
%             Time-1)))).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7308).
 if((at(playSoccer(Agent), Time-1);at(playHideAndSeek(Agent), Time-1);at(playComputerGame(Agent), Time-1)),
      at(win(Agent), Time)).


% [agent,time]
% HoldsAt(PlaySoccer(agent),time) ->
% !HoldsAt(Raining(),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7314).
% From E: 
% 
% '->'(
%    holds(
%       playSoccer(Agent), 
%       Time), 
%    holds(
%       not(raining()), 
%       Time)).
if(at(not(raining()),Time),
   at(playSoccer(Agent),Time)).


% [agent,time]
% HoldsAt(Win(agent),time) ->
% !({agent1} agent1!=agent & HoldsAt(Win(agent1),time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7318).
% From E: 
% 
% '->'(
%    holds(
%       win(Agent), 
%       Time), 
%    not(thereExists(Agent1, 
%           ','(
%              Agent1\=Agent, 
%              holds(
%                 win(Agent1), 
%                 Time))))).
if(not(thereExists(Agent1,  ({dif(Agent1, Agent)}, at(win(Agent1), Time)))), at(win(Agent), Time)).


% [agent1,agent2,time]
% HoldsAt(PlayHideAndSeek(agent1),time) &
% HoldsAt(PlayHideAndSeek(agent2),time) ->
% ((HoldsAt(Outside(agent1),time) & HoldsAt(Outside(agent2),time)) |
%  (!HoldsAt(Outside(agent1),time) & !HoldsAt(Outside(agent2),time))).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7322).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          playHideAndSeek(Agent1), 
%          Time), 
%       holds(
%          playHideAndSeek(Agent2), 
%          Time)), 
%    ';'(
%       ','(
%          holds(
%             outside(Agent1), 
%             Time), 
%          holds(
%             outside(Agent2), 
%             Time)), 
%       ','(
%          holds(
%             not(outside(Agent1)), 
%             Time), 
%          holds(
%             not(outside(Agent2)), 
%             Time)))).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7322).
if((at(outside(Agent1), Time), at(outside(Agent2), Time);at(not(outside(Agent1)), Time), at(not(outside(Agent2)), Time)),  (at(playHideAndSeek(Agent1), Time), at(playHideAndSeek(Agent2), Time))).


%; End of file.
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%; FILE: examples/GiunchigliaEtAl2004/MonkeyPrediction.e
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; @article{Giunchiglia:2004,
%;   author = "Enrico Giunchiglia and Joohyung Lee and Vladimir Lifschitz and Norman C. McCain and Hudson Turner",
%;   year = "2004",
%;   title = "Nonmonotonic causal theories",
%;   journal = "Artificial Intelligence",
%;   volume = "153",
%;   pages = "49--104",
%; }
%;
%; deduction

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7356).
% load foundations/Root.e
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/Root.e'))).
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7356).
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/EC.e'))).
:- call_pel_directive(load('foundations/EC.e')).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7358).
% load examples/GiunchigliaEtAl2004/MonkeyBananas.e
% From E: 
% 
% ':-'(call_pel_directive(load('examples/GiunchigliaEtAl2004/MonkeyBananas.e'))).
:- call_pel_directive(load('examples/GiunchigliaEtAl2004/MonkeyBananas.e')).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7360).
% HoldsAt(At(Monkey,L1),0).
% From E: 
% 
% holds(
%    at_loc(monkey,l1), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7360).
initially(at_loc(monkey,l1)).


% HoldsAt(At(Bananas,L2),0).
% From E: 
% 
% holds(
%    at_loc(bananas,l2), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7360).
initially(at_loc(bananas,l2)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7362).
% HoldsAt(At(Box,L3),0).
% From E: 
% 
% holds(
%    at_loc(box,l3), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7362).
initially(at_loc(box,l3)).


% Happens(Walk(L3),0).
% From E: 
% 
% happens(
%    walk(l3), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7362).
observe(at(walk(l3),0)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7364).
% Happens(PushBox(L2),1).
% From E: 
% 
% happens(
%    pushBox(l2), 1).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7364).
observe(at(pushBox(l2),1)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7366).
% completion Happens
% From E: 
% 
% ':-'(call_pel_directive(completion(happens))).
:- call_pel_directive(completion(happens)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7368).
% range time 0 2
% From E: 
% 
% ':-'(call_pel_directive(range(time,0,2))).
:- call_pel_directive(range(time, 0, 2)).

% range offset 0 0
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7368).
% From E: 
% 
% ':-'(call_pel_directive(range(offset,0,0))).
:- call_pel_directive(range(offset, 0, 0)).
%; End of file.
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%; FILE: examples/GiunchigliaEtAl2004/MonkeyPlanning.e
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; @article{Giunchiglia:2004,
%;   author = "Enrico Giunchiglia and Joohyung Lee and Vladimir Lifschitz and Norman C. McCain and Hudson Turner",
%;   year = "2004",
%;   title = "Nonmonotonic causal theories",
%;   journal = "Artificial Intelligence",
%;   volume = "153",
%;   pages = "49--104",
%; }
%;
%; planning

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7400).
% load foundations/Root.e
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/Root.e'))).
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7400).
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/EC.e'))).
:- call_pel_directive(load('foundations/EC.e')).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7402).
% load examples/GiunchigliaEtAl2004/MonkeyBananas.e
% From E: 
% 
% ':-'(call_pel_directive(load('examples/GiunchigliaEtAl2004/MonkeyBananas.e'))).
:- call_pel_directive(load('examples/GiunchigliaEtAl2004/MonkeyBananas.e')).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7404).
% HoldsAt(At(Monkey,L1),0).
% From E: 
% 
% holds(
%    at_loc(monkey,l1), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7404).
initially(at_loc(monkey,l1)).


% HoldsAt(At(Bananas,L2),0).
% From E: 
% 
% holds(
%    at_loc(bananas,l2), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7404).
initially(at_loc(bananas,l2)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7406).
% HoldsAt(At(Box,L3),0).
% From E: 
% 
% holds(
%    at_loc(box,l3), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7406).
initially(at_loc(box,l3)).


% HoldsAt(HasBananas(),4).
% From E: 
% 
% holds(hasBananas(),4).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7406).
at(hasBananas(),4).


%; PLAN Happens(Walk(L3),0).
%; PLAN Happens(PushBox(L2),1).
%; PLAN Happens(ClimbOn(),2).
%; PLAN Happens(GraspBananas(),3).
%; one event at a time
% [event1,event2,time]
 % Happens(event1,time) & Happens(event2,time) ->
% event1=event2.
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7414).
% From E: 
% 
% '->'(
%    ','(
%       happens(Event1,Time), 
%       happens(Event2,Time)), 
%    Event1=Event2).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7414).
if(equals(Event1, Event2),  (happens(Event1, Time), happens(Event2, Time))).

% range time 0 4
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7417).
% From E: 
% 
% ':-'(call_pel_directive(range(time,0,4))).
:- call_pel_directive(range(time, 0, 4)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7419).
% range offset 0 0
% From E: 
% 
% ':-'(call_pel_directive(range(offset,0,0))).
:- call_pel_directive(range(offset, 0, 0)).
%; End of file.
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%; FILE: examples/GiunchigliaEtAl2004/MonkeyPostdiction.e
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; @article{Giunchiglia:2004,
%;   author = "Enrico Giunchiglia and Joohyung Lee and Vladimir Lifschitz and Norman C. McCain and Hudson Turner",
%;   year = "2004",
%;   title = "Nonmonotonic causal theories",
%;   journal = "Artificial Intelligence",
%;   volume = "153",
%;   pages = "49--104",
%; }
%;
%; postdiction

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7450).
% load foundations/Root.e
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/Root.e'))).
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7450).
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/EC.e'))).
:- call_pel_directive(load('foundations/EC.e')).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7452).
% load examples/GiunchigliaEtAl2004/MonkeyBananas.e
% From E: 
% 
% ':-'(call_pel_directive(load('examples/GiunchigliaEtAl2004/MonkeyBananas.e'))).
:- call_pel_directive(load('examples/GiunchigliaEtAl2004/MonkeyBananas.e')).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7454).
% HoldsAt(At(Monkey,L1),0).
% From E: 
% 
% holds(
%    at_loc(monkey,l1), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7454).
initially(at_loc(monkey,l1)).


% HoldsAt(At(Bananas,L2),0).
% From E: 
% 
% holds(
%    at_loc(bananas,l2), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7454).
initially(at_loc(bananas,l2)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7456).
% Happens(Walk(L3),0).
% From E: 
% 
% happens(
%    walk(l3), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7456).
observe(at(walk(l3),0)).


% Happens(PushBox(L2),1).
% From E: 
% 
% happens(
%    pushBox(l2), 1).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7456).
observe(at(pushBox(l2),1)).

% completion Happens
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7458).
% From E: 
% 
% ':-'(call_pel_directive(completion(happens))).
:- call_pel_directive(completion(happens)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7461).
% range time 0 2
% From E: 
% 
% ':-'(call_pel_directive(range(time,0,2))).
:- call_pel_directive(range(time, 0, 2)).

% range offset 0 0
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7461).
% From E: 
% 
% ':-'(call_pel_directive(range(offset,0,0))).
:- call_pel_directive(range(offset, 0, 0)).
%; End of file.
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%; FILE: examples/GiunchigliaEtAl2004/MonkeyBananas.e
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; @article{Giunchiglia:2004,
%;   author = "Enrico Giunchiglia and Joohyung Lee and Vladimir Lifschitz and Norman C. McCain and Hudson Turner",
%;   year = "2004",
%;   title = "Nonmonotonic causal theories",
%;   journal = "Artificial Intelligence",
%;   volume = "153",
%;   pages = "49--104",
%; }
%;

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7491).
% sort object
% From E: 
% 
% sort(object).
sort(object).

% sort location
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7491).
% From E: 
% 
% sort(location).
sort(location).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7494).
% object Monkey, Bananas, Box
% From E: 
% 
% t(object,monkey).
isa(monkey,object).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7494).
% From E: 
% 
% t(object,bananas).
isa(bananas,object).
% From E: 
% 
% t(object,box).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7494).
isa(box,object).

% location L1, L2, L3
% From E: 
% 
% t(location,l1).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7494).
isa(l1,location).
% From E: 
% 
% t(location,l2).
isa(l2,location).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7494).
% From E: 
% 
% t(location,l3).
isa(l3,location).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7497).
% fluent At(object,location)
% From E: 
% 
% fluent(at_loc(object,location)).
mpred_prop(at_loc(object,location),fluent).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7497).
fluents([at_loc/2]).

% fluent OnBox()
% From E: 
% 
% fluent(onBox()).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7497).
mpred_prop(onBox(),fluent).
fluents([onBox/0]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7499).
% fluent HasBananas()
% From E: 
% 
% fluent(hasBananas()).
mpred_prop(hasBananas(),fluent).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7499).
fluents([hasBananas/0]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7501).
% event Walk(location)
% From E: 
% 
% event(walk(location)).
mpred_prop(walk(location),event).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7501).
events([walk/1]).

% event PushBox(location)
% From E: 
% 
% event(pushBox(location)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7501).
mpred_prop(pushBox(location),event).
events([pushBox/1]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7503).
% event ClimbOn()
% From E: 
% 
% event(climbOn()).
mpred_prop(climbOn(),event).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7503).
events([climbOn/0]).

% event ClimbOff()
% From E: 
% 
% event(climbOff()).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7503).
mpred_prop(climbOff(),event).
events([climbOff/0]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7505).
% event GraspBananas()
% From E: 
% 
% event(graspBananas()).
mpred_prop(graspBananas(),event).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7505).
events([graspBananas/0]).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7507).
% [object,location1,location2,time]
% HoldsAt(At(object,location1),time) &
% HoldsAt(At(object,location2),time) ->
% location1=location2.
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          at_loc(Object,Location1), 
%          Time), 
%       holds(
%          at_loc(Object,Location2), 
%          Time)), 
%    Location1=Location2).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7507).
if(equals(Location1, Location2),  (at(at_loc(Object, Location1), Time), at(at_loc(Object, Location2), Time))).


% [object,location,time]
% object=% Monkey ->
% Initiates(Walk(location),At(object,location),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7513).
% From E: 
% 
% '->'(
%    Object=monkey, 
%    initiates_at(
%       walk(Location), 
%       at_loc(Object,Location), 
%       Time)).
if(initiates(walk(Location),
	     at(at_loc(Object,Location),Time)),
   equals(Object,monkey)).


% [object,location1,location2,time]
% object=% Monkey &
% HoldsAt(At(object,location1),time) ->
% Terminates(Walk(location2),At(object,location1),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7517).
% From E: 
% 
% '->'(
%    ','(
%       Object=monkey, 
%       holds(
%          at_loc(Object,Location1), 
%          Time)), 
%    terminates_at(
%       walk(Location2), 
%       at_loc(Object,Location1), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7517).
if(terminates(walk(Location2), at(at_loc(Object, Location1), Time)),  (equals(Object, monkey), at(at_loc(Object, Location1), Time))).


% [location,time]
% Happens(Walk(location),time) ->
% !HoldsAt(At(Monkey,location),time) &
% !HoldsAt(OnBox(),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7522).
% From E: 
% 
% '->'(
%    happens(
%       walk(Location), 
%       Time), 
%    ','(
%       holds(
%          not(at_loc(monkey,Location)), 
%          Time), 
%       holds(
%          not(onBox()), 
%          Time))).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7522).
if((at(not(at_loc(monkey, Location)), Time), at(not(onBox()), Time)), happens(walk(Location), Time)).


% [location,time]
% HoldsAt(HasBananas(),time) &
% HoldsAt(At(Monkey,location),time) ->
% HoldsAt(At(Bananas,location),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7527).
% From E: 
% 
% '->'(
%    ','(
%       holds(hasBananas(),Time), 
%       holds(
%          at_loc(monkey,Location), 
%          Time)), 
%    holds(
%       at_loc(bananas,Location), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7527).
if(at(at_loc(bananas, Location), Time),  (at(hasBananas(), Time), at(at_loc(monkey, Location), Time))).


% [object,location,time]
% object=% Box | object=Monkey ->
% Initiates(PushBox(location),At(object,location),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7532).
% From E: 
% 
% '->'(
%    ';'(
%       Object=box, 
%       Object=monkey), 
%    initiates_at(
%       pushBox(Location), 
%       at_loc(Object,Location), 
%       Time)).
 if(initiates(pushBox(Location),
                at(at_loc(Object, Location), Time)),
       (equals(Object, box);equals(Object, monkey))).


% [object,location1,location2,time]
% (object=Box | object=Monkey) &
% HoldsAt(At(object,location1),time) ->
% Terminates(PushBox(location2),At(object,location1),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7536).
% From E: 
% 
% '->'(
%    ','(
%       ';'(
%          Object=box, 
%          Object=monkey), 
%       holds(
%          at_loc(Object,Location1), 
%          Time)), 
%    terminates_at(
%       pushBox(Location2), 
%       at_loc(Object,Location1), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7536).
if(terminates(pushBox(Location2), at(at_loc(Object, Location1), Time)),  ((equals(Object, box);equals(Object, monkey)), at(at_loc(Object, Location1), Time))).


% [location,time]
% Happens(PushBox(location),time) ->
% ({location1}
%   HoldsAt(At(Box,location1),time) &
%   HoldsAt(At(Monkey,location1),time)) &
% !HoldsAt(At(Monkey,location),time) &
% !HoldsAt(OnBox(),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7541).
% From E: 
% 
% '->'(
%    happens(
%       pushBox(Location), 
%       Time), 
%    ','(
%       thereExists(Location1, 
%          ','(
%             holds(
%                at_loc(box,Location1), 
%                Time), 
%             holds(
%                at_loc(monkey,Location1), 
%                Time))), 
%       ','(
%          holds(
%             not(at_loc(monkey,Location)), 
%             Time), 
%          holds(
%             not(onBox()), 
%             Time)))).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7541).
if((thereExists(Location1,  (at(at_loc(box, Location1), Time), at(at_loc(monkey, Location1), Time))), at(not(at_loc(monkey, Location)), Time), at(not(onBox()), Time)), happens(pushBox(Location), Time)).


% [time]
 % Initiates(ClimbOn(),OnBox(),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7547).
% From E: 
% 
% initiates_at(climbOn(),onBox(),Time).
initiates(climbOn(),onBox()).


% [time]
% Happens(ClimbOn(),time) ->
% !HoldsAt(OnBox(),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7551).
% From E: 
% 
% '->'(
%    happens(climbOn(),Time), 
%    holds(
%       not(onBox()), 
%       Time)).
if(at(not(onBox()),Time),happens(climbOn(),Time)).


% [time]
 % Terminates(ClimbOff(),OnBox(),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7553).
% From E: 
% 
% terminates_at(climbOff(),onBox(),Time).
terminates(climbOff(),onBox()).


% [time]
% Happens(ClimbOff(),time) ->
% HoldsAt(OnBox(),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7557).
% From E: 
% 
% '->'(
%    happens(climbOff(),Time), 
%    holds(onBox(),Time)).
if(at(onBox(),Time),happens(climbOff(),Time)).


% [time]
 % Initiates(GraspBananas(),HasBananas(),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7559).
% From E: 
% 
% initiates_at(graspBananas(),hasBananas(),Time).
initiates(graspBananas(),hasBananas()).


% [object,location,time]
% object=% Bananas ->
% Releases(GraspBananas(),At(object,location),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7563).
% From E: 
% 
% '->'(
%    Object=bananas, 
%    releases_at(graspBananas(), 
%       at_loc(Object,Location), 
%       Time)).
if(terminates(graspBananas(),
	      at(at_loc(Object,Location),Time)),
   equals(Object,bananas)).


% [time]
% Happens(GraspBananas(),time) ->
% ({location1}
%   HoldsAt(At(Bananas,location1),time) &
%   HoldsAt(At(Monkey,location1),time)) &
% HoldsAt(OnBox(),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7567).
% From E: 
% 
% '->'(
%    happens(graspBananas(),Time), 
%    ','(
%       thereExists(Location1, 
%          ','(
%             holds(
%                at_loc(bananas,Location1), 
%                Time), 
%             holds(
%                at_loc(monkey,Location1), 
%                Time))), 
%       holds(onBox(),Time))).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7567).
if((thereExists(Location1,  (at(at_loc(bananas, Location1), Time), at(at_loc(monkey, Location1), Time))), at(onBox(), Time)), happens(graspBananas(), Time)).


% [time]
% HoldsAt(OnBox(),time) ->
% {location1}%  HoldsAt(At(Box,location1),time) &
%             HoldsAt(At(Monkey,location1),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7574).
% From E: 
% 
% exists(Location1, 
%    '->'(
%       holds(onBox(),Time), 
%       ','(
%          holds(
%             at_loc(box,Location1), 
%             Time), 
%          holds(
%             at_loc(monkey,Location1), 
%             Time)))).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7574).
exists(Location1, if((at(at_loc(box, Location1), Time), at(at_loc(monkey, Location1), Time)), at(onBox(), Time))).


%; End of file.
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%; FILE: examples/Antoniou1997/Student.e
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; conflicting defaults: method (D)
%; \fullciteA[p. 157]{Antoniou:1997}
%;
%; @book{Antoniou:1997,
%;   author = "Grigoris Antoniou",
%;   year = "1997",
%;   title = "Nonmonotonic Reasoning",
%;   address = "Cambridge, MA",
%;   publisher = "MIT Press",
%; }
%;

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7607).
% load foundations/Root.e
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/Root.e'))).
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7607).
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/EC.e'))).
:- call_pel_directive(load('foundations/EC.e')).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7610).
% sort x
% From E: 
% 
% sort(x).
sort(x).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7612).
% predicate Adult(x)
% From E: 
% 
% predicate(adult(x)).
mpred_prop(adult(x),predicate).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7612).
predicates([adult/1]).

% predicate Student(x)
% From E: 
% 
% predicate(student(x)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7612).
mpred_prop(student(x),predicate).
predicates([student/1]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7614).
% predicate Employed(x)
% From E: 
% 
% predicate(employed(x)).
mpred_prop(employed(x),predicate).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7614).
predicates([employed/1]).

% predicate Ab1(x)
% From E: 
% 
% predicate(ab1(x)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7614).
mpred_prop(ab1(x),predicate).
predicates([ab1/1]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7616).
% predicate Ab2(x)
% From E: 
% 
% predicate(ab2(x)).
mpred_prop(ab2(x),predicate).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7616).
predicates([ab2/1]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7618).
% x Mary
% From E: 
% 
% t(x,mary).
isa(mary,x).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7620).
% Student(Mary).
% From E: 
% 
% student(mary).
student(mary).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7622).
% [x]
 % Adult(x) & !Ab1(x) -> Employed(x).
% From E: 
% 
% '->'(
%    ','(
%       adult(X), 
%       not(ab1(X))), 
%    employed(X)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7622).
if(employed(X),  (adult(X), not(ab1(X)))).


% [x]
 % Student(x) & !Ab2(x) -> !Employed(x).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7622).
% From E: 
% 
% '->'(
%    ','(
%       student(X), 
%       not(ab2(X))), 
%    not(employed(X))).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7622).
if(not(employed(X)),  (student(X), not(ab2(X)))).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7624).
% [x]
 % Student(x) -> Adult(x).
% From E: 
% 
% '->'(
%    student(X), 
%    adult(X)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7624).
if(adult(X),student(X)).

% Theta: 
% From E: 
% 
% directive(theta).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7624).
directive(theta).
 


% [x]
 % Student(x) -> Ab1(x).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7624).
% From E: 
% 
% '->'(
%    student(X), 
%    ab1(X)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7624).
if(ab1(X),student(X)).

% range time 0 0
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7626).
% From E: 
% 
% ':-'(call_pel_directive(range(time,0,0))).
:- call_pel_directive(range(time, 0, 0)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7628).
% range offset 1 1
% From E: 
% 
% ':-'(call_pel_directive(range(offset,1,1))).
:- call_pel_directive(range(offset, 1, 1)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7630).
% completion Theta Ab1
% From E: 
% 
% ':-'(call_pel_directive(completion(theta))).
:- call_pel_directive(completion(theta)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7630).
% From E: 
% 
% ':-'(call_pel_directive(completion(ab1))).
:- call_pel_directive(completion(ab1)).

% completion Theta Ab2
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7630).
% From E: 
% 
% ':-'(call_pel_directive(completion(theta))).
:- call_pel_directive(completion(theta)).
% From E: 
% 
% ':-'(call_pel_directive(completion(ab2))).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7630).
:- call_pel_directive(completion(ab2)).
%; End of file.
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%; FILE: examples/Antoniou1997/Dropout.e
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; dealing with conflicting defaults by adding conditions
%; to one of the conflicting rules
%; \fullciteA[p. 56]{Antoniou:1997}
%;
%; @book{Antoniou:1997,
%;   author = "Grigoris Antoniou",
%;   year = "1997",
%;   title = "Nonmonotonic Reasoning",
%;   address = "Cambridge, MA",
%;   publisher = "MIT Press",
%; }
%;

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7663).
% load foundations/Root.e
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/Root.e'))).
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7663).
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/EC.e'))).
:- call_pel_directive(load('foundations/EC.e')).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7666).
% sort x
% From E: 
% 
% sort(x).
sort(x).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7668).
% predicate Dropout(x)
% From E: 
% 
% predicate(dropout(x)).
mpred_prop(dropout(x),predicate).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7668).
predicates([dropout/1]).

% predicate Adult(x)
% From E: 
% 
% predicate(adult(x)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7668).
mpred_prop(adult(x),predicate).
predicates([adult/1]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7670).
% predicate Employed(x)
% From E: 
% 
% predicate(employed(x)).
mpred_prop(employed(x),predicate).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7670).
predicates([employed/1]).

% predicate Ab1(x)
% From E: 
% 
% predicate(ab1(x)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7670).
mpred_prop(ab1(x),predicate).
predicates([ab1/1]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7672).
% predicate Ab2(x)
% From E: 
% 
% predicate(ab2(x)).
mpred_prop(ab2(x),predicate).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7672).
predicates([ab2/1]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7674).
% x Bill
% From E: 
% 
% t(x,bill).
isa(bill,x).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7676).
% Dropout(Bill).
% From E: 
% 
% dropout(bill).
dropout(bill).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7678).
% [x]
 % Dropout(x) & !Ab1(x) -> Adult(x).
% From E: 
% 
% '->'(
%    ','(
%       dropout(X), 
%       not(ab1(X))), 
%    adult(X)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7678).
if(adult(X),  (dropout(X), not(ab1(X)))).


% [x]
 % Adult(x) & !Dropout(x) & !Ab2(x) -> Employed(x).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7678).
% From E: 
% 
% '->'(
%    ','(
%       adult(X), 
%       ','(
%          not(dropout(X)), 
%          not(ab2(X)))), 
%    employed(X)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7678).
if(employed(X),  (adult(X), not(dropout(X)), not(ab2(X)))).

% range time 0 0
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7680).
% From E: 
% 
% ':-'(call_pel_directive(range(time,0,0))).
:- call_pel_directive(range(time, 0, 0)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7682).
% range offset 1 1
% From E: 
% 
% ':-'(call_pel_directive(range(offset,1,1))).
:- call_pel_directive(range(offset, 1, 1)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7684).
% completion Theta Ab1
% From E: 
% 
% ':-'(call_pel_directive(completion(theta))).
:- call_pel_directive(completion(theta)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7684).
% From E: 
% 
% ':-'(call_pel_directive(completion(ab1))).
:- call_pel_directive(completion(ab1)).

% completion Theta Ab2
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7684).
% From E: 
% 
% ':-'(call_pel_directive(completion(theta))).
:- call_pel_directive(completion(theta)).
% From E: 
% 
% ':-'(call_pel_directive(completion(ab2))).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7684).
:- call_pel_directive(completion(ab2)).
%; End of file.
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%; FILE: examples/Shanahan1999/Happy.e
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; @incollection{Shanahan:1999,
%;   author = "Shanahan, Murray",
%;   year = "1999",
%;   title = "The Event Calculus explained",
%;   editor = "Michael J. Wooldridge and Manuela M. Veloso",
%;   booktitle = "Artificial Intelligence Today: Recent Trends and Developments",
%;   series = "Lecture Notes in Computer Science",
%;   volume = "1600",
%;   pages = "409--430",
%;   address = "Berlin",
%;   publisher = "Springer",
%; }
%;
%; deduction
%;
%; modifications from Shanahan's formulation:
%; InitiallyN -> !HoldsAt
%; InitiallyP -> HoldsAt
%; timestamps
%;

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7725).
% load foundations/Root.e
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/Root.e'))).
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7725).
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/EC.e'))).
:- call_pel_directive(load('foundations/EC.e')).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7728).
% sort person
% From E: 
% 
% sort(person).
sort(person).

% event Feed(person)
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7728).
% From E: 
% 
% event(feed(person)).
mpred_prop(feed(person),event).
events([feed/1]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7730).
% event Clothe(person)
% From E: 
% 
% event(clothe(person)).
mpred_prop(clothe(person),event).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7730).
events([clothe/1]).

% fluent Happy(person)
% From E: 
% 
% fluent(happy(person)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7730).
mpred_prop(happy(person),fluent).
fluents([happy/1]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7732).
% fluent Hungry(person)
% From E: 
% 
% fluent(hungry(person)).
mpred_prop(hungry(person),fluent).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7732).
fluents([hungry/1]).

% fluent Cold(person)
% From E: 
% 
% fluent(cold(person)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7732).
mpred_prop(cold(person),fluent).
fluents([cold/1]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7734).
% noninertial Happy
% From E: 
% 
% ':-'(call_pel_directive(noninertial(happy))).
:- call_pel_directive(noninertial(happy)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7736).
% [person,time]
% HoldsAt(Happy(person),time) <->
% !HoldsAt(Hungry(person),time) &
% !HoldsAt(Cold(person),time).
% From E: 
% 
% <->(
%    holds(
%       happy(Person), 
%       Time), 
%    ','(
%       holds(
%          not(hungry(Person)), 
%          Time), 
%       holds(
%          not(cold(Person)), 
%          Time))).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7736).
at(happy(Person), Time) <->
    at(not(hungry(Person)), Time),
    at(not(cold(Person)), Time).


% [person,time]
% Terminates(Feed(person),Hungry(person),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7742).
% From E: 
% 
% terminates_at(
%    feed(Person), 
%    hungry(Person), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7742).
terminates(feed(Person),hungry(Person)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7744).
% [person,time]
% Terminates(Clothe(person),Cold(person),time).
% From E: 
% 
% terminates_at(
%    clothe(Person), 
%    cold(Person), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7744).
terminates(clothe(Person),cold(Person)).

% person Fred
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7746).
% From E: 
% 
% t(person,fred).
isa(fred,person).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7749).
% HoldsAt(Hungry(Fred),0).
% From E: 
% 
% holds(
%    hungry(fred), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7749).
initially(hungry(fred)).


% !HoldsAt(Cold(Fred),0).
% From E: 
% 
% holds(
%    not(cold(fred)), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7749).
initially(not(cold(fred))).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7751).
% Happens(Feed(Fred),1).
% From E: 
% 
% happens(
%    feed(fred), 1).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7751).
observe(at(feed(fred),1)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7753).
% completion Happens
% From E: 
% 
% ':-'(call_pel_directive(completion(happens))).
:- call_pel_directive(completion(happens)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7755).
% range time 0 2
% From E: 
% 
% ':-'(call_pel_directive(range(time,0,2))).
:- call_pel_directive(range(time, 0, 2)).

% range offset 1 1
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7755).
% From E: 
% 
% ':-'(call_pel_directive(range(offset,1,1))).
:- call_pel_directive(range(offset, 1, 1)).
%; End of file.
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%; FILE: examples/Shanahan1999/ThielscherCircuit.e
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; @article{Thielscher:1997,
%;   author = "Michael Thielscher",
%;   year = "1997",
%;   title = "Ramification and causality",
%;   journal = "Artificial Intelligence",
%;   volume = "89",
%;   pages = "317--364",
%; }
%;
%; @incollection{Shanahan:1999,
%;   author = "Shanahan, Murray",
%;   year = "1999",
%;   title = "The Event Calculus explained",
%;   editor = "Michael J. Wooldridge and Manuela M. Veloso",
%;   booktitle = "Artificial Intelligence Today: Recent Trends and Developments",
%;   series = "Lecture Notes in Computer Science",
%;   volume = "1600",
%;   pages = "409--430",
%;   address = "Berlin",
%;   publisher = "Springer",
%; }
%;
%; deduction
%;
%; modifications from Shanahan's formulation:
%; timestamps
%;

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7803).
% load foundations/Root.e
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/Root.e'))).
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7803).
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/EC.e'))).
:- call_pel_directive(load('foundations/EC.e')).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7805).
% load foundations/ECCausal.e
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/ECCausal.e'))).
:- call_pel_directive(load('foundations/ECCausal.e')).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7807).
% event LightOn()
% From E: 
% 
% event(lightOn()).
mpred_prop(lightOn(),event).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7807).
events([lightOn/0]).

% event Close1()
% From E: 
% 
% event(close1()).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7807).
mpred_prop(close1(),event).
events([close1/0]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7809).
% event Open2()
% From E: 
% 
% event(open2()).
mpred_prop(open2(),event).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7809).
events([open2/0]).

% event CloseRelay()
% From E: 
% 
% event(closeRelay()).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7809).
mpred_prop(closeRelay(),event).
events([closeRelay/0]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7812).
% fluent Light()
% From E: 
% 
% fluent(light()).
mpred_prop(light(),fluent).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7812).
fluents([light/0]).

% fluent Switch1()
% From E: 
% 
% fluent(switch1()).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7812).
mpred_prop(switch1(),fluent).
fluents([switch1/0]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7814).
% fluent Switch2()
% From E: 
% 
% fluent(switch2()).
mpred_prop(switch2(),fluent).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7814).
fluents([switch2/0]).

% fluent Switch3()
% From E: 
% 
% fluent(switch3()).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7814).
mpred_prop(switch3(),fluent).
fluents([switch3/0]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7816).
% fluent Relay()
% From E: 
% 
% fluent(relay()).
mpred_prop(relay(),fluent).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7816).
fluents([relay/0]).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7818).
% [time]
% Stopped(Light(),time) &
% Initiated(Switch1(),time) &
% Initiated(Switch2(),time) ->
% Happens(LightOn(),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7818).
% From E: 
% 
% '->'(
%    ','(
%       stopped(light(),Time), 
%       ','(
%          initiated(switch1(),Time), 
%          initiated(switch2(),Time))), 
%    happens(lightOn(),Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7818).
if(happens(lightOn(), Time),  (stopped(light(), Time), initiated(switch1(), Time), initiated(switch2(), Time))).


% [time]
% Started(Switch2(),time) &
% Initiated(Relay(),time) ->
% Happens(Open2(),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7825).
% From E: 
% 
% '->'(
%    ','(
%       started(switch2(),Time), 
%       initiated(relay(),Time)), 
%    happens(open2(),Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7825).
if(happens(open2(), Time),  (started(switch2(), Time), initiated(relay(), Time))).


% [time]
% Stopped(Relay(),time) &
% Initiated(Switch1(),time) &
% Initiated(Switch3(),time) ->
% Happens(CloseRelay(),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7830).
% From E: 
% 
% '->'(
%    ','(
%       stopped(relay(),Time), 
%       ','(
%          initiated(switch1(),Time), 
%          initiated(switch3(),Time))), 
%    happens(closeRelay(),Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7830).
if(happens(closeRelay(), Time),  (stopped(relay(), Time), initiated(switch1(), Time), initiated(switch3(), Time))).


% [time]
 % Initiates(LightOn(),Light(),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7834).
% From E: 
% 
% initiates_at(lightOn(),light(),Time).
initiates(lightOn(),light()).


% [time]
 % Terminates(Open2(),Switch2(),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7836).
% From E: 
% 
% terminates_at(open2(),switch2(),Time).
terminates(open2(),switch2()).


% [time]
 % Initiates(CloseRelay(),Relay(),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7838).
% From E: 
% 
% initiates_at(closeRelay(),relay(),Time).
initiates(closeRelay(),relay()).


% [time]
 % Initiates(Close1(),Switch1(),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7840).
% From E: 
% 
% initiates_at(close1(),switch1(),Time).
initiates(close1(),switch1()).


% !HoldsAt(Switch1(),0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7842).
% From E: 
% 
% holds(
%    not(switch1()), 0).
initially(not(switch1())).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7844).
% HoldsAt(Switch2(),0).
% From E: 
% 
% holds(switch2(),0).
initially(switch2()).


% HoldsAt(Switch3(),0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7844).
% From E: 
% 
% holds(switch3(),0).
initially(switch3()).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7846).
% !HoldsAt(Relay(),0).
% From E: 
% 
% holds(
%    not(relay()), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7846).
initially(not(relay())).


% !HoldsAt(Light(),0).
% From E: 
% 
% holds(
%    not(light()), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7846).
initially(not(light())).


% Happens(Close1(),0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7848).
% From E: 
% 
% happens(close1(),0).
observe(at(close1(),0)).

% completion Happens
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7850).
% From E: 
% 
% ':-'(call_pel_directive(completion(happens))).
:- call_pel_directive(completion(happens)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7853).
% range time 0 1
% From E: 
% 
% ':-'(call_pel_directive(range(time,0,1))).
:- call_pel_directive(range(time, 0, 1)).

% range offset 1 1
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7853).
% From E: 
% 
% ':-'(call_pel_directive(range(offset,1,1))).
:- call_pel_directive(range(offset, 1, 1)).
%; End of file.
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%; FILE: examples/Shanahan1999/CoinToss.e
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; @article{Kartha:1994,
%;   author = "G. Neelakantan Kartha",
%;   year = "1994",
%;   title = "Two counterexamples related to \uppercase{B}aker's approach to the frame problem",
%;   journal = "Artificial Intelligence",
%;   volume = "69",
%;   number = "1--2",
%;   pages = "379--391",
%; }
%;
%; @incollection{Shanahan:1999,
%;   author = "Shanahan, Murray",
%;   year = "1999",
%;   title = "The Event Calculus explained",
%;   editor = "Michael J. Wooldridge and Manuela M. Veloso",
%;   booktitle = "Artificial Intelligence Today: Recent Trends and Developments",
%;   series = "Lecture Notes in Computer Science",
%;   volume = "1600",
%;   pages = "409--430",
%;   address = "Berlin",
%;   publisher = "Springer",
%; }
%;
%; model finding
%;
%; modifications from Shanahan's formulation:
%; InitiallyP -> HoldsAt
%; pruning of models irrelevant to example
%; timestamps
%;

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7904).
% load foundations/Root.e
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/Root.e'))).
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7904).
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/EC.e'))).
:- call_pel_directive(load('foundations/EC.e')).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7907).
% event Toss()
% From E: 
% 
% event(toss()).
mpred_prop(toss(),event).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7907).
events([toss/0]).

% fluent ItsHeads()
% From E: 
% 
% fluent(itsHeads()).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7907).
mpred_prop(itsHeads(),fluent).
fluents([itsHeads/0]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7909).
% fluent Heads()
% From E: 
% 
% fluent(heads()).
mpred_prop(heads(),fluent).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7909).
fluents([heads/0]).

% noninertial ItsHeads
% From E: 
% 
% ':-'(call_pel_directive(noninertial(itsHeads))).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7909).
:- call_pel_directive(noninertial(itsHeads)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7912).
% [time]
 % HoldsAt(ItsHeads(),time) -> Initiates(Toss(),Heads(),time).
% From E: 
% 
% '->'(
%    holds(itsHeads(),Time), 
%    initiates_at(toss(),heads(),Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7912).
if(initiates(toss(),at(heads(),Time)),at(itsHeads(),Time)).


% [time]
 % !HoldsAt(ItsHeads(),time) -> Terminates(Toss(),Heads(),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7912).
% From E: 
% 
% '->'(
%    holds(
%       not(itsHeads()), 
%       Time), 
%    terminates_at(toss(),heads(),Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7912).
if(terminates(toss(),at(heads(),Time)),
   at(not(itsHeads()),Time)).


% HoldsAt(Heads(),0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7914).
% From E: 
% 
% holds(heads(),0).
initially(heads()).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7916).
% Happens(Toss(),1).
% From E: 
% 
% happens(toss(),1).
observe(at(toss(),1)).


% Happens(Toss(),2).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7916).
% From E: 
% 
% happens(toss(),2).
observe(at(toss(),2)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7918).
% Happens(Toss(),3).
% From E: 
% 
% happens(toss(),3).
observe(at(toss(),3)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7920).
%; prune models irrelevant to example:


% HoldsAt(ItsHeads(),0).
% From E: 
% 
% holds(itsHeads(),0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7920).
initially(itsHeads()).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7922).
% HoldsAt(ItsHeads(),4).
% From E: 
% 
% holds(itsHeads(),4).
at(itsHeads(),4).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7924).
% completion Happens
% From E: 
% 
% ':-'(call_pel_directive(completion(happens))).
:- call_pel_directive(completion(happens)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7926).
% range time 0 4
% From E: 
% 
% ':-'(call_pel_directive(range(time,0,4))).
:- call_pel_directive(range(time, 0, 4)).

% range offset 1 1
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7926).
% From E: 
% 
% ':-'(call_pel_directive(range(offset,1,1))).
:- call_pel_directive(range(offset, 1, 1)).
%; End of file.
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%; FILE: examples/Shanahan1999/ChessBoard.e
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; due to Raymond Reiter
%;
%; @inproceedings{KarthaLifschitz:1994,
%;   author = "G. Neelakantan Kartha and Vladimir Lifschitz",
%;   year = "1994",
%;   title = "Actions with indirect effects (preliminary report)",
%;   editor = "Jon Doyle and Erik Sandewall and Pietro Torasso",
%;   booktitle = "\uppercase{P}roceedings of the \uppercase{F}ourth \uppercase{I}nternational \uppercase{C}onference on \uppercase{P}rinciples of \uppercase{K}nowledge \uppercase{R}epresentation and \uppercase{R}easoning",
%;   pages = "341--350",
%;   address = "San Francisco",
%;   publisher = "Morgan Kaufmann",
%; }
%;
%; @incollection{Shanahan:1999,
%;   author = "Shanahan, Murray",
%;   year = "1999",
%;   title = "The Event Calculus explained",
%;   editor = "Michael J. Wooldridge and Manuela M. Veloso",
%;   booktitle = "Artificial Intelligence Today: Recent Trends and Developments",
%;   series = "Lecture Notes in Computer Science",
%;   volume = "1600",
%;   pages = "409--430",
%;   address = "Berlin",
%;   publisher = "Springer",
%; }
%;
%; model finding
%;
%; modifications from Shanahan's formulation:
%; InitiallyN -> !HoldsAt
%; pruning of models irrelevant to example
%; timestamps
%;

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7980).
% load foundations/Root.e
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/Root.e'))).
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7980).
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/EC.e'))).
:- call_pel_directive(load('foundations/EC.e')).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7983).
% event Throw()
% From E: 
% 
% event(throw()).
mpred_prop(throw(),event).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7983).
events([throw/0]).

% fluent ItsBlack()
% From E: 
% 
% fluent(itsBlack()).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7983).
mpred_prop(itsBlack(),fluent).
fluents([itsBlack/0]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7985).
% fluent ItsWhite()
% From E: 
% 
% fluent(itsWhite()).
mpred_prop(itsWhite(),fluent).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7985).
fluents([itsWhite/0]).

% fluent OnBlack()
% From E: 
% 
% fluent(onBlack()).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7985).
mpred_prop(onBlack(),fluent).
fluents([onBlack/0]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7987).
% fluent OnWhite()
% From E: 
% 
% fluent(onWhite()).
mpred_prop(onWhite(),fluent).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7987).
fluents([onWhite/0]).

% noninertial ItsBlack, ItsWhite
% From E: 
% 
% ':-'(call_pel_directive(noninertial(itsBlack))).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7987).
:- call_pel_directive(noninertial(itsBlack)).
% From E: 
% 
% ':-'(call_pel_directive(noninertial(itsWhite))).
:- call_pel_directive(noninertial(itsWhite)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7990).
% [time]
% HoldsAt(ItsWhite(),time) ->
% Initiates(Throw(),OnWhite(),time).
% From E: 
% 
% '->'(
%    holds(itsWhite(),Time), 
%    initiates_at(throw(),onWhite(),Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7990).
if(initiates(throw(),at(onWhite(),Time)),
   at(itsWhite(),Time)).


% [time]
% HoldsAt(ItsBlack(),time) ->
% Initiates(Throw(),OnBlack(),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7995).
% From E: 
% 
% '->'(
%    holds(itsBlack(),Time), 
%    initiates_at(throw(),onBlack(),Time)).
if(initiates(throw(),at(onBlack(),Time)),
   at(itsBlack(),Time)).


% [time]
 % HoldsAt(ItsWhite(),time) | HoldsAt(ItsBlack(),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7997).
% From E: 
% 
% ';'(
%    holds(itsWhite(),Time), 
%    holds(itsBlack(),Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7997).
if(at(not(itsWhite()),Time),at(itsBlack(),Time)).


% !HoldsAt(OnWhite(),0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',7999).
% From E: 
% 
% holds(
%    not(onWhite()), 0).
initially(not(onWhite())).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8001).
% !HoldsAt(OnBlack(),0).
% From E: 
% 
% holds(
%    not(onBlack()), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8001).
initially(not(onBlack())).


% Happens(Throw(),1).
% From E: 
% 
% happens(throw(),1).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8001).
observe(at(throw(),1)).


%; prune models irrelevant to example:


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8005).
% HoldsAt(ItsWhite(),0).
% From E: 
% 
% holds(itsWhite(),0).
initially(itsWhite()).


% HoldsAt(ItsBlack(),0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8005).
% From E: 
% 
% holds(itsBlack(),0).
initially(itsBlack()).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8007).
% HoldsAt(ItsWhite(),2).
% From E: 
% 
% holds(itsWhite(),2).
at(itsWhite(),2).


% HoldsAt(ItsBlack(),2).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8007).
% From E: 
% 
% holds(itsBlack(),2).
at(itsBlack(),2).

% completion Happens
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8009).
% From E: 
% 
% ':-'(call_pel_directive(completion(happens))).
:- call_pel_directive(completion(happens)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8012).
% range time 0 2
% From E: 
% 
% ':-'(call_pel_directive(range(time,0,2))).
:- call_pel_directive(range(time, 0, 2)).

% range offset 1 1
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8012).
% From E: 
% 
% ':-'(call_pel_directive(range(offset,1,1))).
:- call_pel_directive(range(offset, 1, 1)).
%; End of file.
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%; FILE: examples/Shanahan1999/RussianTurkey.e
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; @book{Sandewall:1994,
%;   author = "Sandewall, Erik",
%;   year = "1994",
%;   title = "Features and Fluents: The Representation of Knowledge about Dynamical Systems",
%;   volume = "I",
%;   address = "Oxford",
%;   publisher = "Oxford University Press",
%; }
%;
%; @incollection{Shanahan:1999,
%;   author = "Shanahan, Murray",
%;   year = "1999",
%;   title = "The Event Calculus explained",
%;   editor = "Michael J. Wooldridge and Manuela M. Veloso",
%;   booktitle = "Artificial Intelligence Today: Recent Trends and Developments",
%;   series = "Lecture Notes in Computer Science",
%;   volume = "1600",
%;   pages = "409--430",
%;   address = "Berlin",
%;   publisher = "Springer",
%; }
%;
%; model finding
%;
%; modifications from Shanahan's formulation:
%; InitiallyP -> HoldsAt
%; added [time] Terminates(Shoot(),Loaded(),time).
%; added !HoldsAt(Loaded(),0) to prune models
%; timestamps
%;

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8063).
% load foundations/Root.e
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/Root.e'))).
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8063).
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/EC.e'))).
:- call_pel_directive(load('foundations/EC.e')).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8066).
% event Load()
% From E: 
% 
% event(load()).
mpred_prop(load(),event).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8066).
events([load/0]).

% event Shoot()
% From E: 
% 
% event(shoot()).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8066).
mpred_prop(shoot(),event).
events([shoot/0]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8068).
% event Spin()
% From E: 
% 
% event(spin()).
mpred_prop(spin(),event).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8068).
events([spin/0]).

% fluent Loaded()
% From E: 
% 
% fluent(loaded()).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8068).
mpred_prop(loaded(),fluent).
fluents([loaded/0]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8070).
% fluent Alive()
% From E: 
% 
% fluent(alive()).
mpred_prop(alive(),fluent).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8070).
fluents([alive/0]).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8072).
% [time]
 % Initiates(Load(),Loaded(),time).
% From E: 
% 
% initiates_at(load(),loaded(),Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8072).
initiates(load(),loaded()).


% [time]
 % HoldsAt(Loaded(),time) -> Terminates(Shoot(),Alive(),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8072).
% From E: 
% 
% '->'(
%    holds(loaded(),Time), 
%    terminates_at(shoot(),alive(),Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8072).
if(terminates(shoot(),at(alive(),Time)),at(loaded(),Time)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8074).
% [time]
 % Releases(Spin(),Loaded(),time).
% From E: 
% 
% releases_at(spin(),loaded(),Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8074).
releases(spin(),loaded()).


% [time]
 % Terminates(Shoot(),Loaded(),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8074).
% From E: 
% 
% terminates_at(shoot(),loaded(),Time).
terminates(shoot(),loaded()).


% HoldsAt(Alive(),0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8076).
% From E: 
% 
% holds(alive(),0).
initially(alive()).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8078).
% !HoldsAt(Loaded(),0).
% From E: 
% 
% holds(
%    not(loaded()), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8078).
initially(not(loaded())).


% Happens(Load(),1).
% From E: 
% 
% happens(load(),1).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8078).
observe(at(load(),1)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8080).
% Happens(Spin(),2).
% From E: 
% 
% happens(spin(),2).
observe(at(spin(),2)).


% Happens(Shoot(),3).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8080).
% From E: 
% 
% happens(shoot(),3).
observe(at(shoot(),3)).

% completion Happens
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8082).
% From E: 
% 
% ':-'(call_pel_directive(completion(happens))).
:- call_pel_directive(completion(happens)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8085).
% range time 0 4
% From E: 
% 
% ':-'(call_pel_directive(range(time,0,4))).
:- call_pel_directive(range(time, 0, 4)).

% range offset 1 1
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8085).
% From E: 
% 
% ':-'(call_pel_directive(range(offset,1,1))).
:- call_pel_directive(range(offset, 1, 1)).
%; End of file.
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%; FILE: examples/AkmanEtAl2004/ZooTest4.2.e
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; @article{Akman:2004,
%;   author = "Varol Akman and Selim T. Erdogan and Joohyung Lee and Vladimir Lifschitz and Hudson Turner",
%;   year = "2004",
%;   title = "Representing the zoo world and the traffic world in the language of the causal calculator",
%;   journal = "Artificial Intelligence",
%;   volume = "153",
%;   pages = "105--140",
%; }
%;

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8115).
% option encoding 3
% From E: 
% 
% ':-'(call_pel_directive(option(encoding,3))).
:- call_pel_directive(option(encoding, 3)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8117).
% load foundations/Root.e
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/Root.e'))).
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8117).
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/EC.e'))).
:- call_pel_directive(load('foundations/EC.e')).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8119).
% load examples/AkmanEtAl2004/ZooWorld.e
% From E: 
% 
% ':-'(call_pel_directive(load('examples/AkmanEtAl2004/ZooWorld.e'))).
:- call_pel_directive(load('examples/AkmanEtAl2004/ZooWorld.e')).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8121).
% human Homer
% From E: 
% 
% t(human,homer).
isa(homer,human).

% elephant Jumbo
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8121).
% From E: 
% 
% t(elephant,jumbo).
isa(jumbo,elephant).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8124).
% Species(Homer)=HumanSpecies.
% From E: 
% 
% '='(
%    species(homer), 
%    humanSpecies).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8124).
species(homer,humanSpecies).


% Adult(Homer).
% From E: 
% 
% adult(homer).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8124).
adult(homer).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8126).
% Species(Jumbo)=ElephantSpecies.
% From E: 
% 
% '='(
%    species(jumbo), 
%    elephantSpecies).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8126).
species(jumbo,elephantSpecies).


% Adult(Jumbo).
% From E: 
% 
% adult(jumbo).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8126).
adult(jumbo).


% !HoldsAt(Opened(GateAO),0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8128).
% From E: 
% 
% holds(
%    not(opened(gateAO)), 0).
initially(not(opened(gateAO))).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8130).
% {position} 


% HoldsAt(Pos(Homer,position),0) & Outside=Loc(position).
% From E: 
% 
% exists(Position, 
%    ','(
%       holds(
%          pos(homer,Position), 0), 
%       '='(outside, 
%          loc(Position)))).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8130).
exists(Position,  (at(pos(homer, Position), 0), outside=loc(Position))).
% {position} 


% HoldsAt(Pos(Jumbo,position),0) & CageA=Loc(position).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8130).
% From E: 
% 
% exists(Position, 
%    ','(
%       holds(
%          pos(jumbo,Position), 0), 
%       '='(cageA, 
%          loc(Position)))).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8130).
exists(Position,  (at(pos(jumbo, Position), 0), cageA=loc(Position))).
% {position} 


% HoldsAt(Pos(Homer,position),5) & CageA=Loc(position).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8132).
% From E: 
% 
% exists(Position, 
%    ','(
%       holds(
%          pos(homer,Position), 5), 
%       '='(cageA, 
%          loc(Position)))).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8132).
exists(Position,  (at(pos(homer, Position), 5), cageA=loc(Position))).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8134).
% {position} 


% HoldsAt(Pos(Jumbo,position),5) & Outside=Loc(position).
% From E: 
% 
% exists(Position, 
%    ','(
%       holds(
%          pos(jumbo,Position), 5), 
%       '='(outside, 
%          loc(Position)))).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8134).
exists(Position,  (at(pos(jumbo, Position), 5), outside=loc(Position))).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8136).
% [animal,time]
 % !HoldsAt(Mounted(Homer,animal),time).
% From E: 
% 
% holds(
%    not(mounted(homer,Animal)), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8136).
at(not(mounted(homer,Animal)),Time).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8138).
% [human]
 % HoldsAt(PosDeterminingFluent(human,1),5).
% From E: 
% 
% holds(
%    posDeterminingFluent(Human,1), 5).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8138).
at(posDeterminingFluent(Human,1),5).


% [event,animal]
 % !HoldsAt(DoneBy(event,animal),5).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8138).
% From E: 
% 
% holds(
%    not(doneBy(Event,Animal)), 5).
at(not(doneBy(Event,Animal)),5).


%;HoldsAt(Pos(Homer,7),0).
%;HoldsAt(Pos(Jumbo,4),0).
%;Happens(Move(Jumbo,3),0).
%;Happens(Open(Homer,GateAO),0).
%;Happens(Move(Homer,4),1).
%;Happens(Move(Jumbo,1),1).
%;Happens(Move(Jumbo,3),2).
%;Happens(Mount(Homer,Jumbo),2).
%;Happens(Move(Jumbo,4),3).
%;!Happens(Move(Homer,2),3).
%;Happens(Move(Jumbo,7),4).
%;!Happens(Mount(Homer,Jumbo),3).
%;!Happens(Mount(Homer,Jumbo),4).
%;[position] !Happens(Move(Homer,position),4).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8156).
% range time 0 5
% From E: 
% 
% ':-'(call_pel_directive(range(time,0,5))).
:- call_pel_directive(range(time, 0, 5)).

% range position 1 8
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8156).
% From E: 
% 
% ':-'(call_pel_directive(range(position,1,8))).
:- call_pel_directive(range(position, 1, 8)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8158).
% range offset 0 0
% From E: 
% 
% ':-'(call_pel_directive(range(offset,0,0))).
:- call_pel_directive(range(offset, 0, 0)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8160).
% completion Happens
% From E: 
% 
% ':-'(call_pel_directive(completion(happens))).
:- call_pel_directive(completion(happens)).
%; End of file.
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%; FILE: examples/AkmanEtAl2004/ZooTest5.1.e
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; @article{Akman:2004,
%;   author = "Varol Akman and Selim T. Erdogan and Joohyung Lee and Vladimir Lifschitz and Hudson Turner",
%;   year = "2004",
%;   title = "Representing the zoo world and the traffic world in the language of the causal calculator",
%;   journal = "Artificial Intelligence",
%;   volume = "153",
%;   pages = "105--140",
%; }
%;

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8189).
% option encoding 3
% From E: 
% 
% ':-'(call_pel_directive(option(encoding,3))).
:- call_pel_directive(option(encoding, 3)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8191).
% load foundations/Root.e
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/Root.e'))).
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8191).
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/EC.e'))).
:- call_pel_directive(load('foundations/EC.e')).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8193).
% load examples/AkmanEtAl2004/ZooWorld.e
% From E: 
% 
% ':-'(call_pel_directive(load('examples/AkmanEtAl2004/ZooWorld.e'))).
:- call_pel_directive(load('examples/AkmanEtAl2004/ZooWorld.e')).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8195).
% human Homer
% From E: 
% 
% t(human,homer).
isa(homer,human).

% elephant Jumbo
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8195).
% From E: 
% 
% t(elephant,jumbo).
isa(jumbo,elephant).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8197).
% horse Silver
% From E: 
% 
% t(horse,silver).
isa(silver,horse).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8199).
% Species(Homer)=HumanSpecies.
% From E: 
% 
% '='(
%    species(homer), 
%    humanSpecies).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8199).
species(homer,humanSpecies).


% Adult(Homer).
% From E: 
% 
% adult(homer).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8199).
adult(homer).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8201).
% Species(Jumbo)=ElephantSpecies.
% From E: 
% 
% '='(
%    species(jumbo), 
%    elephantSpecies).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8201).
species(jumbo,elephantSpecies).


% Adult(Jumbo).
% From E: 
% 
% adult(jumbo).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8201).
adult(jumbo).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8203).
% Species(Silver)=HorseSpecies.
% From E: 
% 
% '='(
%    species(silver), 
%    horseSpecies).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8203).
species(silver,horseSpecies).


% Adult(Silver).
% From E: 
% 
% adult(silver).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8203).
adult(silver).
% {position}


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8207).
% !HoldsAt(Pos(Homer,position),0) &
% HoldsAt(Pos(Jumbo,position),0) &
% HoldsAt(Pos(Homer,position),1) &
% !HoldsAt(Pos(Jumbo,position),1).
% From E: 
% 
% exists(Position, 
%    ','(
%       holds(
%          not(pos(homer,Position)), 0), 
%       ','(
%          holds(
%             pos(jumbo,Position), 0), 
%          ','(
%             holds(
%                pos(homer,Position), 1), 
%             holds(
%                not(pos(jumbo,Position)), 1))))).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8207).
exists(Position,  (at(not(pos(homer, Position)), 0), at(pos(jumbo, Position), 0), at(pos(homer, Position), 1), at(not(pos(jumbo, Position)), 1))).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8211).
% HoldsAt(Mounted(Homer,Silver),0).
% From E: 
% 
% holds(
%    mounted(homer,silver), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8211).
initially(mounted(homer,silver)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8213).
% option manualrelease on
% From E: 
% 
% ':-'(call_pel_directive(option(manualrelease,on))).
:- call_pel_directive(option(manualrelease, on)).


% [human, animal]
 % !ReleasedAt(Mounted(human, animal),0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8213).
% From E: 
% 
% not(released_at(
%        mounted(Human,Animal), 0)).
not(released_at(mounted(Human,Animal),0)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8215).
% [gate]
 % !ReleasedAt(Opened(gate),0).
% From E: 
% 
% not(released_at(
%        opened(Gate), 0)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8215).
not(released_at(opened(Gate),0)).


% [position]
 % ReleasedAt(Pos(Homer,position),0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8215).
% From E: 
% 
% released_at(
%    pos(homer,Position), 0).
released_at(pos(homer,Position),0).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8217).
% [position]
 % !ReleasedAt(Pos(Jumbo,position),0).
% From E: 
% 
% not(released_at(
%        pos(jumbo,Position), 0)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8217).
not(released_at(pos(jumbo,Position),0)).


% [position]
 % !ReleasedAt(Pos(Silver,position),0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8217).
% From E: 
% 
% not(released_at(
%        pos(silver,Position), 0)).
not(released_at(pos(silver,Position),0)).


% [human]
 % HoldsAt(PosDeterminingFluent(human,1),1).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8219).
% From E: 
% 
% holds(
%    posDeterminingFluent(Human,1), 1).
at(posDeterminingFluent(Human,1),1).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8221).
% [event,animal]
 % !HoldsAt(DoneBy(event,animal),1).
% From E: 
% 
% holds(
%    not(doneBy(Event,Animal)), 1).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8221).
at(not(doneBy(Event,Animal)),1).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8223).
%;HoldsAt(Opened(GateAO),0).
%;HoldsAt(Pos(Homer,3),0).
%;HoldsAt(Pos(Jumbo,2),0).
%;HoldsAt(Pos(Silver,3),0).
%;Happens(Move(Jumbo,4),0).
%;Happens(ThrowOff(Silver,Homer),0).
%;HoldsAt(PosDeterminingFluent(Homer,2),0).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8231).
% range time 0 1
% From E: 
% 
% ':-'(call_pel_directive(range(time,0,1))).
:- call_pel_directive(range(time, 0, 1)).

% range position 1 8
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8231).
% From E: 
% 
% ':-'(call_pel_directive(range(position,1,8))).
:- call_pel_directive(range(position, 1, 8)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8233).
% range offset 0 0
% From E: 
% 
% ':-'(call_pel_directive(range(offset,0,0))).
:- call_pel_directive(range(offset, 0, 0)).
%; End of file.
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%; FILE: examples/AkmanEtAl2004/ZooTest3.e
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; @article{Akman:2004,
%;   author = "Varol Akman and Selim T. Erdogan and Joohyung Lee and Vladimir Lifschitz and Hudson Turner",
%;   year = "2004",
%;   title = "Representing the zoo world and the traffic world in the language of the causal calculator",
%;   journal = "Artificial Intelligence",
%;   volume = "153",
%;   pages = "105--140",
%; }
%;

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8262).
% option encoding 3
% From E: 
% 
% ':-'(call_pel_directive(option(encoding,3))).
:- call_pel_directive(option(encoding, 3)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8264).
% load foundations/Root.e
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/Root.e'))).
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8264).
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/EC.e'))).
:- call_pel_directive(load('foundations/EC.e')).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8266).
% load examples/AkmanEtAl2004/ZooWorld.e
% From E: 
% 
% ':-'(call_pel_directive(load('examples/AkmanEtAl2004/ZooWorld.e'))).
:- call_pel_directive(load('examples/AkmanEtAl2004/ZooWorld.e')).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8268).
% human Homer
% From E: 
% 
% t(human,homer).
isa(homer,human).

% dog Snoopy
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8268).
% From E: 
% 
% t(dog,snoopy).
isa(snoopy,dog).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8271).
% Species(Homer)=HumanSpecies.
% From E: 
% 
% '='(
%    species(homer), 
%    humanSpecies).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8271).
species(homer,humanSpecies).


% Adult(Homer).
% From E: 
% 
% adult(homer).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8271).
adult(homer).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8273).
% Species(Snoopy)=DogSpecies.
% From E: 
% 
% '='(
%    species(snoopy), 
%    dogSpecies).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8273).
species(snoopy,dogSpecies).


% Adult(Snoopy).
% From E: 
% 
% adult(snoopy).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8273).
adult(snoopy).


% !HoldsAt(Opened(GateAO),0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8275).
% From E: 
% 
% holds(
%    not(opened(gateAO)), 0).
initially(not(opened(gateAO))).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8277).
% {position} 


% HoldsAt(Pos(Homer,position),0) & Outside=Loc(position).
% From E: 
% 
% exists(Position, 
%    ','(
%       holds(
%          pos(homer,Position), 0), 
%       '='(outside, 
%          loc(Position)))).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8277).
exists(Position,  (at(pos(homer, Position), 0), outside=loc(Position))).
% {position} 


% HoldsAt(Pos(Snoopy,position),0) & CageA=Loc(position).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8277).
% From E: 
% 
% exists(Position, 
%    ','(
%       holds(
%          pos(snoopy,Position), 0), 
%       '='(cageA, 
%          loc(Position)))).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8277).
exists(Position,  (at(pos(snoopy, Position), 0), cageA=loc(Position))).
% {position} 


% HoldsAt(Pos(Homer,position),2) & CageA=Loc(position).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8279).
% From E: 
% 
% exists(Position, 
%    ','(
%       holds(
%          pos(homer,Position), 2), 
%       '='(cageA, 
%          loc(Position)))).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8279).
exists(Position,  (at(pos(homer, Position), 2), cageA=loc(Position))).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8281).
% {position} 


% HoldsAt(Pos(Snoopy,position),2) & Outside=Loc(position).
% From E: 
% 
% exists(Position, 
%    ','(
%       holds(
%          pos(snoopy,Position), 2), 
%       '='(outside, 
%          loc(Position)))).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8281).
exists(Position,  (at(pos(snoopy, Position), 2), outside=loc(Position))).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8283).
% [human]
 % HoldsAt(PosDeterminingFluent(human,1),2).
% From E: 
% 
% holds(
%    posDeterminingFluent(Human,1), 2).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8283).
at(posDeterminingFluent(Human,1),2).


% [event,animal]
 % !HoldsAt(DoneBy(event,animal),2).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8283).
% From E: 
% 
% holds(
%    not(doneBy(Event,Animal)), 2).
at(not(doneBy(Event,Animal)),2).

% range time 0 2
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8285).
% From E: 
% 
% ':-'(call_pel_directive(range(time,0,2))).
:- call_pel_directive(range(time, 0, 2)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8287).
% range position 1 8
% From E: 
% 
% ':-'(call_pel_directive(range(position,1,8))).
:- call_pel_directive(range(position, 1, 8)).

% range offset 0 0
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8287).
% From E: 
% 
% ':-'(call_pel_directive(range(offset,0,0))).
:- call_pel_directive(range(offset, 0, 0)).
%; End of file.
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%; FILE: examples/AkmanEtAl2004/ZooWorld.e
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; @article{Akman:2004,
%;   author = "Varol Akman and Selim T. Erdogan and Joohyung Lee and Vladimir Lifschitz and Hudson Turner",
%;   year = "2004",
%;   title = "Representing the zoo world and the traffic world in the language of the causal calculator",
%;   journal = "Artificial Intelligence",
%;   volume = "153",
%;   pages = "105--140",
%; }
%;

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8317).
% sort position: integer
% From E: 
% 
% subsort(position,integer).
subsort(position,integer).

% sort location
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8317).
% From E: 
% 
% sort(location).
sort(location).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8319).
% sort cage: location
% From E: 
% 
% subsort(cage,location).
subsort(cage,location).

% sort gate
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8319).
% From E: 
% 
% sort(gate).
sort(gate).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8321).
% sort animal
% From E: 
% 
% sort(animal).
sort(animal).

% sort elephant: animal
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8321).
% From E: 
% 
% subsort(elephant,animal).
subsort(elephant,animal).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8323).
% sort horse: animal
% From E: 
% 
% subsort(horse,animal).
subsort(horse,animal).

% sort dog: animal
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8323).
% From E: 
% 
% subsort(dog,animal).
subsort(dog,animal).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8325).
% sort human: animal
% From E: 
% 
% subsort(human,animal).
subsort(human,animal).

% sort species
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8325).
% From E: 
% 
% sort(species).
sort(species).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8328).
% function Loc(position): location
% From E: 
% 
% function(
%    loc(position), 
%    location).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8328).
function(loc(position),location).

% function Side1(gate): position
% From E: 
% 
% function(
%    side1(gate), 
%    position).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8328).
function(side1(gate),position).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8330).
% function Side2(gate): position
% From E: 
% 
% function(
%    side2(gate), 
%    position).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8330).
function(side2(gate),position).

% function Species(animal): species
% From E: 
% 
% function(
%    species(animal), 
%    species).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8330).
function(species(animal),species).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8333).
% predicate Accessible(position,position,time)
% From E: 
% 
% predicate(accessible(position,position,time)).
mpred_prop(accessible(position,position,time),predicate).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8333).
predicates([accessible/3]).

% predicate Adult(animal)
% From E: 
% 
% predicate(adult(animal)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8333).
mpred_prop(adult(animal),predicate).
predicates([adult/1]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8335).
% predicate Large(animal)
% From E: 
% 
% predicate(large(animal)).
mpred_prop(large(animal),predicate).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8335).
predicates([large/1]).

% predicate LargeSpecies(species)
% From E: 
% 
% predicate(largeSpecies(species)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8335).
mpred_prop(largeSpecies(species),predicate).
predicates([largeSpecies/1]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8337).
% predicate Neighbor(position,position)
% From E: 
% 
% predicate(neighbor(position,position)).
mpred_prop(neighbor(position,position),predicate).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8337).
predicates([neighbor/2]).

% predicate Sides(position,position,gate)
% From E: 
% 
% predicate(sides(position,position,gate)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8337).
mpred_prop(sides(position,position,gate),predicate).
predicates([sides/3]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8340).
% event Close(human,gate)
% From E: 
% 
% event(close(human,gate)).
mpred_prop(close(human,gate),event).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8340).
events([close/2]).

% event GetOff(human,animal)
% From E: 
% 
% event(getOff(human,animal)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8340).
mpred_prop(getOff(human,animal),event).
events([getOff/2]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8342).
% event Mount(human,animal)
% From E: 
% 
% event(mount(human,animal)).
mpred_prop(mount(human,animal),event).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8342).
events([mount/2]).

% event Move(animal,position)
% From E: 
% 
% event(move(animal,position)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8342).
mpred_prop(move(animal,position),event).
events([move/2]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8344).
% event Open(human,gate)
% From E: 
% 
% event(open(human,gate)).
mpred_prop(open(human,gate),event).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8344).
events([open/2]).

% event ThrowOff(animal,human)
% From E: 
% 
% event(throwOff(animal,human)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8344).
mpred_prop(throwOff(animal,human),event).
events([throwOff/2]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8347).
% fluent AbnormalEncroachment(human)
% From E: 
% 
% fluent(abnormalEncroachment(human)).
mpred_prop(abnormalEncroachment(human),fluent).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8347).
fluents([abnormalEncroachment/1]).

% noninertial AbnormalEncroachment
% From E: 
% 
% ':-'(call_pel_directive(noninertial(abnormalEncroachment))).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8347).
:- call_pel_directive(noninertial(abnormalEncroachment)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8349).
% fluent DoneBy(event,animal)
% From E: 
% 
% fluent(doneBy(event,animal)).
mpred_prop(doneBy(event,animal),fluent).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8349).
fluents([doneBy/2]).

% noninertial DoneBy
% From E: 
% 
% ':-'(call_pel_directive(noninertial(doneBy))).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8349).
:- call_pel_directive(noninertial(doneBy)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8351).
% fluent Mounted(human,animal)
% From E: 
% 
% fluent(mounted(human,animal)).
mpred_prop(mounted(human,animal),fluent).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8351).
fluents([mounted/2]).

% fluent MountFails(human)
% From E: 
% 
% fluent(mountFails(human)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8351).
mpred_prop(mountFails(human),fluent).
fluents([mountFails/1]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8353).
% noninertial MountFails
% From E: 
% 
% ':-'(call_pel_directive(noninertial(mountFails))).
:- call_pel_directive(noninertial(mountFails)).

% fluent Moves(animal)
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8353).
% From E: 
% 
% fluent(moves(animal)).
mpred_prop(moves(animal),fluent).
fluents([moves/1]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8355).
% noninertial Moves
% From E: 
% 
% ':-'(call_pel_directive(noninertial(moves))).
:- call_pel_directive(noninertial(moves)).

% fluent Opened(gate)
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8355).
% From E: 
% 
% fluent(opened(gate)).
mpred_prop(opened(gate),fluent).
fluents([opened/1]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8357).
% fluent Pos(animal,position)
% From E: 
% 
% fluent(pos(animal,position)).
mpred_prop(pos(animal,position),fluent).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8357).
fluents([pos/2]).

% fluent PosDeterminingFluent(human,position)
% From E: 
% 
% fluent(posDeterminingFluent(human,position)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8357).
mpred_prop(posDeterminingFluent(human,position),fluent).
fluents([posDeterminingFluent/2]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8359).
% noninertial PosDeterminingFluent
% From E: 
% 
% ':-'(call_pel_directive(noninertial(posDeterminingFluent))).
:- call_pel_directive(noninertial(posDeterminingFluent)).

% fluent ThrowOffFails(animal,human)
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8359).
% From E: 
% 
% fluent(throwOffFails(animal,human)).
mpred_prop(throwOffFails(animal,human),fluent).
fluents([throwOffFails/2]).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8361).
% noninertial ThrowOffFails
% From E: 
% 
% ':-'(call_pel_directive(noninertial(throwOffFails))).
:- call_pel_directive(noninertial(throwOffFails)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8363).
% species HumanSpecies, ElephantSpecies, HorseSpecies, DogSpecies
% From E: 
% 
% t(species,humanSpecies).
isa(humanSpecies,species).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8363).
% From E: 
% 
% t(species,elephantSpecies).
isa(elephantSpecies,species).
% From E: 
% 
% t(species,horseSpecies).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8363).
isa(horseSpecies,species).
% From E: 
% 
% t(species,dogSpecies).
isa(dogSpecies,species).

% location Outside
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8363).
% From E: 
% 
% t(location,outside).
isa(outside,location).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8366).
% LargeSpecies(HumanSpecies).
% From E: 
% 
% largeSpecies(humanSpecies).
largeSpecies(humanSpecies).


% LargeSpecies(ElephantSpecies).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8366).
% From E: 
% 
% largeSpecies(elephantSpecies).
largeSpecies(elephantSpecies).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8368).
% LargeSpecies(HorseSpecies).
% From E: 
% 
% largeSpecies(horseSpecies).
largeSpecies(horseSpecies).


% !LargeSpecies(DogSpecies).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8368).
% From E: 
% 
% not(largeSpecies(dogSpecies)).
not(largeSpecies(dogSpecies)).


% [event,animal,time]
% HoldsAt(DoneBy(event,animal),time) <->
% (Happens(event,time) &
%  (({gate} event=Close(animal,gate)) |
%   ({animal1} event=GetOff(animal,animal1))|
%   ({animal1} event=Mount(animal,animal1))|
%   ({position} event=Move(animal,position))|
%   ({gate} event=Open(animal,gate)) |
%   ({human1} event=ThrowOff(animal,human1)))).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8372).
% From E: 
% 
% <->(
%    holds(
%       doneBy(Event,Animal), 
%       Time), 
%    ','(
%       happens(Event,Time), 
%       ';'(
%          thereExists(Gate, 
%             '='(Event, 
%                close(Animal,Gate))), 
%          ';'(
%             thereExists(Animal1, 
%                '='(Event, 
%                   getOff(Animal,Animal1))), 
%             ';'(
%                thereExists(Animal1, 
%                   '='(Event, 
%                      mount(Animal,Animal1))), 
%                ';'(
%                   thereExists(Position, 
%                      '='(Event, 
%                         move(Animal,Position))), 
%                   ';'(
%                      thereExists(Gate, 
%                         '='(Event, 
%                            open(Animal,Gate))), 
%                      thereExists(Human1, 
%                         '='(Event, 
%                            throwOff(Animal,Human1)))))))))).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8372).
at(doneBy(Event, Animal), Time) <->
    happens(Event, Time),
    (   thereExists(Gate, Event=close(Animal, Gate))
    ;   thereExists(Animal1,
                    Event=getOff(Animal, Animal1))
    ;   thereExists(Animal1,
                    Event=mount(Animal, Animal1))
    ;   thereExists(Position,
                    Event=move(Animal, Position))
    ;   thereExists(Gate, Event=open(Animal, Gate))
    ;   thereExists(Human1,
                    Event=throwOff(Animal, Human1))
    ).


% [event1,event2,animal,time]
% HoldsAt(DoneBy(event1,animal),time) &
% HoldsAt(DoneBy(event2,animal),time) ->
% event1=event2.
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8382).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          doneBy(Event1,Animal), 
%          Time), 
%       holds(
%          doneBy(Event2,Animal), 
%          Time)), 
%    Event1=Event2).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8382).
if(equals(Event1, Event2),  (at(doneBy(Event1, Animal), Time), at(doneBy(Event2, Animal), Time))).


% [animal]
 % Large(animal) <-> (Adult(animal) & LargeSpecies(Species(animal))).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8385).
% From E: 
% 
% <->(
%    large(Animal), 
%    ','(
%       adult(Animal), 
%       largeSpecies(species(Animal)))).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8385).
large(Animal) <->
    adult(Animal),
    largeSpecies(species(Animal)).


% [position]
 % {position1} % position1!=% position & Neighbor(position,position1).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8387).
% From E: 
% 
% exists(Position1, 
%    ','(
%       Position1\=Position, 
%       neighbor(Position,Position1))).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8387).
exists(Position1,  (Position1\=Position, neighbor(Position, Position1))).


% [position]
 % !Neighbor(position,position).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8389).
% From E: 
% 
% not(neighbor(Position,Position)).
not(neighbor(Position,Position)).


% [position1,position2]
% Neighbor(position1,position2) ->
% Neighbor(position2,position1).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8393).
% From E: 
% 
% '->'(
%    neighbor(Position1,Position2), 
%    neighbor(Position2,Position1)).
if(neighbor(Position2,Position1),
   neighbor(Position1,Position2)).


% [cage]
 % cage!=% Outside.
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8395).
% From E: 
% 
% Cage\=outside.
{dif(Cage,outside)}.


% [position1,position2,gate]
% Sides(position1,position2,gate) <->
% ((Side1(gate)=position1 &
%   Side2(gate)=position2) |
%  (Side2(gate)=position1 &
%   Side1(gate)=position2)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8399).
% From E: 
% 
% <->(
%    sides(Position1,Position2,Gate), 
%    ';'(
%       ','(
%          '='(
%             side1(Gate), 
%             Position1), 
%          '='(
%             side2(Gate), 
%             Position2)), 
%       ','(
%          '='(
%             side2(Gate), 
%             Position1), 
%          '='(
%             side1(Gate), 
%             Position2)))).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8399).
sides(Position1, Position2, Gate) <->
    (   side1(Gate, Position1),
        side2(Gate, Position2)
    ;   side2(Gate, Position1),
        side1(Gate, Position2)
    ).


% [gate]
 % Loc(Side1(gate))!=Loc(Side2(gate)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8404).
% From E: 
% 
% '\='(
%    loc(side1(Gate)), 
%    loc(side2(Gate))).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8404).
{dif(loc(side1(Gate)),loc(side2(Gate)))}.


% [position1,position2,gate1,gate2]
% Sides(position1,position2,gate1) &
% Sides(position1,position2,gate2) ->
% gate1=gate2.
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8408).
% From E: 
% 
% '->'(
%    ','(
%       sides(Position1,Position2,Gate1), 
%       sides(Position1,Position2,Gate2)), 
%    Gate1=Gate2).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8408).
if(equals(Gate1, Gate2),  (sides(Position1, Position2, Gate1), sides(Position1, Position2, Gate2))).


% [position1,position2,gate]
% Sides(position1,position2,gate) ->
% Neighbor(position1,position2).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8413).
% From E: 
% 
% '->'(
%    sides(Position1,Position2,Gate), 
%    neighbor(Position1,Position2)).
if(neighbor(Position1,Position2),
   sides(Position1,Position2,Gate)).


% [position1,position2]
% Loc(position1) != Loc(position2) &
% Neighbor(position1,position2) ->
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8417).
% {gate}%  Sides(position1,position2,gate).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8419).
% From E: 
% 
% exists(Gate, 
%    '->'(
%       ','(
%          '\='(
%             loc(Position1), 
%             loc(Position2)), 
%          neighbor(Position1,Position2)), 
%       sides(Position1,Position2,Gate))).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8419).
exists(Gate, if(sides(Position1, Position2, Gate),  (loc(Position1)\=loc(Position2), neighbor(Position1, Position2)))).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8421).
% [animal,position1,position2,time]
% HoldsAt(Pos(animal,position1),time) &
% HoldsAt(Pos(animal,position2),time) ->
% position1=position2.
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          pos(Animal,Position1), 
%          Time), 
%       holds(
%          pos(Animal,Position2), 
%          Time)), 
%    Position1=Position2).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8421).
if(equals(Position1, Position2),  (at(pos(Animal, Position1), Time), at(pos(Animal, Position2), Time))).


% [animal,time]
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8427).
% {position} % HoldsAt(Pos(animal,position),time).
% From E: 
% 
% exists(Position, 
%    holds(
%       pos(Animal,Position), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8427).
exists(Position,
 at(pos(Animal,Position),Time)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8429).
% [animal1,animal2,position,time]
% (animal1!=animal2 &
%  Large(animal1) &
%  Large(animal2) &
%  HoldsAt(Pos(animal1,position),time) &
%  HoldsAt(Pos(animal2,position),time)) ->
% (({human} human=animal1 & HoldsAt(Mounted(human,animal2),time)) |
%  ({human} human=animal2 & HoldsAt(Mounted(human,animal1),time))).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8429).
% From E: 
% 
% '->'(
%    ','(
%       Animal1\=Animal2, 
%       ','(
%          large(Animal1), 
%          ','(
%             large(Animal2), 
%             ','(
%                holds(
%                   pos(Animal1,Position), 
%                   Time), 
%                holds(
%                   pos(Animal2,Position), 
%                   Time))))), 
%    ';'(
%       thereExists(Human, 
%          ','(
%             Human=Animal1, 
%             holds(
%                mounted(Human,Animal2), 
%                Time))), 
%       thereExists(Human, 
%          ','(
%             Human=Animal2, 
%             holds(
%                mounted(Human,Animal1), 
%                Time))))).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8429).
if((thereExists(Human,  (equals(Human, Animal1), at(mounted(Human, Animal2), Time)));thereExists(Human,  (equals(Human, Animal2), at(mounted(Human, Animal1), Time)))),  ({dif(Animal1, Animal2)}, large(Animal1), large(Animal2), at(pos(Animal1, Position), Time), at(pos(Animal2, Position), Time))).


% [human,position1,position2,time]
% HoldsAt(PosDeterminingFluent(human,position1),time) &
% HoldsAt(PosDeterminingFluent(human,position2),time) ->
% position1=position2.
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8439).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          posDeterminingFluent(Human,Position1), 
%          Time), 
%       holds(
%          posDeterminingFluent(Human,Position2), 
%          Time)), 
%    Position1=Position2).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8439).
if(equals(Position1, Position2),  (at(posDeterminingFluent(Human, Position1), Time), at(posDeterminingFluent(Human, Position2), Time))).


% [animal,position,time]
% Initiates(Move(animal,position),Pos(animal,position),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8444).
% From E: 
% 
% initiates_at(
%    move(Animal,Position), 
%    pos(Animal,Position), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8444).
initiates(move(Animal,Position),
	  pos(Animal,Position)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8446).
% [animal,position1,position2,time]
% HoldsAt(Pos(animal,position1),time) ->
% Terminates(Move(animal,position2),Pos(animal,position1),time).
% From E: 
% 
% '->'(
%    holds(
%       pos(Animal,Position1), 
%       Time), 
%    terminates_at(
%       move(Animal,Position2), 
%       pos(Animal,Position1), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8446).
if(terminates(move(Animal,Position2),
	      at(pos(Animal,Position1),Time)),
   at(pos(Animal,Position1),Time)).


% [animal,position,time]
% Happens(Move(animal,position),time) ->
% !HoldsAt(Pos(animal,position),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8451).
% From E: 
% 
% '->'(
%    happens(
%       move(Animal,Position), 
%       Time), 
%    holds(
%       not(pos(Animal,Position)), 
%       Time)).
if(at(not(pos(Animal,Position)),Time),
   happens(move(Animal,Position),Time)).


% [human,position,time]
% Happens(Move(human,position),time) ->
% !{animal} HoldsAt(Mounted(human,animal),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8455).
% From E: 
% 
% '->'(
%    happens(
%       move(Human,Position), 
%       Time), 
%    not(thereExists(Animal, 
%           holds(
%              mounted(Human,Animal), 
%              Time)))).
if(not(thereExists(Animal,
		   at(mounted(Human,Animal),Time))),
   happens(move(Human,Position),Time)).


% [human,gate,time]
% Initiates(Open(human,gate),Opened(gate),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8459).
% From E: 
% 
% initiates_at(
%    open(Human,Gate), 
%    opened(Gate), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8459).
initiates(open(Human,Gate),opened(Gate)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8461).
% [human,gate,time]
% Happens(Open(human,gate),time) ->
% !HoldsAt(Opened(gate),time) &
% (!{animal} HoldsAt(Mounted(human,animal),time)) &
% ({position}
%  (Side1(gate)=position | Side2(gate)=position) &
%  HoldsAt(Pos(human,position),time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8461).
% From E: 
% 
% '->'(
%    happens(
%       open(Human,Gate), 
%       Time), 
%    ','(
%       holds(
%          not(opened(Gate)), 
%          Time), 
%       ','(
%          not(thereExists(Animal, 
%                 holds(
%                    mounted(Human,Animal), 
%                    Time))), 
%          thereExists(Position, 
%             ','(
%                ';'(
%                   '='(
%                      side1(Gate), 
%                      Position), 
%                   '='(
%                      side2(Gate), 
%                      Position)), 
%                holds(
%                   pos(Human,Position), 
%                   Time)))))).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8461).
if((at(not(opened(Gate)), Time), not(thereExists(Animal, at(mounted(Human, Animal), Time))), thereExists(Position,  ((side1(Gate, Position);side2(Gate, Position)), at(pos(Human, Position), Time)))), happens(open(Human, Gate), Time)).


% [human,gate,time]
% Terminates(Close(human,gate),Opened(gate),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8470).
% From E: 
% 
% terminates_at(
%    close(Human,Gate), 
%    opened(Gate), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8470).
terminates(close(Human,Gate),opened(Gate)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8472).
% [human,gate,time]
% Happens(Close(human,gate),time) ->
% HoldsAt(Opened(gate),time) &
% (!{animal} HoldsAt(Mounted(human,animal),time)) &
% {position}% 
% (Side1(gate)=position | Side2(gate)=position) &
% HoldsAt(Pos(human,position),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8476).
% From E: 
% 
% exists(Position, 
%    '->'(
%       happens(
%          close(Human,Gate), 
%          Time), 
%       ','(
%          holds(
%             opened(Gate), 
%             Time), 
%          ','(
%             not(thereExists(Animal, 
%                    holds(
%                       mounted(Human,Animal), 
%                       Time))), 
%             ','(
%                ';'(
%                   '='(
%                      side1(Gate), 
%                      Position), 
%                   '='(
%                      side2(Gate), 
%                      Position)), 
%                holds(
%                   pos(Human,Position), 
%                   Time)))))).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8476).
exists(Position, if((at(opened(Gate), Time), not(thereExists(Animal, at(mounted(Human, Animal), Time))), (side1(Gate, Position);side2(Gate, Position)), at(pos(Human, Position), Time)), happens(close(Human, Gate), Time))).


% [human,animal,position,time]
% HoldsAt(Mounted(human,animal),time) &
% HoldsAt(Pos(animal,position),time) ->
% HoldsAt(Pos(human,position),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8481).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          mounted(Human,Animal), 
%          Time), 
%       holds(
%          pos(Animal,Position), 
%          Time)), 
%    holds(
%       pos(Human,Position), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8481).
if(at(pos(Human, Position), Time),  (at(mounted(Human, Animal), Time), at(pos(Animal, Position), Time))).


% [animal,time]
% HoldsAt(Moves(animal),time) <->
% ({position}
%  HoldsAt(Pos(animal,position),time) &
%  !HoldsAt(Pos(animal,position),time+1)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8486).
% From E: 
% 
% <->(
%    holds(
%       moves(Animal), 
%       Time), 
%    thereExists(Position, 
%       ','(
%          holds(
%             pos(Animal,Position), 
%             Time), 
%          holds(
%             not(pos(Animal,Position)), 
%             Time+1)))).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8486).
at(moves(Animal), Time) <->
    thereExists(Position,
                 (at(pos(Animal, Position), Time), at(not(pos(Animal, Position)), Time+1))).


% [human,time]
% HoldsAt(MountFails(human),time) <->
% ({animal}
%   Happens(Mount(human,animal),time) &
%   HoldsAt(Moves(animal),time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8492).
% From E: 
% 
% <->(
%    holds(
%       mountFails(Human), 
%       Time), 
%    thereExists(Animal, 
%       ','(
%          happens(
%             mount(Human,Animal), 
%             Time), 
%          holds(
%             moves(Animal), 
%             Time)))).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8492).
at(mountFails(Human), Time) <->
    thereExists(Animal,
                 (happens(mount(Human, Animal), Time), at(moves(Animal), Time))).


% [human,animal,position,time]
% !HoldsAt(Moves(animal),time) ->
% Releases(Mount(human,animal),Pos(human,position),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8498).
% From E: 
% 
% '->'(
%    holds(
%       not(moves(Animal)), 
%       Time), 
%    releases_at(
%       mount(Human,Animal), 
%       pos(Human,Position), 
%       Time)).
if(terminates(mount(Human,Animal),
	      at(pos(Human,Position),Time)),
   at(not(moves(Animal)),Time)).


% [human,animal,time]
% !HoldsAt(Moves(animal),time) ->
% Initiates(Mount(human,animal),Mounted(human,animal),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8502).
% From E: 
% 
% '->'(
%    holds(
%       not(moves(Animal)), 
%       Time), 
%    initiates_at(
%       mount(Human,Animal), 
%       mounted(Human,Animal), 
%       Time)).
if(initiates(mount(Human,Animal),
	     at(mounted(Human,Animal),Time)),
   at(not(moves(Animal)),Time)).


% [human,animal,position,time]
% HoldsAt(Pos(animal,position),time) &
% HoldsAt(Moves(animal),time) ->
% Initiates(Mount(human,animal),Pos(human,position),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8506).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          pos(Animal,Position), 
%          Time), 
%       holds(
%          moves(Animal), 
%          Time)), 
%    initiates_at(
%       mount(Human,Animal), 
%       pos(Human,Position), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8506).
if(initiates(mount(Human, Animal), at(pos(Human, Position), Time)),  (at(pos(Animal, Position), Time), at(moves(Animal), Time))).


% [human,animal,position,time]
% HoldsAt(Pos(human,position),time) &
% HoldsAt(Moves(animal),time) ->
% Terminates(Mount(human,animal),Pos(human,position),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8511).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          pos(Human,Position), 
%          Time), 
%       holds(
%          moves(Animal), 
%          Time)), 
%    terminates_at(
%       mount(Human,Animal), 
%       pos(Human,Position), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8511).
if(terminates(mount(Human, Animal), at(pos(Human, Position), Time)),  (at(pos(Human, Position), Time), at(moves(Animal), Time))).


% [human,animal,time]
% Happens(Mount(human,animal),time) ->
% Large(animal).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8516).
% From E: 
% 
% '->'(
%    happens(
%       mount(Human,Animal), 
%       Time), 
%    large(Animal)).
if(large(Animal),
   happens(mount(Human,Animal),Time)).


% [human,animal,time]
% HoldsAt(Mounted(human,animal),time) ->
% Large(animal).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8520).
% From E: 
% 
% '->'(
%    holds(
%       mounted(Human,Animal), 
%       Time), 
%    large(Animal)).
if(large(Animal),
   at(mounted(Human,Animal),Time)).


% [human1,human2,time]
% Happens(Mount(human1,human2),time) ->
% !Large(human1).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8524).
% From E: 
% 
% '->'(
%    happens(
%       mount(Human1,Human2), 
%       Time), 
%    not(large(Human1))).
if(not(large(Human1)),
   happens(mount(Human1,Human2),Time)).


% [human1,human2,time]
% HoldsAt(Mounted(human1,human2),time) ->
% !Large(human1).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8528).
% From E: 
% 
% '->'(
%    holds(
%       mounted(Human1,Human2), 
%       Time), 
%    not(large(Human1))).
if(not(large(Human1)),
   at(mounted(Human1,Human2),Time)).


% [human,animal,time]
% Happens(Mount(human,animal),time) ->
% !{human1} human1!=human & HoldsAt(Mounted(human1,animal),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8532).
% From E: 
% 
% '->'(
%    happens(
%       mount(Human,Animal), 
%       Time), 
%    not(thereExists(Human1, 
%           ','(
%              Human1\=Human, 
%              holds(
%                 mounted(Human1,Animal), 
%                 Time))))).
if(not(thereExists(Human1,  ({dif(Human1, Human)}, at(mounted(Human1, Animal), Time)))), happens(mount(Human, Animal), Time)).


% [human1,human2,animal,time]
% HoldsAt(Mounted(human1,animal),time) &
% HoldsAt(Mounted(human2,animal),time) ->
% human1=human2.
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8536).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          mounted(Human1,Animal), 
%          Time), 
%       holds(
%          mounted(Human2,Animal), 
%          Time)), 
%    Human1=Human2).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8536).
if(equals(Human1, Human2),  (at(mounted(Human1, Animal), Time), at(mounted(Human2, Animal), Time))).


% [human,animal,time]
% Happens(Mount(human,animal),time) ->
% !{human1} human1!=human & HoldsAt(Mounted(human1,human),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8541).
% From E: 
% 
% '->'(
%    happens(
%       mount(Human,Animal), 
%       Time), 
%    not(thereExists(Human1, 
%           ','(
%              Human1\=Human, 
%              holds(
%                 mounted(Human1,Human), 
%                 Time))))).
if(not(thereExists(Human1,  ({dif(Human1, Human)}, at(mounted(Human1, Human), Time)))), happens(mount(Human, Animal), Time)).


% [human1,human2,time]
% Happens(Mount(human1,human2),time) ->
% {animal}%  HoldsAt(Mounted(human2,animal),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8545).
% From E: 
% 
% exists(Animal, 
%    '->'(
%       happens(
%          mount(Human1,Human2), 
%          Time), 
%       holds(
%          mounted(Human2,Animal), 
%          Time))).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8545).
exists(Animal,
 if(at(mounted(Human2,Animal),Time),
   happens(mount(Human1,Human2),Time))).


% [human1,human2,time]
% HoldsAt(Mounted(human1,human2),time) ->
% !{animal} HoldsAt(Mounted(human2,animal),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8549).
% From E: 
% 
% '->'(
%    holds(
%       mounted(Human1,Human2), 
%       Time), 
%    not(thereExists(Animal, 
%           holds(
%              mounted(Human2,Animal), 
%              Time)))).
if(not(thereExists(Animal,
		   at(mounted(Human2,Animal),Time))),
   at(mounted(Human1,Human2),Time)).


% [human,animal,time]
% Happens(Mount(human,animal),time) ->
% !{animal1} HoldsAt(Mounted(human,animal1),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8553).
% From E: 
% 
% '->'(
%    happens(
%       mount(Human,Animal), 
%       Time), 
%    not(thereExists(Animal1, 
%           holds(
%              mounted(Human,Animal1), 
%              Time)))).
if(not(thereExists(Animal1,
		   at(mounted(Human,Animal1),Time))),
   happens(mount(Human,Animal),Time)).


% [human,animal,time]
% !HoldsAt(Moves(animal),time) ->
% Terminates(GetOff(human,animal),Mounted(human,animal),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8557).
% From E: 
% 
% '->'(
%    holds(
%       not(moves(Animal)), 
%       Time), 
%    terminates_at(
%       getOff(Human,Animal), 
%       mounted(Human,Animal), 
%       Time)).
if(terminates(getOff(Human,Animal),
	      at(mounted(Human,Animal),Time)),
   at(not(moves(Animal)),Time)).


% [human,animal,position,time]
% !HoldsAt(Moves(animal),time) &
% HoldsAt(PosDeterminingFluent(human,position),time) ->
% Initiates(GetOff(human,animal),Pos(human,position),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8561).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          not(moves(Animal)), 
%          Time), 
%       holds(
%          posDeterminingFluent(Human,Position), 
%          Time)), 
%    initiates_at(
%       getOff(Human,Animal), 
%       pos(Human,Position), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8561).
if(initiates(getOff(Human, Animal), at(pos(Human, Position), Time)),  (at(not(moves(Animal)), Time), at(posDeterminingFluent(Human, Position), Time))).


% [human,animal,position,time]
% !HoldsAt(Moves(animal),time) &
% HoldsAt(Pos(human,position),time) ->
% Terminates(GetOff(human,animal),Pos(human,position),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8566).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          not(moves(Animal)), 
%          Time), 
%       holds(
%          pos(Human,Position), 
%          Time)), 
%    terminates_at(
%       getOff(Human,Animal), 
%       pos(Human,Position), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8566).
if(terminates(getOff(Human, Animal), at(pos(Human, Position), Time)),  (at(not(moves(Animal)), Time), at(pos(Human, Position), Time))).


% [human,animal,position1,position2,time]
% !HoldsAt(Moves(animal),time) &
% HoldsAt(Pos(human,position1),time) &
% position1!=position2 ->
% Terminates(GetOff(human,animal),Pos(human,position2),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8571).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          not(moves(Animal)), 
%          Time), 
%       ','(
%          holds(
%             pos(Human,Position1), 
%             Time), 
%          Position1\=Position2)), 
%    terminates_at(
%       getOff(Human,Animal), 
%       pos(Human,Position2), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8571).
if(terminates(getOff(Human, Animal), at(pos(Human, Position2), Time)),  (at(not(moves(Animal)), Time), at(pos(Human, Position1), Time), {dif(Position1, Position2)})).


% [human,animal,time]
% Happens(GetOff(human,animal),time) ->
% HoldsAt(Mounted(human,animal),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8577).
% From E: 
% 
% '->'(
%    happens(
%       getOff(Human,Animal), 
%       Time), 
%    holds(
%       mounted(Human,Animal), 
%       Time)).
if(at(mounted(Human,Animal),Time),
   happens(getOff(Human,Animal),Time)).


% [animal1,human,time]
% HoldsAt(ThrowOffFails(animal1,human),time) <->
% ({position,animal2}
%  animal2!=human &
%  HoldsAt(PosDeterminingFluent(human,position),time) &
%  Large(animal2) &
%  HoldsAt(Pos(animal2,position),time+1)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8581).
% From E: 
% 
% <->(
%    holds(
%       throwOffFails(Animal1,Human), 
%       Time), 
%    exists(
%       [Position,Animal2], 
%       ','(
%          Animal2\=Human, 
%          ','(
%             holds(
%                posDeterminingFluent(Human,Position), 
%                Time), 
%             ','(
%                large(Animal2), 
%                holds(
%                   pos(Animal2,Position), 
%                   Time+1)))))).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8581).
at(throwOffFails(Animal1, Human), Time) <->
    exists([Position, Animal2],
            (Animal2\=Human, at(posDeterminingFluent(Human, Position), Time), large(Animal2), at(pos(Animal2, Position), Time+1))).


% [animal,human,position,time]
% HoldsAt(PosDeterminingFluent(human,position),time) &
% !HoldsAt(ThrowOffFails(animal,human),time) ->
% Initiates(ThrowOff(animal,human),Pos(human,position),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8589).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          posDeterminingFluent(Human,Position), 
%          Time), 
%       holds(
%          not(throwOffFails(Animal,Human)), 
%          Time)), 
%    initiates_at(
%       throwOff(Animal,Human), 
%       pos(Human,Position), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8589).
if(initiates(throwOff(Animal, Human), at(pos(Human, Position), Time)),  (at(posDeterminingFluent(Human, Position), Time), at(not(throwOffFails(Animal, Human)), Time))).


% [animal,human,position,time]
% HoldsAt(Pos(human,position),time) &
% !HoldsAt(ThrowOffFails(animal,human),time) ->
% Terminates(ThrowOff(animal,human),Pos(human,position),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8594).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          pos(Human,Position), 
%          Time), 
%       holds(
%          not(throwOffFails(Animal,Human)), 
%          Time)), 
%    terminates_at(
%       throwOff(Animal,Human), 
%       pos(Human,Position), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8594).
if(terminates(throwOff(Animal, Human), at(pos(Human, Position), Time)),  (at(pos(Human, Position), Time), at(not(throwOffFails(Animal, Human)), Time))).


% [animal,human,position1,position2,time]
% !HoldsAt(ThrowOffFails(animal,human),time) &
% HoldsAt(Pos(human,position1),time) &
% !HoldsAt(PosDeterminingFluent(human,position2),time) &
% position1!=position2 ->
% Terminates(ThrowOff(animal,human),Pos(human,position2),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8599).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          not(throwOffFails(Animal,Human)), 
%          Time), 
%       ','(
%          holds(
%             pos(Human,Position1), 
%             Time), 
%          ','(
%             holds(
%                not(posDeterminingFluent(Human,Position2)), 
%                Time), 
%             Position1\=Position2))), 
%    terminates_at(
%       throwOff(Animal,Human), 
%       pos(Human,Position2), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8599).
if(terminates(throwOff(Animal, Human), at(pos(Human, Position2), Time)),  (at(not(throwOffFails(Animal, Human)), Time), at(pos(Human, Position1), Time), at(not(posDeterminingFluent(Human, Position2)), Time), {dif(Position1, Position2)})).


% [human,time]
% (!{animal} Happens(ThrowOff(animal,human),time) |
%            Happens(GetOff(human,animal),time)) ->
% HoldsAt(PosDeterminingFluent(human,1),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8606).
% From E: 
% 
% '->'(
%    not(thereExists(Animal, 
%           ';'(
%              happens(
%                 throwOff(Animal,Human), 
%                 Time), 
%              happens(
%                 getOff(Human,Animal), 
%                 Time)))), 
%    holds(
%       posDeterminingFluent(Human,1), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8606).
 if(at(posDeterminingFluent(Human, 1), Time),
      not(thereExists(Animal,
                       (happens(throwOff(Animal, Human), Time);happens(getOff(Human, Animal), Time))))).


% [human,position,animal1,animal2,time]
% HoldsAt(PosDeterminingFluent(human,position),time) &
% HoldsAt(ThrowOffFails(animal1,human),time) &
% HoldsAt(Pos(animal2,position),time) ->
% Initiates(ThrowOff(animal1,human),Mounted(human,animal2),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8611).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          posDeterminingFluent(Human,Position), 
%          Time), 
%       ','(
%          holds(
%             throwOffFails(Animal1,Human), 
%             Time), 
%          holds(
%             pos(Animal2,Position), 
%             Time))), 
%    initiates_at(
%       throwOff(Animal1,Human), 
%       mounted(Human,Animal2), 
%       Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8611).
if(initiates(throwOff(Animal1, Human), at(mounted(Human, Animal2), Time)),  (at(posDeterminingFluent(Human, Position), Time), at(throwOffFails(Animal1, Human), Time), at(pos(Animal2, Position), Time))).


% [human,animal,time]
% !HoldsAt(ThrowOffFails(animal,human),time) ->
% Terminates(ThrowOff(animal,human),Mounted(human,animal),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8617).
% From E: 
% 
% '->'(
%    holds(
%       not(throwOffFails(Animal,Human)), 
%       Time), 
%    terminates_at(
%       throwOff(Animal,Human), 
%       mounted(Human,Animal), 
%       Time)).
if(terminates(throwOff(Animal,Human),
	      at(mounted(Human,Animal),Time)),
   at(not(throwOffFails(Animal,Human)),Time)).


% [animal,human,time]
% Happens(ThrowOff(animal,human),time) ->
% HoldsAt(Mounted(human,animal),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8621).
% From E: 
% 
% '->'(
%    happens(
%       throwOff(Animal,Human), 
%       Time), 
%    holds(
%       mounted(Human,Animal), 
%       Time)).
if(at(mounted(Human,Animal),Time),
   happens(throwOff(Animal,Human),Time)).


% [animal,human,time]
% Happens(ThrowOff(animal,human),time) ->
% !Happens(GetOff(human,animal),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8625).
% From E: 
% 
% '->'(
%    happens(
%       throwOff(Animal,Human), 
%       Time), 
%    not(happens(
%           getOff(Human,Animal), 
%           Time))).
if(not(happens(getOff(Human,Animal),Time)),
   happens(throwOff(Animal,Human),Time)).


% [animal,human,time]
% Happens(GetOff(human,animal),time) ->
% !Happens(ThrowOff(animal,human),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8629).
% From E: 
% 
% '->'(
%    happens(
%       getOff(Human,Animal), 
%       Time), 
%    not(happens(
%           throwOff(Animal,Human), 
%           Time))).
if(not(happens(throwOff(Animal,Human),Time)),
   happens(getOff(Human,Animal),Time)).


% [position1,position2,time]
% Accessible(position1,position2,time) <->
% (Neighbor(position1,position2) &
%  !{gate} Sides(position1,position2,gate) &
%          !HoldsAt(Opened(gate),time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8633).
% From E: 
% 
% <->(
%    accessible(Position1,Position2,Time), 
%    not(thereExists(Gate, 
%           ','(
%              neighbor(Position1,Position2), 
%              ','(
%                 sides(Position1,Position2,Gate), 
%                 holds(
%                    not(opened(Gate)), 
%                    Time)))))).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8633).
accessible(Position1, Position2, Time) <->
    not(thereExists(Gate,
                     (neighbor(Position1, Position2), sides(Position1, Position2, Gate), at(not(opened(Gate)), Time)))).


% [animal,position1,position2,time]
% (position1!=position2 &
%  HoldsAt(Pos(animal,position1),time) &
%  HoldsAt(Pos(animal,position2),time+1)) ->
% Accessible(position1,position2,time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8639).
% From E: 
% 
% '->'(
%    ','(
%       Position1\=Position2, 
%       ','(
%          holds(
%             pos(Animal,Position1), 
%             Time), 
%          holds(
%             pos(Animal,Position2), 
%             Time+1))), 
%    accessible(Position1,Position2,Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8639).
if(accessible(Position1, Position2, Time),  ({dif(Position1, Position2)}, at(pos(Animal, Position1), Time), at(pos(Animal, Position2), Time+1))).


% [human,time]
% HoldsAt(AbnormalEncroachment(human),time) <->
% (HoldsAt(MountFails(human),time) |
%  ({position,animal1,animal2}
%    HoldsAt(PosDeterminingFluent(human,position),time) &
%    !HoldsAt(ThrowOffFails(animal2,human),time) &
%    Happens(ThrowOff(animal2,human),time) &
%    animal1!=human &
%    Large(animal1) &
%    HoldsAt(Pos(animal1,position),time) &
%    !HoldsAt(Pos(animal1,position),time+1))).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8645).
% From E: 
% 
% <->(
%    holds(
%       abnormalEncroachment(Human), 
%       Time), 
%    ';'(
%       holds(
%          mountFails(Human), 
%          Time), 
%       exists(
%          [Position,Animal1,Animal2], 
%          ','(
%             holds(
%                posDeterminingFluent(Human,Position), 
%                Time), 
%             ','(
%                holds(
%                   not(throwOffFails(Animal2,Human)), 
%                   Time), 
%                ','(
%                   happens(
%                      throwOff(Animal2,Human), 
%                      Time), 
%                   ','(
%                      Animal1\=Human, 
%                      ','(
%                         large(Animal1), 
%                         ','(
%                            holds(
%                               pos(Animal1,Position), 
%                               Time), 
%                            holds(
%                               not(pos(Animal1,Position)), 
%                               Time+1)))))))))).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8645).
at(abnormalEncroachment(Human), Time) <->
    (   at(mountFails(Human), Time)
    ;   exists([Position, Animal1, Animal2],
                (at(posDeterminingFluent(Human, Position), Time), at(not(throwOffFails(Animal2, Human)), Time), happens(throwOff(Animal2, Human), Time), Animal1\=Human, large(Animal1), at(pos(Animal1, Position), Time), at(not(pos(Animal1, Position)), Time+1)))
    ).


% [animal1,animal2,position,time]
% HoldsAt(Pos(animal1,position),time) &
% !HoldsAt(Pos(animal1,position),time+1) &
% !HoldsAt(Pos(animal2,position),time) &
% HoldsAt(Pos(animal2,position),time+1) ->
% (!Large(animal1) |
%  !Large(animal2) |
%  ({human} human=animal2 & HoldsAt(AbnormalEncroachment(human),time))).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8657).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          pos(Animal1,Position), 
%          Time), 
%       ','(
%          holds(
%             not(pos(Animal1,Position)), 
%             Time+1), 
%          ','(
%             holds(
%                not(pos(Animal2,Position)), 
%                Time), 
%             holds(
%                pos(Animal2,Position), 
%                Time+1)))), 
%    ';'(
%       not(large(Animal1)), 
%       ';'(
%          not(large(Animal2)), 
%          thereExists(Human, 
%             ','(
%                Human=Animal2, 
%                holds(
%                   abnormalEncroachment(Human), 
%                   Time)))))).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8657).
if((not(large(Animal1));not(large(Animal2));thereExists(Human,  (equals(Human, Animal2), at(abnormalEncroachment(Human), Time)))),  (at(pos(Animal1, Position), Time), at(not(pos(Animal1, Position)), Time+1), at(not(pos(Animal2, Position)), Time), at(pos(Animal2, Position), Time+1))).


% [animal1,animal2,position1,position2,time]
% animal1!=% animal2 &
% Large(animal1) & Large(animal2) &
% HoldsAt(Pos(animal1,position1),time) &
% HoldsAt(Pos(animal1,position2),time+1) &
% HoldsAt(Pos(animal2,position1),time) &
% HoldsAt(Pos(animal2,position2),time+1) ->
% !{gate} Sides(position1,position2,gate).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8666).
% From E: 
% 
% '->'(
%    ','(
%       Animal1\=Animal2, 
%       ','(
%          large(Animal1), 
%          ','(
%             large(Animal2), 
%             ','(
%                holds(
%                   pos(Animal1,Position1), 
%                   Time), 
%                ','(
%                   holds(
%                      pos(Animal1,Position2), 
%                      Time+1), 
%                   ','(
%                      holds(
%                         pos(Animal2,Position1), 
%                         Time), 
%                      holds(
%                         pos(Animal2,Position2), 
%                         Time+1))))))), 
%    not(thereExists(Gate, 
%           sides(Position1,Position2,Gate)))).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8666).
if(not(thereExists(Gate, sides(Position1, Position2, Gate))),  ({dif(Animal1, Animal2)}, large(Animal1), large(Animal2), at(pos(Animal1, Position1), Time), at(pos(Animal1, Position2), Time+1), at(pos(Animal2, Position1), Time), at(pos(Animal2, Position2), Time+1))).


% [animal1,animal2,position1,position2,time]
% animal1!=% animal2 &
% Large(animal1) & Large(animal2) &
% HoldsAt(Pos(animal1,position1),time) &
% HoldsAt(Pos(animal1,position2),time+1) &
% HoldsAt(Pos(animal2,position2),time) &
% HoldsAt(Pos(animal2,position1),time+1) ->
% !{gate} Sides(position1,position2,gate).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8675).
% From E: 
% 
% '->'(
%    ','(
%       Animal1\=Animal2, 
%       ','(
%          large(Animal1), 
%          ','(
%             large(Animal2), 
%             ','(
%                holds(
%                   pos(Animal1,Position1), 
%                   Time), 
%                ','(
%                   holds(
%                      pos(Animal1,Position2), 
%                      Time+1), 
%                   ','(
%                      holds(
%                         pos(Animal2,Position2), 
%                         Time), 
%                      holds(
%                         pos(Animal2,Position1), 
%                         Time+1))))))), 
%    not(thereExists(Gate, 
%           sides(Position1,Position2,Gate)))).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8675).
if(not(thereExists(Gate, sides(Position1, Position2, Gate))),  ({dif(Animal1, Animal2)}, large(Animal1), large(Animal2), at(pos(Animal1, Position1), Time), at(pos(Animal1, Position2), Time+1), at(pos(Animal2, Position2), Time), at(pos(Animal2, Position1), Time+1))).


% [gate,position1,position2,time]
% HoldsAt(Opened(gate),time) &
% !HoldsAt(Opened(gate),time+1) &
% Sides(position1,position2,gate) ->
% !{animal}
% HoldsAt(Pos(animal,position1),time) &
% HoldsAt(Pos(animal,position2),time+1).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8684).
% From E: 
% 
% '->'(
%    ','(
%       holds(
%          opened(Gate), 
%          Time), 
%       ','(
%          holds(
%             not(opened(Gate)), 
%             Time+1), 
%          sides(Position1,Position2,Gate))), 
%    not(thereExists(Animal, 
%           ','(
%              holds(
%                 pos(Animal,Position1), 
%                 Time), 
%              holds(
%                 pos(Animal,Position2), 
%                 Time+1))))).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8684).
if(not(thereExists(Animal,  (at(pos(Animal, Position1), Time), at(pos(Animal, Position2), Time+1)))),  (at(opened(Gate), Time), at(not(opened(Gate)), Time+1), sides(Position1, Position2, Gate))).

% gate GateAO
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8690).
% From E: 
% 
% t(gate,gateAO).
isa(gateAO,gate).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8692).
% cage CageA
% From E: 
% 
% t(cage,cageA).
isa(cageA,cage).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8694).
% Loc(1)=CageA.
% From E: 
% 
% '='(
%    loc(1), 
%    cageA).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8694).
loc(1,cageA).


% Loc(2)=CageA.
% From E: 
% 
% '='(
%    loc(2), 
%    cageA).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8694).
loc(2,cageA).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8696).
% Loc(3)=CageA.
% From E: 
% 
% '='(
%    loc(3), 
%    cageA).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8696).
loc(3,cageA).


% Loc(4)=CageA.
% From E: 
% 
% '='(
%    loc(4), 
%    cageA).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8696).
loc(4,cageA).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8698).
% Loc(5)=Outside.
% From E: 
% 
% '='(
%    loc(5), 
%    outside).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8698).
loc(5,outside).


% Loc(6)=Outside.
% From E: 
% 
% '='(
%    loc(6), 
%    outside).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8698).
loc(6,outside).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8700).
% Loc(7)=Outside.
% From E: 
% 
% '='(
%    loc(7), 
%    outside).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8700).
loc(7,outside).


% Loc(8)=Outside.
% From E: 
% 
% '='(
%    loc(8), 
%    outside).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8700).
loc(8,outside).


% [position1,position2]
% Neighbor(position1,position2) <->
% ((position1=1 & position2=2) |
%  (position1=1 & position2=3) |
%  (position1=1 & position2=4) |
%  (position1=2 & position2=3) |
%  (position1=2 & position2=4) |
%  (position1=3 & position2=4) |
%  (position1=5 & position2=6) |
%  (position1=5 & position2=7) |
%  (position1=5 & position2=8) |
%  (position1=6 & position2=7) |
%  (position1=6 & position2=8) |
%  (position1=7 & position2=8) |
%  (position2=1 & position1=2) |
%  (position2=1 & position1=3) |
%  (position2=1 & position1=4) |
%  (position2=2 & position1=3) |
%  (position2=2 & position1=4) |
%  (position2=3 & position1=4) |
%  (position2=5 & position1=6) |
%  (position2=5 & position1=7) |
%  (position2=5 & position1=8) |
%  (position2=6 & position1=7) |
%  (position2=6 & position1=8) |
%  (position2=7 & position1=8) |
%  (position1=4 & position2=7) |
%  (position2=4 & position1=7)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8704).
% From E: 
% 
% <->(
%    neighbor(Position1,Position2), 
%    ';'(
%       ','(
%          Position1=1, 
%          Position2=2), 
%       ';'(
%          ','(
%             Position1=1, 
%             Position2=3), 
%          ';'(
%             ','(
%                Position1=1, 
%                Position2=4), 
%             ';'(
%                ','(
%                   Position1=2, 
%                   Position2=3), 
%                ';'(
%                   ','(
%                      Position1=2, 
%                      Position2=4), 
%                   ';'(
%                      ','(
%                         Position1=3, 
%                         Position2=4), 
%                      ';'(
%                         ','(
%                            Position1=5, 
%                            Position2=6), 
%                         ';'(
%                            ','(
%                               Position1=5, 
%                               Position2=7), 
%                            ';'(
%                               ','(
%                                  Position1=5, 
%                                  Position2=8), 
%                               ';'(
%                                  ','(
%                                     Position1=6, 
%                                     Position2=7), 
%                                  ';'(
%                                     ','(
%                                        Position1=6, 
%                                        Position2=8), 
%                                     ';'(
%                                        ','(
%                                           Position1=7, 
%                                           Position2=8), 
%                                        ';'(
%                                           ','(
%                                              Position2=1, 
%                                              Position1=2), 
%                                           ';'(
%                                              ','(
%                                                 Position2=1, 
%                                                 Position1=3), 
%                                              ';'(
%                                                 ','(
%                                                    Position2=1, 
%                                                    Position1=4), 
%                                                 ';'(
%                                                    ','(
%                                                       Position2=2, 
%                                                       Position1=3), 
%                                                    ';'(
%                                                       ','(
%                                                          Position2=2, 
%                                                          Position1=4), 
%                                                       ';'(
%                                                          ','(
%                                                             Position2=3, 
%                                                             Position1=4), 
%                                                          ';'(
%                                                             ','(
%                                                                Position2=5, 
%                                                                Position1=6), 
%                                                             ';'(
%                                                                ','(
%                                                                   Position2=5, 
%                                                                   Position1=7), 
%                                                                ';'(
%                                                                   ','(
%                                                                      Position2=5, 
%                                                                      Position1=8), 
%                                                                   ';'(
%                                                                      ','(
%                                                                         Position2=6, 
%                                                                         Position1=7), 
%                                                                      ';'(
%                                                                         ','(
%                                                                            Position2=6, 
%                                                                            Position1=8), 
%                                                                         ';'(
%                                                                            ','(
%                                                                               Position2=7, 
%                                                                               Position1=8), 
%                                                                            ';'(
%                                                                               ','(
%                                                                                  Position1=4, 
%                                                                                  Position2=7), 
%                                                                               ','(
%                                                                                  Position2=4, 
%                                                                                  Position1=7))))))))))))))))))))))))))).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8704).
neighbor(Position1, Position2) <->
    (   Position1=1,
        Position2=2
    ;   Position1=1,
        Position2=3
    ;   Position1=1,
        Position2=4
    ;   Position1=2,
        Position2=3
    ;   Position1=2,
        Position2=4
    ;   Position1=3,
        Position2=4
    ;   Position1=5,
        Position2=6
    ;   Position1=5,
        Position2=7
    ;   Position1=5,
        Position2=8
    ;   Position1=6,
        Position2=7
    ;   Position1=6,
        Position2=8
    ;   Position1=7,
        Position2=8
    ;   Position2=1,
        Position1=2
    ;   Position2=1,
        Position1=3
    ;   Position2=1,
        Position1=4
    ;   Position2=2,
        Position1=3
    ;   Position2=2,
        Position1=4
    ;   Position2=3,
        Position1=4
    ;   Position2=5,
        Position1=6
    ;   Position2=5,
        Position1=7
    ;   Position2=5,
        Position1=8
    ;   Position2=6,
        Position1=7
    ;   Position2=6,
        Position1=8
    ;   Position2=7,
        Position1=8
    ;   Position1=4,
        Position2=7
    ;   Position2=4,
        Position1=7
    ).


% Side1(GateAO)=4.
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8731).
% From E: 
% 
% '='(
%    side1(gateAO), 4).
side1(gateAO,4).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8733).
% Side2(GateAO)=7.
% From E: 
% 
% '='(
%    side2(gateAO), 7).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8733).
side2(gateAO,7).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8735).
%; End of file.
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%; FILE: examples/AkmanEtAl2004/ZooTest4.1.e
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; @article{Akman:2004,
%;   author = "Varol Akman and Selim T. Erdogan and Joohyung Lee and Vladimir Lifschitz and Hudson Turner",
%;   year = "2004",
%;   title = "Representing the zoo world and the traffic world in the language of the causal calculator",
%;   journal = "Artificial Intelligence",
%;   volume = "153",
%;   pages = "105--140",
%; }
%;

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8762).
% option encoding 3
% From E: 
% 
% ':-'(call_pel_directive(option(encoding,3))).
:- call_pel_directive(option(encoding, 3)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8764).
% load foundations/Root.e
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/Root.e'))).
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8764).
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/EC.e'))).
:- call_pel_directive(load('foundations/EC.e')).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8766).
% load examples/AkmanEtAl2004/ZooWorld.e
% From E: 
% 
% ':-'(call_pel_directive(load('examples/AkmanEtAl2004/ZooWorld.e'))).
:- call_pel_directive(load('examples/AkmanEtAl2004/ZooWorld.e')).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8768).
% human Homer
% From E: 
% 
% t(human,homer).
isa(homer,human).

% elephant Jumbo
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8768).
% From E: 
% 
% t(elephant,jumbo).
isa(jumbo,elephant).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8771).
% Species(Homer)=HumanSpecies.
% From E: 
% 
% '='(
%    species(homer), 
%    humanSpecies).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8771).
species(homer,humanSpecies).


% Adult(Homer).
% From E: 
% 
% adult(homer).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8771).
adult(homer).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8773).
% Species(Jumbo)=ElephantSpecies.
% From E: 
% 
% '='(
%    species(jumbo), 
%    elephantSpecies).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8773).
species(jumbo,elephantSpecies).


% Adult(Jumbo).
% From E: 
% 
% adult(jumbo).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8773).
adult(jumbo).


% !HoldsAt(Opened(GateAO),0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8775).
% From E: 
% 
% holds(
%    not(opened(gateAO)), 0).
initially(not(opened(gateAO))).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8777).
% {position} 


% HoldsAt(Pos(Homer,position),0) & Outside=Loc(position).
% From E: 
% 
% exists(Position, 
%    ','(
%       holds(
%          pos(homer,Position), 0), 
%       '='(outside, 
%          loc(Position)))).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8777).
exists(Position,  (at(pos(homer, Position), 0), outside=loc(Position))).
% {position} 


% HoldsAt(Pos(Jumbo,position),0) & CageA=Loc(position).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8777).
% From E: 
% 
% exists(Position, 
%    ','(
%       holds(
%          pos(jumbo,Position), 0), 
%       '='(cageA, 
%          loc(Position)))).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8777).
exists(Position,  (at(pos(jumbo, Position), 0), cageA=loc(Position))).
% {position} 


% HoldsAt(Pos(Homer,position),4) & CageA=Loc(position).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8779).
% From E: 
% 
% exists(Position, 
%    ','(
%       holds(
%          pos(homer,Position), 4), 
%       '='(cageA, 
%          loc(Position)))).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8779).
exists(Position,  (at(pos(homer, Position), 4), cageA=loc(Position))).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8781).
% {position} 


% HoldsAt(Pos(Jumbo,position),4) & Outside=Loc(position).
% From E: 
% 
% exists(Position, 
%    ','(
%       holds(
%          pos(jumbo,Position), 4), 
%       '='(outside, 
%          loc(Position)))).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8781).
exists(Position,  (at(pos(jumbo, Position), 4), outside=loc(Position))).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8783).
% [human]
 % HoldsAt(PosDeterminingFluent(human,1),4).
% From E: 
% 
% holds(
%    posDeterminingFluent(Human,1), 4).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8783).
at(posDeterminingFluent(Human,1),4).


% [event,animal]
 % !HoldsAt(DoneBy(event,animal),4).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8783).
% From E: 
% 
% holds(
%    not(doneBy(Event,Animal)), 4).
at(not(doneBy(Event,Animal)),4).


%; ccalc.2.0b.8.3 single model
%;HoldsAt(Pos(Homer,7),0).
%;HoldsAt(Pos(Jumbo,2),0).
%;Happens(Move(Jumbo,4),0).
%;Happens(Open(Homer,GateAO),0).
%;Happens(Mount(Homer,Jumbo),1).
%;Happens(ThrowOff(Jumbo,Homer),2).
%;HoldsAt(PosDeterminingFluent(Homer,1),2).
%;Happens(Move(Jumbo,7),3).
%;Happens(Mount(Homer,Jumbo),3).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8797).
% range time 0 4
% From E: 
% 
% ':-'(call_pel_directive(range(time,0,4))).
:- call_pel_directive(range(time, 0, 4)).

% range position 1 8
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8797).
% From E: 
% 
% ':-'(call_pel_directive(range(position,1,8))).
:- call_pel_directive(range(position, 1, 8)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8799).
% range offset 0 0
% From E: 
% 
% ':-'(call_pel_directive(range(offset,0,0))).
:- call_pel_directive(range(offset, 0, 0)).
%; End of file.
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%; FILE: examples/AkmanEtAl2004/ZooTest2.e
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; @article{Akman:2004,
%;   author = "Varol Akman and Selim T. Erdogan and Joohyung Lee and Vladimir Lifschitz and Hudson Turner",
%;   year = "2004",
%;   title = "Representing the zoo world and the traffic world in the language of the causal calculator",
%;   journal = "Artificial Intelligence",
%;   volume = "153",
%;   pages = "105--140",
%; }
%;

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8828).
% option encoding 3
% From E: 
% 
% ':-'(call_pel_directive(option(encoding,3))).
:- call_pel_directive(option(encoding, 3)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8830).
% load foundations/Root.e
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/Root.e'))).
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8830).
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/EC.e'))).
:- call_pel_directive(load('foundations/EC.e')).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8832).
% load examples/AkmanEtAl2004/ZooWorld.e
% From E: 
% 
% ':-'(call_pel_directive(load('examples/AkmanEtAl2004/ZooWorld.e'))).
:- call_pel_directive(load('examples/AkmanEtAl2004/ZooWorld.e')).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8834).
% human Homer
% From E: 
% 
% t(human,homer).
isa(homer,human).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8836).
% Species(Homer)=HumanSpecies.
% From E: 
% 
% '='(
%    species(homer), 
%    humanSpecies).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8836).
species(homer,humanSpecies).


% Adult(Homer).
% From E: 
% 
% adult(homer).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8836).
adult(homer).


% !HoldsAt(Opened(GateAO),0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8838).
% From E: 
% 
% holds(
%    not(opened(gateAO)), 0).
initially(not(opened(gateAO))).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8840).
% {position} 


% HoldsAt(Pos(Homer,position),0) & Outside=Loc(position).
% From E: 
% 
% exists(Position, 
%    ','(
%       holds(
%          pos(homer,Position), 0), 
%       '='(outside, 
%          loc(Position)))).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8840).
exists(Position,  (at(pos(homer, Position), 0), outside=loc(Position))).
% {position} 


% HoldsAt(Pos(Homer,position),2) & CageA=Loc(position).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8840).
% From E: 
% 
% exists(Position, 
%    ','(
%       holds(
%          pos(homer,Position), 2), 
%       '='(cageA, 
%          loc(Position)))).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8840).
exists(Position,  (at(pos(homer, Position), 2), cageA=loc(Position))).


% [human]
 % HoldsAt(PosDeterminingFluent(human,1),2).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8842).
% From E: 
% 
% holds(
%    posDeterminingFluent(Human,1), 2).
at(posDeterminingFluent(Human,1),2).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8844).
% [event,animal]
 % !HoldsAt(DoneBy(event,animal),2).
% From E: 
% 
% holds(
%    not(doneBy(Event,Animal)), 2).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8844).
at(not(doneBy(Event,Animal)),2).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8846).
% range time 0 2
% From E: 
% 
% ':-'(call_pel_directive(range(time,0,2))).
:- call_pel_directive(range(time, 0, 2)).

% range position 1 8
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8846).
% From E: 
% 
% ':-'(call_pel_directive(range(position,1,8))).
:- call_pel_directive(range(position, 1, 8)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8848).
% range offset 0 0
% From E: 
% 
% ':-'(call_pel_directive(range(offset,0,0))).
:- call_pel_directive(range(offset, 0, 0)).
%; End of file.
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%; FILE: examples/AkmanEtAl2004/ZooTest6.e
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; @article{Akman:2004,
%;   author = "Varol Akman and Selim T. Erdogan and Joohyung Lee and Vladimir Lifschitz and Hudson Turner",
%;   year = "2004",
%;   title = "Representing the zoo world and the traffic world in the language of the causal calculator",
%;   journal = "Artificial Intelligence",
%;   volume = "153",
%;   pages = "105--140",
%; }
%;

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8877).
% option encoding 3
% From E: 
% 
% ':-'(call_pel_directive(option(encoding,3))).
:- call_pel_directive(option(encoding, 3)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8879).
% load foundations/Root.e
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/Root.e'))).
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8879).
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/EC.e'))).
:- call_pel_directive(load('foundations/EC.e')).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8881).
% load examples/AkmanEtAl2004/ZooWorld.e
% From E: 
% 
% ':-'(call_pel_directive(load('examples/AkmanEtAl2004/ZooWorld.e'))).
:- call_pel_directive(load('examples/AkmanEtAl2004/ZooWorld.e')).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8883).
% human Homer
% From E: 
% 
% t(human,homer).
isa(homer,human).

% elephant Jumbo
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8883).
% From E: 
% 
% t(elephant,jumbo).
isa(jumbo,elephant).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8886).
% Species(Homer)=HumanSpecies.
% From E: 
% 
% '='(
%    species(homer), 
%    humanSpecies).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8886).
species(homer,humanSpecies).


% Adult(Homer).
% From E: 
% 
% adult(homer).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8886).
adult(homer).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8888).
% Species(Jumbo)=ElephantSpecies.
% From E: 
% 
% '='(
%    species(jumbo), 
%    elephantSpecies).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8888).
species(jumbo,elephantSpecies).


% Adult(Jumbo).
% From E: 
% 
% adult(jumbo).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8888).
adult(jumbo).


% HoldsAt(Mounted(Homer,Jumbo),0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8890).
% From E: 
% 
% holds(
%    mounted(homer,jumbo), 0).
initially(mounted(homer,jumbo)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8892).
% HoldsAt(Pos(Jumbo,1),0).
% From E: 
% 
% holds(
%    pos(jumbo,1), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8892).
initially(pos(jumbo,1)).


% Happens(ThrowOff(Jumbo,Homer),0).
% From E: 
% 
% happens(
%    throwOff(jumbo,homer), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8892).
observe(at(throwOff(jumbo,homer),0)).

% option manualrelease on
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8894).
% From E: 
% 
% ':-'(call_pel_directive(option(manualrelease,on))).
:- call_pel_directive(option(manualrelease, on)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8894).
% [human, animal]
 % !ReleasedAt(Mounted(human, animal),0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8896).
% From E: 
% 
% not(released_at(
%        mounted(Human,Animal), 0)).
not(released_at(mounted(Human,Animal),0)).


% [gate]
 % !ReleasedAt(Opened(gate),0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8896).
% From E: 
% 
% not(released_at(
%        opened(Gate), 0)).
not(released_at(opened(Gate),0)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8898).
% [position]
 % ReleasedAt(Pos(Homer,position),0).
% From E: 
% 
% released_at(
%    pos(homer,Position), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8898).
released_at(pos(homer,Position),0).


% [position]
 % !ReleasedAt(Pos(Jumbo,position),0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8898).
% From E: 
% 
% not(released_at(
%        pos(jumbo,Position), 0)).
not(released_at(pos(jumbo,Position),0)).


% [human]
 % HoldsAt(PosDeterminingFluent(human,1),1).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8900).
% From E: 
% 
% holds(
%    posDeterminingFluent(Human,1), 1).
at(posDeterminingFluent(Human,1),1).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8902).
% [event,animal]
 % !HoldsAt(DoneBy(event,animal),1).
% From E: 
% 
% holds(
%    not(doneBy(Event,Animal)), 1).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8902).
at(not(doneBy(Event,Animal)),1).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8904).
% range time 0 1
% From E: 
% 
% ':-'(call_pel_directive(range(time,0,1))).
:- call_pel_directive(range(time, 0, 1)).

% range position 1 8
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8904).
% From E: 
% 
% ':-'(call_pel_directive(range(position,1,8))).
:- call_pel_directive(range(position, 1, 8)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8906).
% range offset 0 0
% From E: 
% 
% ':-'(call_pel_directive(range(offset,0,0))).
:- call_pel_directive(range(offset, 0, 0)).
%; End of file.
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%; FILE: examples/AkmanEtAl2004/ZooTest1.e
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors: 
%; IBM - Initial implementation
%;
%; @article{Akman:2004,
%;   author = "Varol Akman and Selim T. Erdogan and Joohyung Lee and Vladimir Lifschitz and Hudson Turner",
%;   year = "2004",
%;   title = "Representing the zoo world and the traffic world in the language of the causal calculator",
%;   journal = "Artificial Intelligence",
%;   volume = "153",
%;   pages = "105--140",
%; }
%;

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8935).
% option encoding 3
% From E: 
% 
% ':-'(call_pel_directive(option(encoding,3))).
:- call_pel_directive(option(encoding, 3)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8937).
% load foundations/Root.e
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/Root.e'))).
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8937).
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/EC.e'))).
:- call_pel_directive(load('foundations/EC.e')).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8939).
% load examples/AkmanEtAl2004/ZooWorld.e
% From E: 
% 
% ':-'(call_pel_directive(load('examples/AkmanEtAl2004/ZooWorld.e'))).
:- call_pel_directive(load('examples/AkmanEtAl2004/ZooWorld.e')).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8941).
% human Homer
% From E: 
% 
% t(human,homer).
isa(homer,human).

% elephant Jumbo
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8941).
% From E: 
% 
% t(elephant,jumbo).
isa(jumbo,elephant).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8944).
% Species(Homer)=HumanSpecies.
% From E: 
% 
% '='(
%    species(homer), 
%    humanSpecies).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8944).
species(homer,humanSpecies).


% Adult(Homer).
% From E: 
% 
% adult(homer).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8944).
adult(homer).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8946).
% Species(Jumbo)=ElephantSpecies.
% From E: 
% 
% '='(
%    species(jumbo), 
%    elephantSpecies).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8946).
species(jumbo,elephantSpecies).


% Adult(Jumbo).
% From E: 
% 
% adult(jumbo).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8946).
adult(jumbo).


% !HoldsAt(Opened(GateAO),0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8948).
% From E: 
% 
% holds(
%    not(opened(gateAO)), 0).
initially(not(opened(gateAO))).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8950).
% HoldsAt(Pos(Homer,6),0).
% From E: 
% 
% holds(
%    pos(homer,6), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8950).
initially(pos(homer,6)).


% [time]
 % HoldsAt(Pos(Jumbo,1),time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8950).
% From E: 
% 
% holds(
%    pos(jumbo,1), 
%    Time).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8950).
at(pos(jumbo,1),Time).


%; goal


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8954).
% HoldsAt(Mounted(Homer,Jumbo),4).
% From E: 
% 
% holds(
%    mounted(homer,jumbo), 4).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8954).
at(mounted(homer,jumbo),4).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8956).
%;ABDUCE
%;Happens(Move(Homer,7),0).
%;Happens(Open(Homer,GateAO),1).
%;Happens(Move(Homer,4),2).
%;Happens(Mount(Homer,Jumbo),3).
% [human]
 
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8962).
% HoldsAt(PosDeterminingFluent(human,1),4).
% From E: 
% 
% holds(
%    posDeterminingFluent(Human,1), 4).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8962).
at(posDeterminingFluent(Human,1),4).


% [event,animal]
 % !HoldsAt(DoneBy(event,animal),4).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8962).
% From E: 
% 
% holds(
%    not(doneBy(Event,Animal)), 4).
at(not(doneBy(Event,Animal)),4).

% range time 0 4
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8964).
% From E: 
% 
% ':-'(call_pel_directive(range(time,0,4))).
:- call_pel_directive(range(time, 0, 4)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8966).
% range position 1 8
% From E: 
% 
% ':-'(call_pel_directive(range(position,1,8))).
:- call_pel_directive(range(position, 1, 8)).

% range offset 0 0
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8966).
% From E: 
% 
% ':-'(call_pel_directive(range(offset,0,0))).
:- call_pel_directive(range(offset, 0, 0)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8969).
% option timediff off
% From E: 
% 
% ':-'(call_pel_directive(option(timediff,off))).
:- call_pel_directive(option(timediff, off)).

% option modeldiff on
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8969).
% From E: 
% 
% ':-'(call_pel_directive(option(modeldiff,on))).
:- call_pel_directive(option(modeldiff, on)).
%; End of file.
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%; FILE: examples/AkmanEtAl2004/ZooTest5.2.e
%; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; @article{Akman:2004,
%;   author = "Varol Akman and Selim T. Erdogan and Joohyung Lee and Vladimir Lifschitz and Hudson Turner",
%;   year = "2004",
%;   title = "Representing the zoo world and the traffic world in the language of the causal calculator",
%;   journal = "Artificial Intelligence",
%;   volume = "153",
%;   pages = "105--140",
%; }
%;

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',8999).
% option encoding 3
% From E: 
% 
% ':-'(call_pel_directive(option(encoding,3))).
:- call_pel_directive(option(encoding, 3)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',9001).
% load foundations/Root.e
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/Root.e'))).
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',9001).
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/EC.e'))).
:- call_pel_directive(load('foundations/EC.e')).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',9003).
% load examples/AkmanEtAl2004/ZooWorld.e
% From E: 
% 
% ':-'(call_pel_directive(load('examples/AkmanEtAl2004/ZooWorld.e'))).
:- call_pel_directive(load('examples/AkmanEtAl2004/ZooWorld.e')).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',9005).
% human Homer
% From E: 
% 
% t(human,homer).
isa(homer,human).

% elephant Jumbo
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',9005).
% From E: 
% 
% t(elephant,jumbo).
isa(jumbo,elephant).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',9007).
% horse Silver
% From E: 
% 
% t(horse,silver).
isa(silver,horse).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',9009).
% Species(Homer)=HumanSpecies.
% From E: 
% 
% '='(
%    species(homer), 
%    humanSpecies).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',9009).
species(homer,humanSpecies).


% Adult(Homer).
% From E: 
% 
% adult(homer).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',9009).
adult(homer).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',9011).
% Species(Jumbo)=ElephantSpecies.
% From E: 
% 
% '='(
%    species(jumbo), 
%    elephantSpecies).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',9011).
species(jumbo,elephantSpecies).


% Adult(Jumbo).
% From E: 
% 
% adult(jumbo).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',9011).
adult(jumbo).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',9013).
% Species(Silver)=HorseSpecies.
% From E: 
% 
% '='(
%    species(silver), 
%    horseSpecies).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',9013).
species(silver,horseSpecies).


% Adult(Silver).
% From E: 
% 
% adult(silver).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',9013).
adult(silver).
% {position}


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',9017).
% !HoldsAt(Pos(Homer,position),0) &
% HoldsAt(Pos(Jumbo,position),0) &
% HoldsAt(Pos(Homer,position),1) &
% !HoldsAt(Pos(Jumbo,position),1).
% From E: 
% 
% exists(Position, 
%    ','(
%       holds(
%          not(pos(homer,Position)), 0), 
%       ','(
%          holds(
%             pos(jumbo,Position), 0), 
%          ','(
%             holds(
%                pos(homer,Position), 1), 
%             holds(
%                not(pos(jumbo,Position)), 1))))).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',9017).
exists(Position,  (at(not(pos(homer, Position)), 0), at(pos(jumbo, Position), 0), at(pos(homer, Position), 1), at(not(pos(jumbo, Position)), 1))).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',9021).
% [animal,time]
 % !Happens(ThrowOff(animal,Homer),time).
% From E: 
% 
% not(happens(
%        throwOff(Animal,homer), 
%        Time)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',9021).
not(happens(throwOff(Animal,homer),Time)).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',9023).
% [human]
 % HoldsAt(PosDeterminingFluent(human,1),1).
% From E: 
% 
% holds(
%    posDeterminingFluent(Human,1), 1).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',9023).
at(posDeterminingFluent(Human,1),1).


% [event,animal]
 % !HoldsAt(DoneBy(event,animal),1).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',9023).
% From E: 
% 
% holds(
%    not(doneBy(Event,Animal)), 1).
at(not(doneBy(Event,Animal)),1).


%;HoldsAt(Opened(GateAO),0).
%;HoldsAt(Pos(Homer,3),0).
%;HoldsAt(Pos(Jumbo,2),0).
%;HoldsAt(Pos(Silver,7),0).
%;Happens(Move(Jumbo,4),0).
%;Happens(Move(Silver,8),0).
%;Happens(Mount(Homer,Jumbo),0).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',9034).
% range time 0 1
% From E: 
% 
% ':-'(call_pel_directive(range(time,0,1))).
:- call_pel_directive(range(time, 0, 1)).

% range position 1 8
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',9034).
% From E: 
% 
% ':-'(call_pel_directive(range(position,1,8))).
:- call_pel_directive(range(position, 1, 8)).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',9036).
% range offset 0 0
% From E: 
% 
% ':-'(call_pel_directive(range(offset,0,0))).
:- call_pel_directive(range(offset, 0, 0)).
%; End of file.
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e',9038).
% From E: 
% 
% ':-'(call_pel_directive(translate(ending,'/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e.lps'))).
:- call_pel_directive(translate(ending,
                                '/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/ec_reader_test_examples.e.lps')).
