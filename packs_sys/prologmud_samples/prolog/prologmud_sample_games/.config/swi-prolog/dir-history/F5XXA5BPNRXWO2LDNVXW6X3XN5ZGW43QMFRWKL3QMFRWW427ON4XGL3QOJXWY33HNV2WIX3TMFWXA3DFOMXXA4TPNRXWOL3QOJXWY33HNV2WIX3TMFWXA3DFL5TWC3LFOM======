_HiStOrY_V2_
srv_mu_main.\040
mu:srv_mu.\040
start_network.\040
try_zebra.\040
start_all.\040
qsave_logicmoo.\040
_69246=(loves(_69258,_69260),~knows(_69260,tHuman(_69258))),must(args_enforce_bound(_69246,_69290)),writeq(_69290).\040
_69246=(loves(_69258,_69260),~knows(_69260,tHuman(_69258))),must(args_constrain(_69246,_69290)),writeq(_69290).\040
_69246=(loves(_69258,_69260),~knows(_69260,tHuman(_69258))),must(args_enforce(_69246,_69290)),writeq(_69290).\040
_69246=(loves(_69258,_69260),~knows(_69260,tHuman(_69258))),args_enforce(_69246,_69286),writeq(_69286),args_remove_constraints(_69246,_69308),writeq(_69308).\040
start_all.
start_network.\040
srv_mu_main.\040
mu:srv_mu.\040
start_network.\040
try_zebra.\040
start_all.\040
qsave_logicmoo.\040
test_chat80_regressions.
start_all.
start_network.\040
srv_mu_main.\040
mu:srv_mu.\040
start_network.\040
try_zebra.\040
start_all.\040
qsave_logicmoo.\040
run_pipeline('What\040are\040the\040oceans\040that\040border\040african\040countries\040and\040that\040border\040asian\040countries\040?').
start_all.
start_network.\040
srv_mu_main.\040
mu:srv_mu.\040
start_network.\040
try_zebra.\040
start_all.\040
qsave_logicmoo.\040
run_pipeline(input='what\040countries\040are\040there\040in\040europe\040?',[qplan=_],O).
start_all.
start_network.\040
srv_mu_main.\040
mu:srv_mu.\040
start_network.\040
try_zebra.\040
start_all.\040
qsave_logicmoo.\040
run_pipeline(input='what\040countries\040are\040there\040in\040europe\040?',[qplan=_],O).
start_all.
start_network.\040
srv_mu_main.\040
mu:srv_mu.\040
start_network.\040
try_zebra.\040
start_all.\040
qsave_logicmoo.\040
run_pipeline(input='All\040persons\040are\040happy.',\040[aceKif(p)=_],\040O).
start_all.
start_network.\040
srv_mu_main.\040
mu:srv_mu.\040
start_network.\040
try_zebra.\040
start_all.\040
qsave_logicmoo.\040
animals_test.
gripe_time(1.0,\040must(coerce("s",\040vtDirection,\040_))).
forall(get_test_verbs(V),\040lex_info(V)).
run_pipeline(input='A\040person\040who\040loves\040all\040animals\040is\040loved\040by\040someone.',\040[aceKif(p)=_],O).
run_tests.
lisitng(run_tests).
ec_common:run_tests.
threads.
make.
compile_it.
compiling.
[compile_mud_server].
make.
[compile_mud_server].
cls.
[compile_mud_server].
make.
compile_logicmoo.
qcompile_logicmoo.
qsave_logicmoo.
make.
qsave_logicmoo.
make.
qsave_logicmoo.
srv_mu.
make.
srv_mu.
load_nomic_mu.
make.
mu:srv_mu.
threads.
lar.
qsave_program(foo).
pwd.
qsave_program(foo).
qcompile(run_mud_server).
process_create(path(true),\040[],\040[]),!.
