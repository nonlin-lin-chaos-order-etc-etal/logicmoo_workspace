_HiStOrY_V2_
start_mud_telnet.
is_listing_hidden(skipLarge).
process_create(path(true),\040[],\040[]).
\134object_page(eggdrop_want:ctrl_pass/1,[header(true)]).
xlisting(call1(var)-body(unify(true))).
xlisting(pldoc).
xlisting_web_file.
use_module(library(xlisting_web)).
use_module(library(xlisting/xlisting_web)).
is_pfc_file.
mmake.
register_logicmoo_browser.
listing(prover_name).
import_module(baseKB,xlisting_web,end).
add_import_module(baseKB,xlisting_web,end).
listing(prover_name).
listing(baseKB:prover_name).
threads.
listing(prover_name).
mmake.
mu:srv_mu.\040
mmake,\012autodoc_test.\040
mmake,\012autodoc_test.
make.,\012edit1term.
edit1term.
mmake,\012autodoc_test.
get_param_req('ASK','ASK').
reset_assertion_display.
mmake,\012autodoc_test.
listing(baseKB:prover_name).
register_logicmoo_browser.
listing(html/3).
test_tmw.
test_tmw2.
test_tmw.
make.
test_tmw2.
make.
test_tmw2.
test_tmw.
listing(html/3).
mmake.
xlisting(cross_module_call).
lisitng(check:cross_module_call(A,\040Call)).
listing(cross_module_call(A,\040Call)).
mmake.
listing(cross_module_call(A,\040Call)).
test_tmw.
listing(cross_module_call).
listing(make_safe_html).
cls.
listing(make_safe_html).
cls.
listing(make_safe_html).
cls.
make.
listing(html_write:html/3).
listing(make_safe_html).
lisitng(permision\012_error).
lisitng(permision_error).
mmake.
mu:srv_mu.\040
mmake,\012autodoc_test.\040
mmake.
mu:srv_mu.
mmake.
thrads.
mmake.
is_html_mode.
sanity_test_000.
x123.
mmake.
x123.
mmake.
x123.
mmake.
x123.
mmake.
x123.
threads.
mmmake.
x124.
mmmake.
mmake.
x124.
show_map_legend.
listing(bformat).
mmake.
listing(bformat).
x124.
call_with_time_limit(2,x124).
mmake.
call_with_time_limit(2,x124).
x124.
mmake.
x124.
cls.
x124.
threads.
tdebug(\040'httpd@3020_1').
