_HiStOrY_V2_
charniak_pos('The\040taking\040inventory\040action\040translates\040into\040I6\040as\040"Inv".',POS),nl,writeq(pos=POS),guess_pretty1(POS),!.
set_prolog_flag(toplevel_print_factorized,true).
charniak_pos('The\040taking\040inventory\040action\040translates\040into\040I6\040as\040"Inv".',POS),nl,writeq(pos=POS),guess_pretty1(POS),!.
mmake.
charniak_pos('The\040taking\040inventory\040action\040translates\040into\040I6\040as\040"Inv".',POS),nl,guess_pretty1(POS),!.
mmake.
charniak_pos('The\040taking\040inventory\040action\040translates\040into\040I6\040as\040"Inv".',POS),nl,guess_pretty1(POS),!.
mmake.
charniak_pos('The\040taking\040inventory\040action\040translates\040into\040I6\040as\040"Inv".',POS),nl,guess_pretty1(POS),!.
set_prolog_flag(toplevel_print_factorized,false).
charniak_pos('The\040taking\040inventory\040action\040translates\040into\040I6\040as\040"Inv".',POS),nl,guess_pretty1(POS),!.
p_n_atom(foo,X).
p_n_atom(foo(1),X).
p_n_atom(foo(1,two),X).
p_n_atom(foo(1,two,a),X).
p_n_atom(foo(1,two,a),T).
p_n_atom(foo(1,two,andit),T).
p_n_atom(foo(1,two,andit),T1).
rtrace(p_n_atomfoo(1,two,andit),T1).
rtrace(p_n_atom(foo(1,two,andit),T1)).
mmake.
rtrace(p_n_atom(foo(1,two,andit),T1)).
mmake.
rtrace(p_n_atom(foo(1,two,andit),T1)).
mmake.
charniak_pos('The\040taking\040inventory\040action\040translates\040into\040I6\040as\040"Inv".',POS),nl,guess_pretty1(POS),!.
mmake.
charniak_pos('The\040taking\040inventory\040action\040translates\040into\040I6\040as\040"Inv".',POS),nl,guess_pretty1(POS),!.
mmake.
charniak_pos('The\040taking\040inventory\040action\040translates\040into\040I6\040as\040"Inv".',POS),nl,guess_pretty1(POS),!.
charniak_pos('The\040taking\040inventory\040action\040translates\040into\040I6\040as\040"Inv".',POS).
mmake.
charniak_pos('The\040taking\040inventory\040action\040translates\040into\040I6\040as\040"Inv".',POS).
charniak_pos('The\040taking\040inventory\040action\040translates\040into\040I6\040as\040"Inv".',POS),term_variables(POS,Vs).
charniak_pos('The\040taking\040inventory\040action\040translates\040into\040I6\040as\040"Inv".',POS),term_variables(POS,Vs),writeq(Vs).
charniak_pos('The\040taking\040inventory\040action\040translates\040into\040I6\040as\040"Inv".',POS),term_variables(POS,Vs),writeq(Vs),wdmsg(POS).
mmake.
charniak_pos('The\040taking\040inventory\040action\040translates\040into\040I6\040as\040"Inv".',POS),term_variables(POS,Vs),writeq(Vs),wdmsg(POS).
put(96).
put(46).
mmake.
put(46).
charniak_pos('The\040taking\040inventory\040action\040translates\040into\040I6\040as\040"Inv".',POS),term_variables(POS,Vs),writeq(Vs),wdmsg(POS).
mmake.
flag('$ec_portray',\040N,\040N+1).
flag('$ec_portray',\040N,\0400).
mmake.
flag('$ec_portray',\040N,\0400).
charniak_pos('The\040taking\040inventory\040action\040translates\040into\040I6\040as\040"Inv".',POS),term_variables(POS,Vs),writeq(Vs),wdmsg(POS).
mmake.
charniak_pos('The\040taking\040inventory\040action\040translates\040into\040I6\040as\040"Inv".',POS),term_variables(POS,Vs),writeq(Vs),wdmsg(POS).
mmake.
charniak_pos('The\040taking\040inventory\040action\040translates\040into\040I6\040as\040"Inv".',POS),term_variables(POS,Vs),writeq(Vs),wdmsg(POS).
mmake.
charniak_pos('The\040taking\040inventory\040action\040translates\040into\040I6\040as\040"Inv".',POS),term_variables(POS,Vs),writeq(Vs),wdmsg(POS).
mmake.
charniak_pos('The\040taking\040inventory\040action\040translates\040into\040I6\040as\040"Inv".',POS),term_variables(POS,Vs),writeq(Vs),wdmsg(POS).
mmake.
charniak_pos('The\040taking\040inventory\040action\040translates\040into\040I6\040as\040"Inv".',POS),term_variables(POS,Vs),writeq(Vs),wdmsg(POS).
clause_to_string_et([_,_],S).
clause_to_string_et([_,_],S),writeq(S).
mmake.
clause_to_string_et([_,_],S),writeq(S).
mmake.
clause_to_string_et([_,_],S),writeq(S).
rtrace(clause_to_string_et([_,_],S)),writeq(S).
rtrace(clause_to_string_et([X,_],S)),writeq(S).
mmake.
rtrace(clause_to_string_et([X,_],S)),writeq(S).
get_var_name(X,Prev).
mmake.
get_var_name(X,Prev).
rtrace(clause_to_string_et([X,_],S)),writeq(S).
mmake.
rtrace(clause_to_string_et([X,_],S)),writeq(S).
mmake.
rtrace(clause_to_string_et([X,_],S)),writeq(S).
mmake.
rtrace(clause_to_string_et([X,_],S)),writeq(S).
cls.
rtrace(clause_to_string_et([X,_],S)),writeq(S).
rtrace(clause_to_string([X,_],S)),writeq(S).
rtrace(clause_to_string_et([X,_],S)),writeq(S).
cls.
make.
cls.
rtrace(clause_to_string_et([X,_],S)),writeq(S).
lisitng(merge_options).
mmake.
lisitng(merge_options).
rtrace(clause_to_string_et([X,_],S)),writeq(S).
mmake.
rtrace(clause_to_string_et([X,_],S)),writeq(S).
mmake.
rtrace(clause_to_string_et([X,_],S)),writeq(S).
term_to_atom(_,X).
mmake.
rtrace(clause_to_string_et([X,_],S)),writeq(S).
mmake.
rtrace(clause_to_string_et([X,_],S)),writeq(S).
